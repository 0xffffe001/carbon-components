{"version":3,"sources":["webpack:///webpack/bootstrap 050a31bba31b2804def7","webpack:///./consumables/js/es2015/index.js","webpack:///./consumables/js/es2015/checkbox.js","webpack:///./consumables/js/es2015/file-uploader.js","webpack:///external \"Element.matches\"","webpack:///external \"Object.assign\"","webpack:///external \"Array.from\"","webpack:///./consumables/js/es2015/fab.js","webpack:///./consumables/js/polyfills/event-matches.js","webpack:///./consumables/js/misc/on.js","webpack:///./consumables/js/es2015/content-switcher.js","webpack:///external \"CustomEvent\"","webpack:///./consumables/js/polyfills/toggle-class.js","webpack:///./consumables/js/es2015/tabs.js","webpack:///external \"Math.sign\"","webpack:///./consumables/js/es2015/overflow-menu.js","webpack:///./consumables/js/es2015/modals.js","webpack:///./consumables/js/es2015/header.js","webpack:///./consumables/js/es2015/toolbars.js","webpack:///./consumables/js/es2015/loading.js","webpack:///./consumables/js/es2015/dropdown.js","webpack:///./consumables/js/es2015/card.js","webpack:///./consumables/js/es2015/number-input.js","webpack:///./consumables/js/es2015/responsive-table.js","webpack:///./consumables/js/misc/resize.js","webpack:///./consumables/js/es2015/table.js","webpack:///./consumables/js/es2015/detail-page-header.js","webpack:///./~/lodash.debounce/index.js","webpack:///./consumables/js/es2015/left-nav.js","webpack:///./consumables/js/es2015/unified-header.js","webpack:///./consumables/js/es2015/inline-left-nav.js","webpack:///./consumables/js/es2015/profile-switcher.js","webpack:///./consumables/js/es2015/pagination.js","webpack:///./consumables/js/es2015/search-with-options.js","webpack:///./consumables/js/es2015/accordion.js","webpack:///./consumables/js/es2015/copy-btn.js"],"names":["settings","initCheckbox","FabButton","FileUploader","ContentSwitcher","Tab","OverflowMenu","Modal","HeaderNav","LeftNav","Toolbars","Loading","Dropdown","Card","NumberInput","ResponsiveTable","Table","DetailPageHeader","ProfileSwitcher","Pagination","Accordion","init","disableAutoInit","document","readyState","addEventListener","setTimeout","listener","event","element","target","tagName","type","hasAttribute","checked","setAttribute","removeAttribute","doc","removeEventListener","release","options","nodeType","Node","ELEMENT_NODE","TypeError","Object","assign","create","constructor","labelNode","nextElementSibling","ownerDocument","querySelector","selectorLabel","components","set","updateLabel","fileName","files","length","dataset","multipleCaption","replace","value","split","pop","textContent","delete","get","effectiveOptions","DOCUMENT_NODE","Error","matches","selectorInit","querySelectorAll","forEach","WeakMap","toggle","preventDefault","state","has","eventMatches","selector","traverse","currentTarget","parentNode","on","args","handleClick","input","_changeActive","button","selectorButton","setActive","item","itemLink","selectorLink","link","selectorButtons","classActive","callback","eventStart","CustomEvent","eventBeforeSelected","bubbles","cancelable","detail","dispatchEvent","eventAfterSelected","error","canceled","selectorButtonSelected","toggleClass","name","add","classList","contains","handleKeyDown","selected","updateTriggerText","trigger","selectorTrigger","updateMenuState","triggerNode","offsetParent","direction","Left","Right","ArrowLeft","ArrowRight","key","keyIdentifier","buttons","nextIndex","Math","max","indexOf","nextIndexLooped","sign","focus","selectorMenu","classHidden","selectorTriggerText","optionMenu","selectorOptionMenu","hDocumentClick","handleDocumentClick","hDocumentKeyPress","handleKeyPress","remove","isOfSelf","shouldBeOpen","eventName","emitEvent","which","eventBeforeShown","eventAfterShown","eventBeforeHidden","eventAfterHidden","actionHandlers","shown","hidden","evt","capitalizedName","toUpperCase","substr","eventBefore","eventAfter","getTransitionDuration","computedStyle","defaultView","getComputedStyle","durations","transitionDuration","map","parseFloat","filter","duration","isNaN","hookCloseActions","hide","keydownHandler","body","visible","finished","finishedTransition","classVisible","classNoScroll","launchingElementOrEvent","launchingElementOrEventOmitted","launchingElement","delegateTarget","launchingEvent","_changeState","attribInitTarget","modalElements","getAttribute","modal","show","shownAlready","offsetWidth","offsetHeight","console","warn","menuNode","toggleNav","selectorItemLink","e","select","isActive","defaultNotPrevented","triggerLabelNode","selectorTriggerLabel","activatedElement","initiatingEvent","itemElement","selectorItem","handler","headerElements","searchFieldNode","listIconsSearchActionTarget","handleActionClick","searchActionNode","active","dropdown","setCloseOnBlur","hFocusIn","itemToSelect","dropdownType","firstElementChild","innerHTML","classSelected","parentElement","selectorItemSelected","hasFocusin","window","focusinEventName","cardKeyPress","card","selectorCard","activeElement","cards","ie","numberInput","stepUp","stepDown","container","expandCells","selectorExpandCells","expandableRows","selectorExpandableRows","parentRows","selectorParentRows","tableBody","selectorTableBody","zebraStripe","initExpandableRows","initOverflowMenus","eventElement","eventTrigger","eventHandlers","expand","sort","selectorOverflowMenu","selectorCheckbox","selectorOverflowMenuIcon","selectorOverflowMenuOptions","classParentRowEven","classExpandableRow","classExpandableRowEven","classExpandableRowHidden","classTableSortAscending","eventParentContainer","getEventDetails","data","label","previousValue","initialEvt","index","removeChild","menuMap","menu","placeOverflow","appendChild","icon","position","getBoundingClientRect","style","top","scrollY","left","right","toggleRowExpand","parent","undefined","insertBefore","toggleSort","toggleSelectAll","inputs","optimizedResize","callbacks","running","runCallbacks","resize","requestAnimationFrame","addCallback","push","title","selectorTitle","row","selectorRow","checkbox","toggleState","newState","classSortState","classCheckState","eventBeforeSortToggled","eventAfterSortToggled","eventBeforeCheckToggled","eventAfterCheckToggled","debouncedScroll","handleScroll","bind","slideUp","leftNavSectionActive","hookOpenActions","hookListSectionEvents","hookListItemsEvents","classActiveLeftNav","selectorLeftNavToggleOpen","classActiveTrigger","selectorLeftNav","leftNavContainer","selectedNav","selectedNavValue","leftNavSection","selectedNavLink","selectorLeftNavSectionLink","leftNav","leftNavSections","selectorLeftNavSections","classNavSection","classNavSectionTransition","children","classNavSectionLink","classNavHeaderTitle","selectedNavTitle","currentLeftNavList","selectorLeftNavList","newLeftNavList","currentLeftNavItems","selectorLeftNavListItem","reverse","newLeftNavItems","fadeOutTime","counter","counterIteration","classItemFade","classListHidden","classListTop","openBtn","closeBtn","selectorLeftNavToggleClose","tabIndex","toggleMenu","closeMenu","handleSectionItemClick","selectorLeftNavCurrentSectionTitle","leftNavList","list","leftNavItem","childItem","selectorLeftNavNestedListItem","hasChildren","selectorLeftNavListItemHasChildren","flyoutItem","selectorLeftNavFlyoutItem","addActiveListItem","selectorLeftNavFlyoutMenu","flyoutMenu","classFlyoutDisplayed","handleNestedListClick","offsetTop","scrollTop","offsetLeft","round","flyouts","selectorLeftNavListItemHasFlyout","flyout","flyoutMenus","selectorLeftNavAllListItems","currentItem","classActiveLeftNavListItem","hideAllFlyoutMenus","clickTarget","isToggleBtn","isOpen","isUnifiedHeader","shouldClose","flyoutOpen","listItem","classExpandedLeftNavListItem","listItems","selectorLeftNavNestedList","selectorLeftNavListItemLink","leftNavSectionItem","selectorLeftNavSection","selectedLeftNavSectionItem","selectorLeftNavCurrentSection","selectedLeftNavSectionItemTitle","selectedLeftNavSectionItemIcon","selectorLeftNavCurrentSectionIcon","selectedLeftNavSectionItemUse","selectedLeftNavSectionValue","leftNavCurrentSection","leftNavSectionItemLink","leftNavSectionItemIcon","selectorLeftNavSectionIcon","leftNavSectionItemIconUse","leftNavSectionValue","newLeftNavSectionItem","createElement","newLeftNavSectionItemAnchor","classNavSectionAnchor","newLeftNavSectionItemIcon","cloneNode","newLeftNavSectionItemLink","animateNavSection","animateNavList","firstChild","selectorLeftNavArrowIcon","classItemHasChildren","classItemHidden","UnifiedHeader","InlineLeftNav","leftNavItemWithChildren","selectorAccountDropdown","classLinkedIcon","linkedAccount","selectorAccountSlLinked","isLinked","linkedIcon","selectorToggle","getLinkedData","determineSwitcherValues","handleBlur","classSwitcherOpen","selectorLinkedAccount","isToggle","isHovered","linkedElement","nameElement","selectorAccount","regionElement","selectorRegion","orgElement","selectorOrg","spaceElement","selectorSpace","menuElement","nameDropdownValue","selectorAccountLinked","regionDropdownValue","selectorRegionDropdown","orgDropdownValue","selectorOrgDropdown","spaceDropdownValue","selectorSpaceDropdown","nameShort","orgShort","spaceShort","width","slice","selectorProfileSwitcher","selectorDropdown","selectorAccountSlDropdown","evtName","selectorPageBackward","eventPageChange","selectorPageForward","selectorItemsPerPageInput","eventItemsPerPage","selectorPageNumberInput","eventPageNumber","SearchWithOptions","selectorToggleLayoutBtn","toggleLayout","btn","iconContainers","selectorIconContainer","isHidden","classHiddenContainer","accordionItem","handleKeypress","keyCode","CopyBtn","feedback","feedbackTooltip","classShowFeedback","timeoutValue"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7BA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAhCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AA0BA,KAAMA,WAAW,EAAjB;;AAEA;;;;;;;;;SAqBEA,Q,GAAAA,Q;SAOAC,Y;SAMAC,S;SAMAC,Y;SAMAC,e;SAMAC,G;SAMAC,Y;SAMAC,K;SAMAC,S;SAMCC,O;SAMDC,Q;SAMAC,O;SAMAC,Q;SAMAC,I;SAMAC,W;SAMAC,e;SAMAC,K;SAMAC,gB;SAMAC,e;SAMAC,U;SAMAC,S;;AAGF;;;;;;;;;;;AAWA,KAAMC,OAAO,SAAPA,IAAO,GAAM;AACjB,OAAI,CAACrB,SAASsB,eAAd,EAA+B;AAC7B;AACA,mBAAUD,IAAV;AACA,4BAAaA,IAAb;AACA,+BAAgBA,IAAhB;AACA,oBAAIA,IAAJ;AACA,4BAAaA,IAAb;AACA,sBAAMA,IAAN;AACA,wBAASA,IAAT;AACA,uBAAQA,IAAR;AACA,wBAASA,IAAT;AACA,oBAAKA,IAAL;AACA,2BAAYA,IAAZ;AACA,+BAAgBA,IAAhB;AACA,qBAAMA,IAAN;AACA,gCAAiBA,IAAjB;AACA,uBAAQA,IAAR;AACA,6BAAcA,IAAd;AACA,6BAAcA,IAAd;AACA,+BAAgBA,IAAhB;AACA,0BAAWA,IAAX;AACA,iCAAkBA,IAAlB;AACA,yBAAUA,IAAV;AACA,uBAAQA,IAAR;AACD;AACF,EA1BD;;AA4BA,KAAIE,SAASC,UAAT,KAAwB,SAA5B,EAAuC;AACrCD,YAASE,gBAAT,CAA0B,kBAA1B,EAA8CJ,IAA9C;AACD,EAFD,MAEO;AACL;AACA;AACAK,cAAWL,IAAX,EAAiB,CAAjB;AACD,E;;;;;;;;;;;AClOD,UAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,OAAMC,UAAUD,MAAME,MAAtB;AACA,OAAID,QAAQE,OAAR,KAAoB,OAApB,IAA+BF,QAAQG,IAAR,KAAiB,UAAhD,IAA8DH,QAAQI,YAAR,CAAqB,SAArB,MAAoCJ,QAAQK,OAA9G,EAAuH;AACrH,SAAIL,QAAQK,OAAZ,EAAqB;AACnBL,eAAQM,YAAR,CAAqB,SAArB,EAAgC,EAAhC;AACD,MAFD,MAEO;AACLN,eAAQO,eAAR,CAAwB,SAAxB;AACD;AACF;AACF;;AAED;;;;;;AAMA,UAASnC,YAAT,GAAsC;AAAA,OAAhBoC,GAAgB,uEAAVd,QAAU;;AACpCc,OAAIC,mBAAJ,CAAwB,QAAxB,EAAkCX,QAAlC,EADoC,CACS;AAC7CU,OAAIZ,gBAAJ,CAAqB,QAArB,EAA+BE,QAA/B;AACA,UAAO;AACLY,YADK,qBACK;AACRF,WAAIC,mBAAJ,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,cAAO,IAAP;AACD;AAJI,IAAP;AAMD;;mBAEc1B,Y;;;;;;;;;;;;;;AC5Bf;;AACA;;AACA;;;;;;KAEqBE,Y;AACnB;;;;;;;AAOA,yBAAY0B,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;;AAEA,UAAKS,SAAL,GAAiB,KAAKpB,OAAL,CAAaqB,kBAAb,IAAmC,KAAKrB,OAAL,CAAasB,aAAb,CAA2BC,aAA3B,sBAA4D,KAAKZ,OAAL,CAAaa,aAAzE,CAApD;;AAEA,UAAKL,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEAA,aAAQJ,gBAAR,CAAyB,QAAzB,EAAmC,UAACG,KAAD;AAAA,cAAW,MAAK4B,WAAL,CAAiB5B,KAAjB,CAAX;AAAA,MAAnC;AACD;;AAED;;;;;;;;;;;AA6BA;;;;iCAIYA,K,EAAO;AACjB,WAAI6B,WAAW,EAAf;AACA,WAAM5B,UAAU,KAAKA,OAArB;;AAEA,WAAIA,QAAQ6B,KAAR,IAAiB7B,QAAQ6B,KAAR,CAAcC,MAAd,GAAuB,CAA5C,EAA+C;AAC7CF,oBAAW,CAAC5B,QAAQ+B,OAAR,CAAgBC,eAAhB,IAAmC,EAApC,EAAwCC,OAAxC,CAAgD,SAAhD,EAA2DjC,QAAQ6B,KAAR,CAAcC,MAAzE,CAAX;AACD,QAFD,MAEO;AACLF,oBAAW7B,MAAME,MAAN,CAAaiC,KAAb,CAAmBC,KAAnB,CAAyB,IAAzB,EAA+BC,GAA/B,EAAX;AACD;;AAED,WAAIR,QAAJ,EAAc;AACZ,cAAKR,SAAL,CAAeiB,WAAf,GAA6BT,QAA7B;AACD;AACF;;;+BAES;AACR,YAAKT,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;4BAtDcA,O,EAASW,O,EAAS;AAC9B,cAAO,KAAKc,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBW,OAAlB,CAAvC;AACD;;AAED;;;;;;;;;;;4BAQ6C;AAAA;;AAAA,WAAjCV,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,sCAAKvC,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,EAAqBwC,gBAArB,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AAnDkBlE,a,CAiFZmD,U,GAAa,IAAIsB,OAAJ,E;AAjFDzE,a,CA2FZqC,O,GAAU;AACfiC,iBAAc,sBADC;AAEfpB,kBAAe;AAFA,E;mBA3FElD,Y;;;;;;ACJrB,kC;;;;;;ACAA,gC;;;;;;ACAA,6B;;;;;;;;;;;;;;ACAA;;AACA;;AACA;;;;AACA;;;;;;;;KAEqBD,S;AACnB;;;;;AAKA,sBAAY2B,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,SAAI,CAACA,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;AACD,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKmB,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEAA,aAAQJ,gBAAR,CAAyB,OAAzB,EAAkC,UAACG,KAAD;AAAA,cAAW,MAAKiD,MAAL,CAAYjD,KAAZ,CAAX;AAAA,MAAlC;AACD;;AAED;;;;;;;;;;;;;;;AA0BA;;;;4BAIOA,K,EAAO;AACZ,WAAI,KAAKC,OAAL,CAAaE,OAAb,KAAyB,GAA7B,EAAkC;AAChCH,eAAMkD,cAAN;AACD;;AAED,WAAI,KAAKjD,OAAL,CAAa+B,OAAb,CAAqBmB,KAArB,KAA+B,QAAnC,EAA6C;AAC3C,cAAKlD,OAAL,CAAa+B,OAAb,CAAqBmB,KAArB,GAA6B,MAA7B;AACD,QAFD,MAEO;AACL,cAAKlD,OAAL,CAAa+B,OAAb,CAAqBmB,KAArB,GAA6B,QAA7B;AACD;AACF;;;+BAES;AACR,YAAK/B,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;4BArC6C;AAAA;;AAAA,WAAjCC,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ;AACD,QAFD,MAEO;AACL,gBAAO,kBAAGA,MAAH,EAAW,OAAX,EAAoB,UAACF,KAAD,EAAW;AACpC,eAAMC,UAAU,4BAAaD,KAAb,EAAoByC,iBAAiBI,YAArC,CAAhB;AACA,eAAI5C,WAAW,CAAC,OAAKyB,UAAL,CAAgB0B,GAAhB,CAAoBnD,OAApB,CAAhB,EAA8C;AAC5C,oBAAKkB,MAAL,CAAYlB,OAAZ,EAAqBgD,MAArB,CAA4BjD,KAA5B;AACD;AACF,UALM,CAAP;AAMD;AACF;;;4BA0BaC,O,EAAS;AACrB,cAAO,KAAKyB,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,CAAvC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;;;;AA9EmB3B,U,CA4EZoD,U,GAAa,IAAIsB,OAAJ,E;AA5ED1E,U,CAsFZsC,O,GAAU;AACfiC,iBAAc;AADC,E;mBAtFEvE,S;;;;;;;;;;;mBCHG+E,Y;;AAFxB;;AAEe,UAASA,YAAT,CAAsBrD,KAAtB,EAA6BsD,QAA7B,EAAuC;AACpD;AACA;AACA;AACA,OAAI,OAAOtD,MAAME,MAAN,CAAa0C,OAApB,KAAgC,UAApC,EAAgD;AAC9C,SAAI5C,MAAME,MAAN,CAAa0C,OAAb,CAAqBU,QAArB,CAAJ,EAAoC;AAClC;AACA,cAAOtD,MAAME,MAAb;AACD,MAHD,MAGO,IAAIF,MAAME,MAAN,CAAa0C,OAAb,CAAqBU,WAAW,IAAhC,CAAJ,EAA2C;AAChD;AACA,YAAK,IAAIC,WAAWvD,MAAME,MAA1B,EAAkCqD,YAAYA,aAAavD,MAAMwD,aAAjE,EAAgFD,WAAWA,SAASE,UAApG,EAAgH;AAC9G,aAAIF,SAASX,OAAT,CAAiBU,QAAjB,CAAJ,EAAgC;AAC9B,kBAAOC,QAAP;AACD;AACF;AACF;AACF;AACF,E;;;;;;;;;;;mBCnBuBG,E;AAAT,UAASA,EAAT,CAAYzD,OAAZ,EAA8B;AAAA,qCAAN0D,IAAM;AAANA,SAAM;AAAA;;AAC3C1D,WAAQJ,gBAAR,gBAA4B8D,IAA5B;AACA,UAAO;AACLhD,YADK,qBACK;AACRV,eAAQS,mBAAR,gBAA+BiD,IAA/B;AACA,cAAO,IAAP;AACD;AAJI,IAAP;AAMD,E;;;;;;;;;;;;;;ACRD;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;KAEqBnF,e;AACnB;;;;;;;;;;;;;AAaA,4BAAYyB,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;;AAEA,UAAKQ,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA,UAAKA,OAAL,CAAaJ,gBAAb,CAA8B,OAA9B,EAAuC,UAACG,KAAD;AAAA,cAAW,MAAK4D,WAAL,CAAiB5D,KAAjB,CAAX;AAAA,MAAvC;;AAEA,kCAAKC,QAAQ6C,gBAAR,CAAyB,OAAzB,CAAL,GAAwCC,OAAxC,CAAgD,UAACc,KAAD,EAAW;AACzD,WAAIA,MAAMvD,OAAV,EAAmB,MAAKwD,aAAL,CAAmBD,KAAnB;AACpB,MAFD;AAGD;;AAED;;;;;;;;;;;;;;;;;;AA2CA;;;;;iCAKY7D,K,EAAO;AACjB,WAAM+D,SAAS,4BAAa/D,KAAb,EAAoB,KAAKY,OAAL,CAAaoD,cAAjC,CAAf;;AAEA,WAAID,MAAJ,EAAY;AACV,cAAKE,SAAL,CAAeF,MAAf;AACD;AACF;;AAED;;;;;;;;mCAKcG,I,EAAM;AAAA;;AAClB;AACA,WAAMC,WAAWD,KAAK1C,aAAL,CAAmB,KAAKZ,OAAL,CAAawD,YAAhC,CAAjB;AACA,WAAID,QAAJ,EAAc;AACZ,sCAAK,KAAKlE,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAawD,YAA3C,CAAL,GAA+DrB,OAA/D,CAAuE,UAACsB,IAAD,EAAU;AAC/E,eAAIA,SAASF,QAAb,EAAuB;AACrBE,kBAAK9D,YAAL,CAAkB,eAAlB,EAAmC,OAAnC;AACD;AACF,UAJD;AAKA4D,kBAAS5D,YAAT,CAAsB,eAAtB,EAAuC,MAAvC;AACD;;AAED,WAAM+D,+CAAuB,KAAKrE,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAaoD,cAA3C,CAAvB,EAAN;;AAEAM,uBAAgBvB,OAAhB,CAAwB,UAACgB,MAAD,EAAY;AAClC,aAAIA,WAAWG,IAAf,EAAqB;AACnB,sCAAYH,MAAZ,EAAoB,OAAKnD,OAAL,CAAa2D,WAAjC,EAA8C,KAA9C;AACA,wCAAKR,OAAOxC,aAAP,CAAqBuB,gBAArB,CAAsCiB,OAAO/B,OAAP,CAAe9B,MAArD,CAAL,GAAmE6C,OAAnE,CAA2E;AAAA,oBAAW9C,QAAQM,YAAR,CAAqB,QAArB,EAA+B,EAA/B,CAAX;AAAA,YAA3E;AACD;AACF,QALD;;AAOA,kCAAY2D,IAAZ,EAAkB,KAAKtD,OAAL,CAAa2D,WAA/B,EAA4C,IAA5C;AACA,oCAAKL,KAAK3C,aAAL,CAAmBuB,gBAAnB,CAAoCoB,KAAKlC,OAAL,CAAa9B,MAAjD,CAAL,GAA+D6C,OAA/D,CAAuE;AAAA,gBAAW9C,QAAQO,eAAR,CAAwB,QAAxB,CAAX;AAAA,QAAvE;AACD;;AAED;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;;;+BAOU0D,I,EAAMM,Q,EAAU;AACxB,WAAMC,aAAa,IAAIC,WAAJ,CAAgB,KAAK9D,OAAL,CAAa+D,mBAA7B,EAAkD;AACnEC,kBAAS,IAD0D;AAEnEC,qBAAY,IAFuD;AAGnEC,iBAAQ,EAAEZ,UAAF;AAH2D,QAAlD,CAAnB;;AAMA;AACA,WAAI,KAAKjE,OAAL,CAAa8E,aAAb,CAA2BN,UAA3B,CAAJ,EAA4C;AAC1C,cAAKX,aAAL,CAAmBI,IAAnB;AACA,cAAKjE,OAAL,CAAa8E,aAAb,CAA2B,IAAIL,WAAJ,CAAgB,KAAK9D,OAAL,CAAaoE,kBAA7B,EAAiD;AAC1EJ,oBAAS,IADiE;AAE1EC,uBAAY,IAF8D;AAG1EC,mBAAQ,EAAEZ,UAAF;AAHkE,UAAjD,CAA3B;AAKA,aAAIM,QAAJ,EAAc;AACZA,oBAAS,IAAT,EAAeN,IAAf;AACD;AACF,QAVD,MAUO;AACL,aAAMe,QAAQ,IAAItC,KAAJ,CAAU,0CAAV,CAAd;AACAsC,eAAMC,QAAN,GAAiB,IAAjB;AACAD,eAAMf,IAAN,GAAaA,IAAb;AACA,aAAIM,QAAJ,EAAc;AACZA,oBAASS,KAAT;AACD;AACF;AACF;;;+BAES;AACR,YAAK7D,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;;;4BAtIcA,O,EAASW,O,EAAS;AAC9B,cAAO,KAAKc,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBW,OAAlB,CAAvC;AACD;;AAED;;;;;;;;;;;;;;;;;;4BAe6C;AAAA;;AAAA,WAAjCV,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,sCAAK9C,SAASmD,gBAAT,CAA0BL,iBAAiBI,YAA3C,CAAL,GAA+DE,OAA/D,CAAuE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,EAAqBwC,gBAArB,CAAX;AAAA,UAAvE;AACD;AACF;;;;;;AAzEkBjE,gB,CAgLZkD,U,GAAa,IAAIsB,OAAJ,E;AAhLDxE,gB,CAiMZoC,O,GAAU;AACfiC,iBAAc,yBADC;AAEfmB,mBAAgB,iDAFD;AAGfmB,2BAAwB,oDAHT;AAIfZ,gBAAa,gCAJE;AAKfI,wBAAqB,gCALN;AAMfK,uBAAoB;AANL,E;mBAjMExG,e;;;;;;ACPrB,8B;;;;;;;;;;;mBCAwB4G,W;AAAT,UAASA,WAAT,CAAqBnF,OAArB,EAA8BoF,IAA9B,EAAoCC,GAApC,EAAyC;AACtD,OAAIrF,QAAQsF,SAAR,CAAkBC,QAAlB,CAA2BH,IAA3B,MAAqC,CAACC,GAA1C,EAA+C;AAC7CrF,aAAQsF,SAAR,CAAkBD,MAAM,KAAN,GAAc,QAAhC,EAA0CD,IAA1C;AACD;AACF,E;;;;;;;;;;;;;;;;ACJD;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;KAEqB5G,G;;;AACnB;;;;;;;;;;;;;;;;;;AAkBA,gBAAYwB,OAAZ,EAAqBW,OAArB,EAA8B;AAAA;;AAAA,2GACtBX,OADsB,EACbW,OADa;;AAG5B,WAAKX,OAAL,CAAaJ,gBAAb,CAA8B,SAA9B,EAAyC,UAACG,KAAD;AAAA,cAAW,MAAKyF,aAAL,CAAmBzF,KAAnB,CAAX;AAAA,MAAzC;;AAEA,SAAM0F,WAAW,MAAKzF,OAAL,CAAauB,aAAb,CAA2B,MAAKZ,OAAL,CAAauE,sBAAxC,CAAjB;AACA,SAAIO,QAAJ,EAAc;AACZ,aAAKC,iBAAL,CAAuBD,QAAvB;AACD;AAR2B;AAS7B;;AAED;;;;;;;;;;;;;;;;;;;;;;;;mCAgCcxB,I,EAAM;AAClB,+GAAoBA,IAApB;AACA,YAAKyB,iBAAL,CAAuBzB,IAAvB;AACD;;AAED;;;;;;;;;iCAMYlE,K,EAAO;AACjB,6GAAkBA,KAAlB;AACA,WAAM+D,SAAS,4BAAa/D,KAAb,EAAoB,KAAKY,OAAL,CAAaoD,cAAjC,CAAf;AACA,WAAM4B,UAAU,4BAAa5F,KAAb,EAAoB,KAAKY,OAAL,CAAaiF,eAAjC,CAAhB;AACA,WAAI9B,MAAJ,EAAY;AACV,+GAAkB/D,KAAlB;AACA,cAAK8F,eAAL;AACD;AACD,WAAIF,OAAJ,EAAa;AACX,cAAKE,eAAL;AACD;AACF;;AAED;;;;;;;;;mCAMc9F,K,EAAO;AAAA;;AACnB,WAAM+F,cAAc,KAAK9F,OAAL,CAAauB,aAAb,CAA2B,KAAKZ,OAAL,CAAaiF,eAAxC,CAApB;AACA,WAAIE,eAAeA,YAAYC,YAA/B,EAA6C;AAC3C;AACD;;AAED,WAAMC,YAAY;AAChBC,eAAM,CAAC,CADS;AAEhBC,gBAAO,CAFS;AAGhBC,oBAAW,CAAC,CAHI;AAIhBC,qBAAY;AAJI,SAKhBrG,MAAMsG,GAAN,IAAatG,MAAMuG,aALH,CAAlB;;AAOA,WAAIN,SAAJ,EAAe;AACb,aAAMO,uCAAe,KAAKvG,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAaoD,cAA3C,CAAf,EAAN;AACA,aAAMD,SAAS,KAAK9D,OAAL,CAAauB,aAAb,CAA2B,KAAKZ,OAAL,CAAauE,sBAAxC,CAAf;AACA,aAAMsB,YAAYC,KAAKC,GAAL,CAASH,QAAQI,OAAR,CAAgB7C,MAAhB,IAA0BkC,SAAnC,EAA8C,CAAC,CAA/C,CAAiD,yCAAjD,CAAlB;AACA,aAAMY,kBAAkBJ,aAAa,CAAb,IAAkBA,YAAYD,QAAQzE,MAAtC,GAA+C0E,SAA/C,GACtBA,YAAYC,KAAKI,IAAL,CAAUL,SAAV,IAAuBD,QAAQzE,MAD7C;AAEA,cAAKkC,SAAL,CAAeuC,QAAQK,eAAR,CAAf,EAAyC,UAAC5B,KAAD,EAAQf,IAAR,EAAiB;AACxD,eAAIA,IAAJ,EAAU;AACR,iBAAMG,OAAOH,KAAK1C,aAAL,CAAmB,OAAKZ,OAAL,CAAawD,YAAhC,CAAb;AACA,iBAAIC,IAAJ,EAAU;AACRA,oBAAK0C,KAAL;AACD;AACF;AACF,UAPD;AAQA/G,eAAMkD,cAAN;AACD;AACF;;AAED;;;;;;uCAGkB;AAChB,YAAKjD,OAAL,CAAauB,aAAb,CAA2B,KAAKZ,OAAL,CAAaoG,YAAxC,EAAsDzB,SAAtD,CAAgEtC,MAAhE,CAAuE,KAAKrC,OAAL,CAAaqG,WAApF;AACD;;AAED;;;;;;;uCAIkB/G,M,EAAQ;AACxB,YAAKD,OAAL,CAAauB,aAAb,CAA2B,KAAKZ,OAAL,CAAasG,mBAAxC,EAA6D5E,WAA7D,GAA2EpC,OAAOoC,WAAlF;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;4BA/F6C;AAAA;;AAAA,WAAjCpC,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,sCAAKvC,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,EAAqBwC,gBAArB,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AA5DkBhE,I,CA+IZiD,U,GAAa,IAAIsB,OAAJ,E;AA/IDvE,I,CAqKZmC,O,GAAUK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,0BAAgBP,OAA9B,CAAd,EAAsD;AACrEiC,iBAAc,aADuD;AAErEmE,iBAAc,gBAFuD;AAGrEnB,oBAAiB,oBAHoD;AAIrEqB,wBAAqB,yBAJgD;AAKrElD,mBAAgB,qBALqD;AAMrEmB,2BAAwB,wCAN6C;AAOrEf,iBAAc,qBAPuD;AAQrEG,gBAAa,oBARwD;AASrE0C,gBAAa,kBATwD;AAUrEtC,wBAAqB,mBAVgD;AAWrEK,uBAAoB;AAXiD,EAAtD,C;mBArKEvG,G;;;;;;ACPrB,4B;;;;;;;;;;;;;;ACAA;;AACA;;AACA;;AACA;;;;;;;;;;KAEqBC,Y;AACnB,yBAAYuB,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;AACA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;AACA,UAAKuG,UAAL,GAAkB,KAAKlH,OAAL,CAAauB,aAAb,CAA2B,KAAKZ,OAAL,CAAawG,kBAAxC,CAAlB;AACA,UAAKhG,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA;;;;AAIA,UAAKoH,cAAL,GAAsB,kBAAG,KAAKpH,OAAL,CAAasB,aAAhB,EAA+B,OAA/B,EAAwC,UAACvB,KAAD;AAAA,cAAW,MAAKsH,mBAAL,CAAyBtH,KAAzB,CAAX;AAAA,MAAxC,CAAtB;;AAEA;;;;AAIA,UAAKuH,iBAAL,GAAyB,kBAAG,KAAKtH,OAAL,CAAasB,aAAhB,EAA+B,UAA/B,EAA2C,UAACvB,KAAD;AAAA,cAAW,MAAKwH,cAAL,CAAoBxH,KAApB,CAAX;AAAA,MAA3C,CAAzB;AACD;;;;;;AAkDD;;;4BAGO;AACL,YAAKmH,UAAL,CAAgB5B,SAAhB,CAA0BD,GAA1B,CAA8B,yBAA9B;AACA,YAAKrF,OAAL,CAAasF,SAAb,CAAuBD,GAAvB,CAA2B,yBAA3B;AACD;;AAED;;;;;;4BAGO;AACL,YAAK6B,UAAL,CAAgB5B,SAAhB,CAA0BkC,MAA1B,CAAiC,yBAAjC;AACA,YAAKxH,OAAL,CAAasF,SAAb,CAAuBkC,MAAvB,CAA8B,yBAA9B;AACD;;;yCAEmBzH,K,EAAO;AACzB,WAAM0H,WAAW,KAAKzH,OAAL,CAAauF,QAAb,CAAsBxF,MAAME,MAA5B,CAAjB;AACA,WAAMyH,eAAeD,YAAY,CAAC,KAAKzH,OAAL,CAAasF,SAAb,CAAuBC,QAAvB,CAAgC,yBAAhC,CAAlC;AACA,WAAMoC,YAAYD,eAAe,OAAf,GAAyB,QAA3C;;AAEA,WAAID,YAAY,KAAKzH,OAAL,CAAaE,OAAb,KAAyB,GAAzC,EAA8C;AAC5CH,eAAMkD,cAAN;AACD;;AAED,YAAK2E,SAAL,CAAeD,SAAf,EAA0B,KAAK3H,OAA/B,EAAwCD,KAAxC;AACD;;;oCAEcA,K,EAAO;AACpB,WAAMsG,MAAMtG,MAAMsG,GAAN,IAAatG,MAAM8H,KAA/B;AACA,WAAIxB,QAAQ,OAAR,IAAmBA,QAAQ,EAA/B,EAAmC;AACjC,aAAMoB,WAAW,KAAKzH,OAAL,CAAauF,QAAb,CAAsBxF,MAAME,MAA5B,CAAjB;AACA,aAAMyH,eAAeD,YAAY,CAAC,KAAKzH,OAAL,CAAasF,SAAb,CAAuBC,QAAvB,CAAgC,yBAAhC,CAAlC;AACA,aAAMoC,YAAYD,eAAe,OAAf,GAAyB,QAA3C;;AAEA,aAAID,YAAY,KAAKzH,OAAL,CAAaE,OAAb,KAAyB,GAAzC,EAA8C;AAC5CH,iBAAMkD,cAAN;AACD;;AAED,cAAK2E,SAAL,CAAeD,SAAf,EAA0B,KAAK3H,OAA/B,EAAwCD,KAAxC;AACD;AACF;;;+BAES;AACR,WAAI,KAAKqH,cAAT,EAAyB;AACvB,cAAKA,cAAL,GAAsB,KAAKA,cAAL,CAAoB1G,OAApB,EAAtB;AACD;AACD,WAAI,KAAK4G,iBAAT,EAA4B;AAC1B,cAAKA,iBAAL,GAAyB,KAAKA,iBAAL,CAAuB5G,OAAvB,EAAzB;AACD;AACD,YAAKS,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;;4BAnGaA,O,EAAS;AACrB,cAAO,KAAKyB,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,CAAvC;AACD;;;4BAE4C;AAAA;;AAAA,WAAjCC,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ;AACD,QAFD,MAEO;AACL,sCAAKA,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,CAAX;AAAA,UAArE;AACD;AACF;;AAED;;;;;;;;;;;;;AAxCmBvB,a,CA6HZgD,U,GAAa,IAAIsB,OAAJ,E;AA7HDtE,a,CA+HZkC,O,GAAU;AACfiC,iBAAc,sBADC;AAEfuE,uBAAoB,6BAFL;AAGfW,qBAAkB,0BAHH;AAIfC,oBAAiB,qBAJF;AAKfC,sBAAmB,2BALJ;AAMfC,qBAAkB;AANH,E;AA/HExJ,a,CAwIZyJ,c,GAAiB;AACtBC,UAAO,MADe;AAEtBC,WAAQ;AAFc,E;;;;;QAzFxBR,S,GAAY,UAACxC,IAAD,EAAOpF,OAAP,EAAgBqI,GAAhB,EAAwB;AAClC,SAAMnB,aAAa,OAAKA,UAAxB;AACA,SAAMrC,SAAS,EAAE7E,gBAAF,EAAWkH,sBAAX,EAAuBmB,QAAvB,EAAf;AACA,SAAMC,kBAAkBlD,KAAK,CAAL,EAAQmD,WAAR,KAAwBnD,KAAKoD,MAAL,CAAY,CAAZ,CAAhD;;AAEA,SAAMC,cAAc,IAAIhE,WAAJ,CAAgB,OAAKtD,WAAL,CAAiBR,OAAjB,iBAAuC2H,eAAvC,CAAhB,EAA2E;AAC7F3D,gBAAS,IADoF;AAE7FC,mBAAY,IAFiF;AAG7FC;AAH6F,MAA3E,CAApB;;AAMA,SAAM6D,aAAa,IAAIjE,WAAJ,CAAgB,OAAKtD,WAAL,CAAiBR,OAAjB,gBAAsC2H,eAAtC,CAAhB,EAA0E;AAC3F3D,gBAAS,IADkF;AAE3FC,mBAAY,IAF+E;AAG3FC;AAH2F,MAA1E,CAAnB;;AAMA,SAAMI,WAAW,CAAC,OAAKjF,OAAL,CAAa8E,aAAb,CAA2B2D,WAA3B,CAAlB;;AAEA,SAAI,CAACxD,QAAL,EAAe;AACb,cAAK,OAAK9D,WAAL,CAAiB+G,cAAjB,CAAgC9C,IAAhC,CAAL,EAA4CP,MAA5C;AACA,cAAK7E,OAAL,CAAa8E,aAAb,CAA2B4D,UAA3B;AACD;AACF,I;;;mBAtEkBjK,Y;;;;;;;;;;;;;;ACLrB;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA;;;;AAIA,UAASkK,qBAAT,CAA+B3I,OAA/B,EAAwC;AACtC,OAAM4I,gBAAgB5I,QAAQsB,aAAR,CAAsBuH,WAAtB,CAAkCC,gBAAlC,CAAmD9I,OAAnD,CAAtB;AACA,OAAM+I,YAAYH,cAAcI,kBAAd,CAAiC7G,KAAjC,CAAuC,MAAvC,EACf8G,GADe,CACX,UAACD,kBAAD;AAAA,YAAwBE,WAAWF,kBAAX,CAAxB;AAAA,IADW,EAEfG,MAFe,CAER,UAACC,QAAD;AAAA,YAAc,CAACC,MAAMD,QAAN,CAAf;AAAA,IAFQ,CAAlB;AAGA,UAAOL,UAAUjH,MAAV,GAAmB,CAAnB,GAAuB2E,KAAKC,GAAL,gCAAYqC,SAAZ,EAAvB,GAAgD,CAAvD;AACD;;KAEoBrK,K;AACnB;;;;;;;;;;;;;;;;;;;;AAoBA,kBAAYsB,OAAZ,EAAmC;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;;AAEA,UAAKQ,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA,UAAKsJ,gBAAL;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;;;wCAGmB;AAAA;;AACjB,YAAKtJ,OAAL,CAAaJ,gBAAb,CAA8B,OAA9B,EAAuC,UAACG,KAAD,EAAW;AAChD,aAAIA,MAAMwD,aAAN,KAAwBxD,MAAME,MAAlC,EAA0C,MAAKsJ,IAAL,CAAUxJ,KAAV;AAC3C,QAFD;;AAIA,WAAI,KAAKyJ,cAAT,EAAyB;AACvB,cAAKxJ,OAAL,CAAasB,aAAb,CAA2BmI,IAA3B,CAAgChJ,mBAAhC,CAAoD,SAApD,EAA+D,KAAK+I,cAApE;AACA,cAAKA,cAAL,GAAsB,IAAtB;AACD;;AAED,YAAKA,cAAL,GAAsB,UAACzJ,KAAD,EAAW;AAC/B,aAAIA,MAAM8H,KAAN,KAAgB,EAApB,EAAwB;AACtB,iBAAK0B,IAAL,CAAUxJ,KAAV;AACD;AACF,QAJD;;AAMA,YAAKC,OAAL,CAAasB,aAAb,CAA2BmI,IAA3B,CAAgC7J,gBAAhC,CAAiD,SAAjD,EAA4D,KAAK4J,cAAjE;;AAEA,oCAAK,KAAKxJ,OAAL,CAAa6C,gBAAb,CAA8B,oBAA9B,CAAL,GAA0DC,OAA1D,CAAkE,UAAC9C,OAAD,EAAa;AAC7EA,iBAAQJ,gBAAR,CAAyB,OAAzB,EAAkC,UAACG,KAAD,EAAW;AAC3C,iBAAKwJ,IAAL,CAAUxJ,KAAV;AACD,UAFD;AAGD,QAJD;AAKD;;AAED;;;;;;;;;kCAMa2J,O,EAASnF,Q,EAAU;AAAA;;AAC9B,WAAIoF,iBAAJ;AACA,WAAMC,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/B,aAAI,CAACD,QAAL,EAAe;AACbA,sBAAW,IAAX;AACA,kBAAK3J,OAAL,CAAaS,mBAAb,CAAiC,eAAjC,EAAkDmJ,kBAAlD;AACArF;AACD;AACF,QAND;;AAQA,YAAKvE,OAAL,CAAaJ,gBAAb,CAA8B,eAA9B,EAA+CgK,kBAA/C;AACA,WAAMZ,qBAAqBL,sBAAsB,KAAK3I,OAA3B,CAA3B;AACA,kCAAY,KAAKA,OAAjB,EAA0B,KAAKW,OAAL,CAAakJ,YAAvC,EAAqDH,OAArD;AACA,kCAAY,KAAK1J,OAAL,CAAasB,aAAb,CAA2BmI,IAAvC,EAA6C,KAAK9I,OAAL,CAAamJ,aAA1D,EAAyEJ,OAAzE;AACA,WAAIV,uBAAuB,CAA3B,EAA8B;AAC5BY;AACD;AACF;;AAED;;;;;;;;;;AAUA;;;;;;;;0BAKKG,uB,EAAyBxF,Q,EAAU;AAAA;;AACtC,WAAMyF,iCAAiC,CAACD,uBAAD,IAA4B,OAAOA,uBAAP,KAAmC,UAAtG;AACA,WAAIC,8BAAJ,EAAoC;AAClCzF,oBAAWwF,uBAAX,CADkC,CACE;AACrC;;AAED,WAAME,mBAAmBD,iCAAiC,IAAjC,GACvBD,wBAAwBG,cAAxB,IAA0CH,wBAAwBxG,aAAlE,IAAmFwG,uBADrF;;AAGA,WAAMI,iBAAiBH,iCAAiC,IAAjC,GACrBD,wBAAwBxG,aAAxB,IAAyCwG,uBAD3C;;AAGA,WAAIE,oBAAoB,CAACA,iBAAiBrJ,QAA1C,EAAoD;AAClD,eAAM,IAAIG,SAAJ,CAAc,iDAAd,CAAN;AACD;;AAED,WAAIoJ,kBAAkB,CAACA,eAAehK,IAAtC,EAA4C;AAC1C,eAAM,IAAIY,SAAJ,CAAc,gDAAd,CAAN;AACD;;AAED,WAAI,KAAKf,OAAL,CAAasF,SAAb,CAAuBC,QAAvB,CAAgC,KAAK5E,OAAL,CAAakJ,YAA7C,CAAJ,EAAgE;AAC9D,aAAItF,QAAJ,EAAc;AACZA,oBAAS,IAAT,EAAe,IAAf;AACD;AACD;AACD;;AAED,WAAMC,aAAa,IAAIC,WAAJ,CAAgB,KAAK9D,OAAL,CAAamH,gBAA7B,EAA+C;AAChEnD,kBAAS,IADuD;AAEhEC,qBAAY,IAFoD;AAGhEC,iBAAQ;AACNoF,6CADM;AAENE;AAFM;AAHwD,QAA/C,CAAnB;;AASA;AACA,WAAI,KAAKnK,OAAL,CAAa8E,aAAb,CAA2BN,UAA3B,CAAJ,EAA4C;AAC1C,cAAK4F,YAAL,CAAkB,IAAlB,EAAwB,YAAM;AAC5B,kBAAKpK,OAAL,CAAa8E,aAAb,CAA2B,IAAIL,WAAJ,CAAgB,OAAK9D,OAAL,CAAaoH,eAA7B,EAA8C;AACvEpD,sBAAS,IAD8D;AAEvEC,yBAAY,IAF2D;AAGvEC,qBAAQ;AACNoF,iDADM;AAENE;AAFM;AAH+D,YAA9C,CAA3B;AAQA,eAAI5F,QAAJ,EAAc;AACZA;AACD;AACF,UAZD;AAaD,QAdD,MAcO;AACL,aAAMS,QAAQ,IAAItC,KAAJ,CAAU,mCAAV,CAAd;AACAsC,eAAMC,QAAN,GAAiB,IAAjB;AACA,aAAIV,QAAJ,EAAc;AACZA,oBAASS,KAAT;AACD;AACF;AACF;;AAED;;;;;;;0BAIK+E,uB,EAAyBxF,Q,EAAU;AAAA;;AACtC,WAAMyF,iCAAiC,CAACD,uBAAD,IAA4B,OAAOA,uBAAP,KAAmC,UAAtG;AACA,WAAIC,8BAAJ,EAAoC;AAClCzF,oBAAWwF,uBAAX,CADkC,CACE;AACrC;;AAED,WAAME,mBAAmBD,iCAAiC,IAAjC,GACvBD,wBAAwBxG,aAAxB,IAAyCwG,uBAD3C;;AAGA,WAAMI,iBAAiBH,iCAAiC,IAAjC,GACrBD,wBAAwBxG,aAAxB,IAAyCwG,uBAD3C;;AAGA,WAAIE,oBAAoB,CAACA,iBAAiBrJ,QAA1C,EAAoD;AAClD,eAAM,IAAIG,SAAJ,CAAc,iDAAd,CAAN;AACD;;AAED,WAAIoJ,kBAAkB,CAACA,eAAehK,IAAtC,EAA4C;AAC1C,eAAM,IAAIY,SAAJ,CAAc,gDAAd,CAAN;AACD;;AAED,WAAI,CAAC,KAAKf,OAAL,CAAasF,SAAb,CAAuBC,QAAvB,CAAgC,KAAK5E,OAAL,CAAakJ,YAA7C,CAAL,EAAiE;AAC/D,aAAItF,QAAJ,EAAc;AACZA,oBAAS,IAAT,EAAe,IAAf;AACD;AACD;AACD;;AAED,WAAMC,aAAa,IAAIC,WAAJ,CAAgB,KAAK9D,OAAL,CAAaqH,iBAA7B,EAAgD;AACjErD,kBAAS,IADwD;AAEjEC,qBAAY,IAFqD;AAGjEC,iBAAQ;AACNoF,6CADM;AAENE;AAFM;AAHyD,QAAhD,CAAnB;;AASA;AACA,WAAI,KAAKnK,OAAL,CAAa8E,aAAb,CAA2BN,UAA3B,CAAJ,EAA4C;AAC1C,cAAK4F,YAAL,CAAkB,KAAlB,EAAyB,YAAM;AAC7B,kBAAKpK,OAAL,CAAa8E,aAAb,CAA2B,IAAIL,WAAJ,CAAgB,OAAK9D,OAAL,CAAasH,gBAA7B,EAA+C;AACxEtD,sBAAS,IAD+D;AAExEC,yBAAY,IAF4D;AAGxEC,qBAAQ;AACNoF,iDADM;AAENE;AAFM;AAHgE,YAA/C,CAA3B;AAQA,eAAI5F,QAAJ,EAAc;AACZA;AACD;AACF,UAZD;AAaD,QAdD,MAcO;AACL,aAAMS,QAAQ,IAAItC,KAAJ,CAAU,kCAAV,CAAd;AACAsC,eAAMC,QAAN,GAAiB,IAAjB;AACA,aAAIV,QAAJ,EAAc;AACZA,oBAASS,KAAT;AACD;AACF;AACF;;;+BAES;AACR,WAAI,KAAKwE,cAAT,EAAyB;AACvB,cAAKxJ,OAAL,CAAasB,aAAb,CAA2BmI,IAA3B,CAAgChJ,mBAAhC,CAAoD,SAApD,EAA+D,KAAK+I,cAApE;AACA,cAAKA,cAAL,GAAsB,IAAtB;AACD;AACD,YAAKrI,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;4BA1QcA,O,EAASW,O,EAAS;AAC9B,cAAO,KAAKc,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBW,OAAlB,CAAvC;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BA0B6C;AAAA;;AAAA,WAAjCV,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,gBAAO,kBAAGvC,MAAH,EAAW,OAAX,EAAoB,UAACF,KAAD,EAAW;AACpC,eAAMC,UAAU,4BAAaD,KAAb,QAAwByC,iBAAiB6H,gBAAzC,OAAhB;;AAEA,eAAIrK,OAAJ,EAAa;AACXD,mBAAMmK,cAAN,GAAuBlK,OAAvB;;AAEA,iBAAMsK,6CAAqBtK,QAAQsB,aAAR,CAAsBuB,gBAAtB,CAAuC7C,QAAQuK,YAAR,CAAqB/H,iBAAiB6H,gBAAtC,CAAvC,CAArB,EAAN;AACA,iBAAIC,cAAcxI,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,qBAAM,IAAIY,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,iBAAI4H,cAAcxI,MAAd,KAAyB,CAA7B,EAAgC;AAAA;AAC9B,qBAAI9B,QAAQE,OAAR,KAAoB,GAAxB,EAA6B;AAC3BH,yBAAMkD,cAAN;AACD;;AAED,qBAAMuH,QAAQ,OAAKtJ,MAAL,CAAYoJ,cAAc,CAAd,CAAZ,EAA8B9H,gBAA9B,CAAd;AACAgI,uBAAMC,IAAN,CAAW1K,KAAX,EAAkB,UAACiF,KAAD,EAAQ0F,YAAR,EAAyB;AACzC,uBAAI,CAAC1F,KAAD,IAAU,CAAC0F,YAAX,IAA2BF,MAAMxK,OAAN,CAAc2K,WAAd,GAA4B,CAAvD,IAA4DH,MAAMxK,OAAN,CAAc4K,YAAd,GAA6B,CAA7F,EAAgG;AAC9FJ,2BAAMxK,OAAN,CAAc8G,KAAd;AACD;AACF,kBAJD;AAN8B;AAW/B;AACF;AACF,UAxBM,CAAP;AAyBD;AACF;;;4BA6Ma;AACZ+D,eAAQC,IAAR,CAAa,yDAAb,EADY,CAC6D;AAC1E;;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9UmBpM,M,CA4UZ+C,U,GAAa,IAAIsB,OAAJ,E;AA5UDrE,M,CAqWZiC,O,GAAU;AACfiC,iBAAc,cADC;AAEfyH,qBAAkB,mBAFH;AAGfR,iBAAc,YAHC;AAIfC,kBAAe,cAJA;AAKfhC,qBAAkB,kBALH;AAMfC,oBAAiB,aANF;AAOfC,sBAAmB,mBAPJ;AAQfC,qBAAkB;AARH,E;mBArWEvJ,K;;;;;;;;;;;;;;;;ACpBrB;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;KAEqBC,S;AACnB;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,sBAAYqB,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;;AAEA,UAAKQ,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA,UAAK+K,QAAL,GAAgB,KAAK/K,OAAL,CAAauB,aAAb,CAA2B,KAAKZ,OAAL,CAAaoG,YAAxC,CAAhB;;AAEA,UAAK/G,OAAL,CAAaJ,gBAAb,CAA8B,SAA9B,EAAyC,UAACG,KAAD;AAAA,cAAW,MAAKiL,SAAL,CAAejL,KAAf,CAAX;AAAA,MAAzC;;AAEA,kCAAK,KAAKC,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAasK,gBAA3C,CAAL,GAAmEnI,OAAnE,CAA2E,UAACmB,IAAD,EAAU;AACnFA,YAAKrE,gBAAL,CAAsB,OAAtB,EAA+B,UAACsL,CAAD;AAAA,gBAAO,MAAKC,MAAL,CAAYD,CAAZ,CAAP;AAAA,QAA/B;AACD,MAFD;AAGD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;;;;+BAIUnL,K,EAAO;AACf,WAAMqL,WAAW,KAAKpL,OAAL,CAAasF,SAAb,CAAuBC,QAAvB,CAAgC,KAAK5E,OAAL,CAAa2D,WAA7C,CAAjB;AACA,WAAIe,YAAJ;AACA,WAAItF,MAAMI,IAAN,KAAe,OAAf,IAA0BJ,MAAMI,IAAN,KAAe,SAAf,IAA4BJ,MAAM8H,KAAN,KAAgB,EAA1E,EAA8E;AAC5E;AACAxC,eAAM,CAAC+F,QAAP;AACD,QAHD,MAGO,IAAIrL,MAAMI,IAAN,KAAe,SAAf,IAA4BJ,MAAM8H,KAAN,KAAgB,EAAhD,EAAoD;AACzD;AACAxC,eAAM,KAAN;AACD,QAHM,MAGA;AACL;AACD;;AAED,WAAM4E,mBAAmB,4BAAalK,KAAb,EAAoB,mBAApB,KAA4CA,MAAMwD,aAA3E;AACA,WAAI0G,iBAAiB/J,OAAjB,KAA6B,GAAjC,EAAsC;AACpCH,eAAMkD,cAAN;AACD;;AAED,WAAMuB,aAAa,IAAIC,WAAJ,CAAgB,KAAK9D,OAAL,CAAa0E,MAAM,kBAAN,GAA2B,mBAAxC,CAAhB,EAA8E;AAC/FV,kBAAS,IADsF;AAE/FC,qBAAY,IAFmF;AAG/FC,iBAAQ,EAAEoF,kBAAkBA,gBAApB;AAHuF,QAA9E,CAAnB;AAKA,WAAMoB,sBAAsB,KAAKrL,OAAL,CAAa8E,aAAb,CAA2BN,UAA3B,CAA5B;;AAEA,WAAIa,GAAJ,EAAS;AACP,cAAKS,WAAL,GAAmBmE,gBAAnB;AACA,cAAKqB,gBAAL,GAAwB,KAAKxF,WAAL,CAAiBvE,aAAjB,CAA+B,KAAKZ,OAAL,CAAa4K,oBAA5C,CAAxB;AACD;;AAED,WAAIF,mBAAJ,EAAyB;AACvB,cAAKrL,OAAL,CAAasF,SAAb,CAAuBD,MAAM,KAAN,GAAc,QAArC,EAA+C,KAAK1E,OAAL,CAAa2D,WAA5D;AACA,UAAC,KAAKtE,OAAL,CAAasF,SAAb,CAAuBC,QAAvB,CAAgC,KAAK5E,OAAL,CAAa2D,WAA7C,IAA4D,KAAKyG,QAAjE,GAA4E,KAAKjF,WAAlF,EAA+FgB,KAA/F;AACA,cAAK9G,OAAL,CAAa8E,aAAb,CAA2B,IAAIL,WAAJ,CAAgB,KAAK9D,OAAL,CAAa0E,MAAM,iBAAN,GAA0B,kBAAvC,CAAhB,EAA4E;AACrGV,oBAAS,IAD4F;AAErGC,uBAAY,IAFyF;AAGrGC,mBAAQ,EAAEoF,kBAAkBA,gBAApB;AAH6F,UAA5E,CAA3B;AAKD;AACF;;AAED;;;;;;;4BAIOlK,K,EAAO;AACZ,WAAMyL,mBAAmBzL,MAAMwD,aAA/B;AACA,WAAMiB,aAAa,IAAIC,WAAJ,CAAgB,KAAK9D,OAAL,CAAa+D,mBAA7B,EAAkD;AACnEC,kBAAS,IAD0D;AAEnEC,qBAAY,IAFuD;AAGnEC,iBAAQ;AACN4G,4BAAiB1L,KADX;AAEN2L,wBAAaF;AAFP;AAH2D,QAAlD,CAAnB;;AASA,WAAI,KAAKxL,OAAL,CAAa8E,aAAb,CAA2BN,UAA3B,CAAJ,EAA4C;AAC1C,sCAAK,KAAKxE,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAagL,YAA3C,CAAL,GAA+D7I,OAA/D,CAAuE,UAAC9C,OAAD,EAAa;AAClF,eAAIA,QAAQuF,QAAR,CAAiBiG,gBAAjB,CAAJ,EAAwC;AACtCxL,qBAAQsF,SAAR,CAAkBD,GAAlB,CAAsB,UAAtB;AACD,YAFD,MAEO,IAAIrF,QAAQsF,SAAR,CAAkBC,QAAlB,CAA2B,UAA3B,CAAJ,EAA4C;AACjDvF,qBAAQsF,SAAR,CAAkBkC,MAAlB,CAAyB,UAAzB;AACD;AACF,UAND;AAOAgE,0BAAiBlG,SAAjB,CAA2BD,GAA3B,CAA+B,UAA/B;AACA,aAAI,KAAKiG,gBAAT,EAA2B;AACzB,gBAAKA,gBAAL,CAAsBjJ,WAAtB,GAAoCmJ,iBAAiBjK,aAAjB,CAA+B,KAAKZ,OAAL,CAAaa,aAA5C,EAA2Da,WAA/F;AACD;AACD,cAAKrC,OAAL,CAAa8E,aAAb,CAA2B,IAAIL,WAAJ,CAAgB,KAAK9D,OAAL,CAAaoE,kBAA7B,EAAiD;AAC1EJ,oBAAS,IADiE;AAE1EC,uBAAY,IAF8D;AAG1EC,mBAAQ,EAAE6G,aAAaF,gBAAf;AAHkE,UAAjD,CAA3B;AAKD;AACF;;;+BAES;AACR,YAAKrK,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;4BArJ6C;AAAA;;AAAA,WAAjCC,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AAAA;AACL,eAAMoJ,UAAU,SAAVA,OAAU,CAAC7L,KAAD,EAAW;AACzB,iBAAMC,UAAU,4BAAaD,KAAb,QAAwByC,iBAAiB6H,gBAAzC,OAAhB;;AAEA,iBAAIrK,OAAJ,EAAa;AACX,mBAAM6L,8CAAsB7L,QAAQsB,aAAR,CAAsBuB,gBAAtB,CAAuC7C,QAAQuK,YAAR,CAAqB/H,iBAAiB6H,gBAAtC,CAAvC,CAAtB,EAAN;AACA,mBAAIwB,eAAe/J,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,uBAAM,IAAIY,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,mBAAImJ,eAAe/J,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,qBAAI9B,QAAQE,OAAR,KAAoB,GAAxB,EAA6B;AAC3BH,yBAAMkD,cAAN;AACD;AACD,wBAAK/B,MAAL,CAAY2K,eAAe,CAAf,CAAZ,EAA+BrJ,gBAA/B,EAAiDwI,SAAjD,CAA2DjL,KAA3D;AACD;AACF;AACF,YAhBD;;AAkBAE,kBAAOL,gBAAP,CAAwB,OAAxB,EAAiCgM,OAAjC;AACA3L,kBAAOL,gBAAP,CAAwB,SAAxB,EAAmCgM,OAAnC;;AAEA;AAAA,gBAAO;AACLlL,wBAAS,mBAAM;AACbT,wBAAOQ,mBAAP,CAA2B,SAA3B,EAAsCmL,OAAtC;AACA3L,wBAAOQ,mBAAP,CAA2B,OAA3B,EAAoCmL,OAApC;AACD;AAJI;AAAP;AAtBK;;AAAA;AA4BN;AACF;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;4BAuBc5L,O,EAASW,O,EAAS;AAC9B,cAAO,KAAKc,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBW,OAAlB,CAAvC;AACD;;;4BAyFa;AACZkK,eAAQC,IAAR,CAAa,+DAAb,EADY,CACmE;AAChF;;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/OmBnM,U,CA6OZ8C,U,GAAa,IAAIsB,OAAJ,E;AA7ODpE,U,CA0QZgC,O,GAAU;AACfiC,iBAAc,YADC;AAEfyH,qBAAkB,iBAFH;AAGfkB,yBAAsB,mBAHP;AAIfjH,gBAAa,sBAJE;AAKfyC,iBAAc,gBALC;AAMf4E,iBAAc,gBANC;AAOfV,qBAAkB,+BAPH;AAQfzJ,kBAAe,uBARA;AASfsG,qBAAkB,mBATH;AAUfC,oBAAiB,cAVF;AAWfC,sBAAmB,oBAXJ;AAYfC,qBAAkB,eAZH;AAafvD,wBAAqB,sBAbN;AAcfK,uBAAoB;AAdL,E;mBA1QEpG,S;;;;;;;;;;;;;;ACNrB;;AACA;;AACA;;;;;;KAEqBE,Q;AACnB;;;;;AAKA,qBAAYmB,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,SAAI,CAACA,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;AACA,UAAK8L,eAAL,GAAuB,KAAK9L,OAAL,CAAasB,aAAb,CAA2BC,aAA3B,CAAyC,KAAKvB,OAAL,CAAa+B,OAAb,CAAqBgK,2BAA9D,CAAvB;;AAEA,UAAK5K,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA,UAAKA,OAAL,CAAaJ,gBAAb,CAA8B,OAA9B,EAAuC,UAACG,KAAD;AAAA,cAAW,MAAKiM,iBAAL,CAAuBjM,KAAvB,CAAX;AAAA,MAAvC;AACD;;AAED;;;;;;;;;;AA4BA;;;;uCAIkBA,K,EAAO;AACvB,WAAMkM,mBAAmBlM,MAAMwD,aAA/B;;AAEA,WAAI0I,iBAAiB/L,OAAjB,KAA6B,GAAjC,EAAsC;AACpCH,eAAMkD,cAAN;AACD;;AAED,YAAKjD,OAAL,CAAasF,SAAb,CAAuBtC,MAAvB,CAA8B,aAA9B;AACA,WAAI,KAAK8I,eAAT,EAA0B;AACxB,cAAKA,eAAL,CAAqBxG,SAArB,CAA+BtC,MAA/B,CAAsC,aAAtC;AACA,cAAK8I,eAAL,CAAqB5J,KAArB,GAA6B,EAA7B;AACD;AACF;;;+BAES;AACR,YAAKf,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;4BArDcA,O,EAAS;AACrB,cAAO,KAAKyB,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,CAAvC;AACD;;AAED;;;;;;;;;;;4BAQ6C;AAAA;;AAAA,WAAjCC,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ;AACD,QAFD,MAEO;AACL,sCAAKA,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AA7CkBnB,S,CA0EZ4C,U,GAAa,IAAIsB,OAAJ,E;AA1EDlE,S,CAoFZ8B,O,GAAU;AACfiC,iBAAc;AADC,E;mBApFE/D,Q;;;;;;;;;;;;;;ACJrB;;AACA;;AACA;;AACA;;;;;;;;;;KAEqBC,O;AACnB;;;;;;;AAOA,oBAAYkB,OAAZ,EAAmC;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;AACA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;AACA,UAAKuL,MAAL,GAAc,KAAKvL,OAAL,CAAauL,MAA3B;;AAEA,UAAK/K,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA;AACA,UAAK0B,GAAL,CAAS,KAAKwK,MAAd;AACD;;AAED;;;;;;;;;;AA6BA;;;;yBAIIA,M,EAAQ;AACV,WAAI,OAAOA,MAAP,KAAkB,SAAtB,EAAiC;AAC/B,eAAM,IAAInL,SAAJ,CAAc,wBAAd,CAAN;AACD;;AAED,YAAKmL,MAAL,GAAcA,MAAd;AACA,kCAAY,KAAKlM,OAAjB,EAA0B,mBAA1B,EAA+C,CAAC,KAAKkM,MAArD;;AAEA,cAAO,IAAP;AACD;;AAED;;;;;;;8BAIS;AACP,cAAO,KAAKxK,GAAL,CAAS,CAAC,KAAKwK,MAAf,CAAP;AACD;;AAED;;;;;;gCAGW;AACT,cAAO,KAAKA,MAAZ;AACD;;;+BAES;AACR,YAAK/K,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;4BAlEcA,O,EAAS;AACrB,cAAO,KAAKyB,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,CAAvC;AACD;;AAED;;;;;;;;;;;;4BAS6C;AAAA;;AAAA,WAAjCC,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,sCAAKvC,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,MAAK5B,MAAL,CAAYlB,OAAZ,EAAqBwC,gBAArB,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AAlDkB1D,Q,CA2FZ2C,U,GAAa,IAAIsB,OAAJ,E;AA3FDjE,Q,CAqGZ6B,O,GAAU;AACfiC,iBAAc,gBADC;AAEfsJ,WAAQ;AAFO,E;mBArGEpN,O;;;;;;;;;;;;;;ACLrB;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;KAEqBC,Q;AACnB;;;;;;;;;;;;;AAaA,qBAAYiB,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;;AAEA,SAAI,KAAKX,OAAL,CAAa+B,OAAb,CAAqBoK,QAArB,KAAkC,YAAtC,EAAoD;AAClD,YAAKnM,OAAL,CAAa+B,OAAb,CAAqBoK,QAArB,GAAgC,EAAhC;AACD;AACD,UAAKhL,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA;;;;AAIA,UAAKoH,cAAL,GAAsB,kBAAG,KAAKpH,OAAL,CAAasB,aAAhB,EAA+B,OAA/B,EAAwC,UAACvB,KAAD;AAAA,cAAW,MAAKiD,MAAL,CAAYjD,KAAZ,CAAX;AAAA,MAAxC,CAAtB;;AAEA,UAAKqM,cAAL;;AAEA,UAAKpM,OAAL,CAAaJ,gBAAb,CAA8B,UAA9B,EAA0C,UAACG,KAAD;AAAA,cAAW,MAAKiD,MAAL,CAAYjD,KAAZ,CAAX;AAAA,MAA1C;AACA,UAAKC,OAAL,CAAaJ,gBAAb,CAA8B,OAA9B,EAAuC,UAACG,KAAD,EAAW;AAChD,WAAMkE,OAAO,4BAAalE,KAAb,EAAoB,MAAKY,OAAL,CAAagL,YAAjC,CAAb;AACA,WAAI1H,IAAJ,EAAU;AACR,eAAKkH,MAAL,CAAYlH,IAAZ;AACD;AACF,MALD;AAMD;;AAED;;;;;;;;;;;;;;;;+BA2CU;AACR,WAAI,KAAKoI,QAAT,EAAmB;AACjB,cAAKA,QAAL,GAAgB,KAAKA,QAAL,CAAc3L,OAAd,EAAhB;AACD;AACD,WAAI,KAAK0G,cAAT,EAAyB;AACvB,cAAKA,cAAL,GAAsB,KAAKA,cAAL,CAAoB1G,OAApB,EAAtB;AACD;AACD,YAAKS,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;4BAIOD,K,EAAO;AACZ,WAAIA,MAAM8H,KAAN,KAAgB,EAAhB,IAAsB9H,MAAM8H,KAAN,KAAgB,EAAtC,IAA4C9H,MAAMI,IAAN,KAAe,OAA/D,EAAwE;AACtE,aAAMsH,WAAW,KAAKzH,OAAL,CAAauF,QAAb,CAAsBxF,MAAME,MAA5B,CAAjB;;AAEA,aAAIwH,QAAJ,EAAc;AACZ,gBAAKzH,OAAL,CAAasF,SAAb,CAAuBtC,MAAvB,CAA8B,oBAA9B;AACD,UAFD,MAEO,IAAI,CAACyE,QAAD,IAAa,KAAKzH,OAAL,CAAasF,SAAb,CAAuBC,QAAvB,CAAgC,oBAAhC,CAAjB,EAAwE;AAC7E,gBAAKvF,OAAL,CAAasF,SAAb,CAAuBkC,MAAvB,CAA8B,oBAA9B;AACD;AACF;AACF;;AAED;;;;;;;;;;4BAOO8E,Y,EAAc;AAAA;;AACnB,WAAM9H,aAAa,IAAIC,WAAJ,CAAgB,KAAK9D,OAAL,CAAa+D,mBAA7B,EAAkD;AACnEC,kBAAS,IAD0D;AAEnEC,qBAAY,IAFuD;AAGnEC,iBAAQ,EAAEZ,MAAMqI,YAAR;AAH2D,QAAlD,CAAnB;;AAMA,WAAI,KAAKtM,OAAL,CAAa8E,aAAb,CAA2BN,UAA3B,CAAJ,EAA4C;AAC1C,aAAI,KAAKxE,OAAL,CAAa+B,OAAb,CAAqBwK,YAArB,KAAsC,YAA1C,EAAwD;AACtD,gBAAKvM,OAAL,CAAawM,iBAAb,CAA+BC,SAA/B,GAA2CH,aAAaG,SAAxD;AACAH,wBAAahH,SAAb,CAAuBD,GAAvB,CAA2B,KAAK1E,OAAL,CAAa+L,aAAxC;AACD;AACD,cAAK1M,OAAL,CAAa+B,OAAb,CAAqBG,KAArB,GAA6BoK,aAAaK,aAAb,CAA2B5K,OAA3B,CAAmCG,KAAhE;;AAEA,sCAAK,KAAKlC,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAaiM,oBAA3C,CAAL,GAAuE9J,OAAvE,CAA+E,UAACmB,IAAD,EAAU;AACvF,eAAIqI,iBAAiBrI,IAArB,EAA2B;AACzBA,kBAAKqB,SAAL,CAAekC,MAAf,CAAsB,OAAK7G,OAAL,CAAa+L,aAAnC;AACD;AACF,UAJD;;AAMAJ,sBAAahH,SAAb,CAAuBD,GAAvB,CAA2B,KAAK1E,OAAL,CAAa+L,aAAxC;;AAEA,cAAK1M,OAAL,CAAa8E,aAAb,CAA2B,IAAIL,WAAJ,CAAgB,KAAK9D,OAAL,CAAaoE,kBAA7B,EAAiD;AAC1EJ,oBAAS,IADiE;AAE1EC,uBAAY,IAF8D;AAG1EC,mBAAQ,EAAEZ,MAAMqI,YAAR;AAHkE,UAAjD,CAA3B;AAKD;AACF;;AAED;;;;;;sCAGiB;AAAA;;AACf,WAAMO,aAAa,eAAeC,MAAlC;AACA,WAAMC,mBAAmBF,aAAa,SAAb,GAAyB,OAAlD;AACA,YAAKR,QAAL,GAAgB,kBAAG,KAAKrM,OAAL,CAAasB,aAAhB,EAA+ByL,gBAA/B,EAAiD,UAAChN,KAAD,EAAW;AAC1E,aAAI,CAAC,OAAKC,OAAL,CAAauF,QAAb,CAAsBxF,MAAME,MAA5B,CAAL,EAA0C;AACxC,kBAAKD,OAAL,CAAasF,SAAb,CAAuBkC,MAAvB,CAA8B,oBAA9B;AACD;AACF,QAJe,EAIb,CAACqF,UAJY,CAAhB;AAKD;;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;;;4BAlHc7M,O,EAASW,O,EAAS;AAC9B,cAAO,KAAKc,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBW,OAAlB,CAAvC;AACD;;AAED;;;;;;;;;;;;;;;;;;4BAe6C;AAAA;;AAAA,WAAjCV,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,sCAAKvC,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,EAAqBwC,gBAArB,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AAtFkBzD,S,CAyKZ0C,U,GAAa,IAAIsB,OAAJ,E;AAzKDhE,S,CA0LZ4B,O,GAAU;AACfiC,iBAAc,iBADC;AAEf+I,iBAAc,qCAFC;AAGfiB,yBAAsB,4DAHP;AAIfF,kBAAe,wBAJA;AAKfhI,wBAAqB,wBALN;AAMfK,uBAAoB;AANL,E;mBA1LEhG,Q;;;;;;;;;;;;;;ACPrB;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;KAEqBC,I;AACnB;;;;;;;AAOA,iBAAYgB,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;AACD,UAAKf,OAAL,GAAeA,OAAf;AACA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;AACA,UAAKQ,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;AACA,UAAKA,OAAL,CAAaJ,gBAAb,CAA8B,SAA9B,EAAyC,UAACG,KAAD;AAAA,cAAW,MAAKiN,YAAL,CAAkBjN,KAAlB,CAAX;AAAA,MAAzC;AACD;;AAED;;;;;;;;;;;;AA+BA;;;;;kCAKaA,K,EAAO;AAClB,WAAMiG,YAAY;AAChBC,eAAM,CAAC,CADS;AAEhBC,gBAAO,CAFS;AAGhBC,oBAAW,CAAC,CAHI;AAIhBC,qBAAY;AAJI,SAKhBrG,MAAMsG,GAAN,IAAatG,MAAMuG,aALH,CAAlB;AAMA,WAAM2G,OAAO,4BAAalN,KAAb,EAAoB,KAAKY,OAAL,CAAauM,YAAjC,CAAb;;AAEA,WAAIlH,aAAaiH,IAAb,IAAqBA,SAASvN,SAASyN,aAA3C,EAA0D;AACxD,aAAMC,qCAAa,KAAKpN,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAauM,YAA3C,CAAb,EAAN;AACA,aAAM1G,YAAYC,KAAKC,GAAL,CAAS0G,MAAMzG,OAAN,CAAcsG,IAAd,IAAsBjH,SAA/B,EAA0C,CAAC,CAA3C,CAA6C,qCAA7C,CAAlB;AACA,aAAMY,kBAAkBJ,aAAa,CAAb,IAAkBA,YAAY4G,MAAMtL,MAApC,GAA6C0E,SAA7C,GACtBA,YAAYC,KAAKI,IAAL,CAAUL,SAAV,IAAuB4G,MAAMtL,MAD3C;AAEAsL,eAAMxG,eAAN,EAAuBE,KAAvB;AACD;AACF;;;+BAES;AACR,YAAK3F,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;;4BA3DcA,O,EAASW,O,EAAS;AAC9B,cAAO,KAAKc,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBW,OAAlB,CAAvC;AACD;;AAED;;;;;;;;;;;;4BAS6C;AAAA;;AAAA,WAAjCV,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,sCAAKvC,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,EAAqBwC,gBAArB,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AA/CkBxD,K,CAiFZyC,U,GAAa,IAAIsB,OAAJ,E;AAjFD/D,K,CA4FZ2B,O,GAAU;AACfiC,iBAAc,kBADC;AAEfsK,iBAAc;AAFC,E;mBA5FElO,I;;;;;;;;;;;;;;ACNrB;;AACA;;AACA;;AACA;;;;;;KAEqBC,W;AACnB;;;;;AAKA,wBAAYe,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKJ,OAAL,GAAeA,OAAf;AACA,UAAKA,OAAL,CAAa0M,EAAb,GAAkB,KAAK1M,OAAL,CAAa0M,EAAb,IAAmB,mBAAmBP,MAAxD;;AAEA,UAAK9M,OAAL,GAAeA,OAAf;AACA,UAAKmB,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;AACA;AACA;AACA,UAAKA,OAAL,CAAauB,aAAb,CAA2B,wBAA3B,EAAqD3B,gBAArD,CAAsE,OAAtE,EAA+E,UAACG,KAAD;AAAA,cAAW,MAAK4D,WAAL,CAAiB5D,KAAjB,CAAX;AAAA,MAA/E;AACA,UAAKC,OAAL,CAAauB,aAAb,CAA2B,0BAA3B,EAAuD3B,gBAAvD,CAAwE,OAAxE,EAAiF,UAACG,KAAD;AAAA,cAAW,MAAK4D,WAAL,CAAiB5D,KAAjB,CAAX;AAAA,MAAjF;AACD;;AAED;;;;;;;;;;AA4BA;;;;iCAIYA,K,EAAO;AACjB,WAAMmD,QAAQnD,MAAMwD,aAAN,CAAoB+B,SAAlC;AACA,WAAMgI,cAAc,KAAKtN,OAAL,CAAauB,aAAb,CAA2B,oBAA3B,CAApB;;AAEA,WAAI2B,MAAMqC,QAAN,CAAe,uBAAf,CAAJ,EAA6C;AAC3C,aAAI,KAAK5E,OAAL,CAAa0M,EAAjB,EAAqB;AACnB,aAAEC,YAAYpL,KAAd;AACD,UAFD,MAEO;AACLoL,uBAAYC,MAAZ;AACD;AACF,QAND,MAMO,IAAIrK,MAAMqC,QAAN,CAAe,yBAAf,CAAJ,EAA+C;AACpD,aAAI,KAAK5E,OAAL,CAAa0M,EAAjB,EAAqB;AACnB,eAAIC,YAAYpL,KAAZ,GAAoB,CAAxB,EAA2B;AACzB,eAAEoL,YAAYpL,KAAd;AACD;AACF,UAJD,MAIO;AACLoL,uBAAYE,QAAZ;AACD;AACF,QARM,MAQA;AACL;AACD;;AAED;AACAF,mBAAYxI,aAAZ,CAA0B,IAAIL,WAAJ,CAAgB,QAAhB,EAA0B;AAClDE,kBAAS,IADyC;AAElDC,qBAAY;AAFsC,QAA1B,CAA1B;AAID;;;+BAES;AACR,YAAKzD,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;4BApEcA,O,EAAS;AACrB,cAAO,KAAKyB,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,CAAvC;AACD;;AAED;;;;;;;;;;;4BAQ6C;AAAA;;AAAA,WAAjCC,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ;AACD,QAFD,MAEO;AACL,sCAAKA,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AAhDkBf,Y,CA4FZwC,U,GAAa,IAAIsB,OAAJ,E;AA5FD9D,Y,CAsGZ0B,O,GAAU;AACfiC,iBAAc;AADC,E;mBAtGE3D,W;;;;;;;;;;;;;;ACLrB;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;KAEqBC,e;AACnB;;;;;;;;;;;;;;AAcA,4BAAYc,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,0CAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;;AAEA,UAAK8M,SAAL,GAAiBzN,QAAQwD,UAAzB,CATiC,CASI;AACrC,UAAKkK,WAAL,gCAAuB,KAAK1N,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAagN,mBAA3C,CAAvB;AACA,UAAKC,cAAL,gCAA0B,KAAK5N,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAakN,sBAA3C,CAA1B;AACA,UAAKC,UAAL,gCAAsB,KAAK9N,OAAL,CAAa6C,gBAAb,CAA8B,KAAKlC,OAAL,CAAaoN,kBAA3C,CAAtB;AACA,UAAKC,SAAL,GAAiB,KAAKhO,OAAL,CAAauB,aAAb,CAA2B,KAAKZ,OAAL,CAAasN,iBAAxC,CAAjB;;AAEA,UAAKC,WAAL;AACA,UAAKC,kBAAL;AACA,UAAKC,iBAAL;;AAEA,UAAKpO,OAAL,CAAaJ,gBAAb,CAA8B,OAA9B,EAAuC,eAAO;AAC5C,WAAMyO,eAAe,4BAAahG,GAAb,EAAkB,MAAK1H,OAAL,CAAa2N,YAA/B,CAArB;AACA,WAAID,YAAJ,EAAkB;AAChB,eAAKzG,SAAL,CAAeyG,YAAf,EAA6BhG,GAA7B;AACD;AACF,MALD;;AAOA,UAAKlH,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;AACD;;AAED;;;;;AAkBA;;;;;AA0BA;;;;;AAcA;;;;;AAUA;;;;;;;AAgCA;;;;;;;;AAkBA;;;;;AAiBA;;;;;AAeA;;;;;;;+BAeU;AACR,YAAKmB,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;;4BAIaA,O,EAAS;AACrB,cAAO,KAAKyB,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,CAAvC;AACD;;;4BAE4C;AAAA;;AAAA,WAAjCC,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ;AACD,QAFD,MAEO;AACL,sCAAKA,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,OAAK5B,MAAL,CAAYlB,OAAZ,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AArOkBd,gB,CAqNZuC,U,GAAa,IAAIsB,OAAJ,E;AArND7D,gB,CAuOZqP,a,GAAgB;AACrBC,WAAQ,iBADa;AAErBC,SAAM,YAFe;AAGrB,iBAAc;AAHO,E;AAvOJvP,gB,CA6OZyB,O,GAAU;AACfiC,iBAAc,yBADC;AAEf+K,wBAAqB,mBAFN;AAGfE,2BAAwB,qBAHT;AAIfE,uBAAoB,iBAJL;AAKfE,sBAAmB,iBALJ;AAMfS,yBAAsB,sBANP;AAOfC,qBAAkB,eAPH;AAQfC,6BAA0B,0BARX;AASfC,gCAA6B,6BATd;AAUfC,uBAAoB,sBAVL;AAWfC,uBAAoB,oBAXL;AAYfC,2BAAwB,0BAZT;AAafC,6BAA0B,4BAbX;AAcfC,4BAAyB,2BAdV;AAefZ,iBAAc,cAfC;AAgBfa,yBAAsB;AAhBP,E;;;;;QA9LjBC,e,GAAkB,UAACpP,OAAD,EAAUqP,IAAV,EAAgBhH,GAAhB,EAAwB;AAAA,SAChCtI,KADgC,GACtBsP,IADsB,CAChCtP,KADgC;;AAExC,SAAMuP,QAASD,KAAKC,KAAN,GAAeD,KAAKC,KAApB,GAA4B,EAA1C;AACA,SAAMC,gBAAiBF,KAAKE,aAAN,GAAuBF,KAAKE,aAA5B,GAA4C,EAAlE;AACA,SAAMC,aAAanH,GAAnB;;AAEA,YAAO;AACLrI,uBADK;AAELD,mBAFK;AAGLuP,mBAHK;AAILC,mCAJK;AAKLC;AALK,MAAP;AAOD,I;;QAKD5H,S,GAAY,UAAC5H,OAAD,EAAUqI,GAAV,EAAkB;AAC5B,SAAMxD,SAAS,OAAKuK,eAAL,CAAqBpP,OAArB,EAA8BA,QAAQ+B,OAAtC,EAA+CsG,GAA/C,CAAf;;AAEA,SAAMI,cAAc,IAAIhE,WAAJ,YAAyBI,OAAO9E,KAAhC,EAAyC;AAC3D4E,gBAAS,IADkD;AAE3DC,mBAAY,IAF+C;AAG3DC;AAH2D,MAAzC,CAApB;;AAMA,SAAM6D,aAAa,IAAIjE,WAAJ,MAAmBI,OAAO9E,KAA1B,EAAmC;AACpD4E,gBAAS,IAD2C;AAEpDC,mBAAY,IAFwC;AAGpDC;AAHoD,MAAnC,CAAnB;;AAMA,SAAMI,WAAW,CAAC,OAAKjF,OAAL,CAAa8E,aAAb,CAA2B2D,WAA3B,CAAlB;;AAEA,SAAI,CAACxD,QAAL,EAAe;AACb,cAAK,OAAK9D,WAAL,CAAiBoN,aAAjB,CAA+B1J,OAAO9E,KAAtC,CAAL,EAAmD8E,MAAnD;AACA,cAAK7E,OAAL,CAAa8E,aAAb,CAA2B4D,UAA3B;AACD;AACF,I;;QAKDwF,W,GAAc,YAAM;AAClB,YAAKJ,UAAL,CAAgBhL,OAAhB,CAAwB,UAACmB,IAAD,EAAOwL,KAAP,EAAiB;AACvC,WAAIA,QAAQ,CAAR,KAAc,CAAlB,EAAqB;AACnBxL,cAAKqB,SAAL,CAAeD,GAAf,CAAmB,OAAK1E,OAAL,CAAamO,kBAAhC;AACA,aAAI7K,KAAK5C,kBAAL,IAA2B4C,KAAK5C,kBAAL,CAAwBiE,SAAxB,CAAkCC,QAAlC,CAA2C,OAAK5E,OAAL,CAAaoO,kBAAxD,CAA/B,EAA4G;AAC1G9K,gBAAK5C,kBAAL,CAAwBiE,SAAxB,CAAkCD,GAAlC,CAAsC,OAAK1E,OAAL,CAAaqO,sBAAnD;AACD;AACF;AACF,MAPD;AAQD,I;;QAKDb,kB,GAAqB,YAAM;AACzB,YAAKP,cAAL,CAAoB9K,OAApB,CAA4B,gBAAQ;AAClCmB,YAAKqB,SAAL,CAAekC,MAAf,CAAsB,OAAK7G,OAAL,CAAasO,wBAAnC;AACA,cAAKjB,SAAL,CAAe0B,WAAf,CAA2BzL,IAA3B;AACD,MAHD;AAID,I;;QAODmK,iB,GAAoB,YAAM;AACxB,SAAI,CAAC,OAAKpO,OAAL,CAAauB,aAAb,CAA2B,OAAKZ,OAAL,CAAa+N,oBAAxC,CAAL,EAAoE;AAClE,cAAO,KAAP;AACD;;AAED,SAAMiB,UAAU,6BAAI,OAAK3P,OAAL,CAAa6C,gBAAb,CAA8B,OAAKlC,OAAL,CAAa+N,oBAA3C,CAAJ,GAAsEzF,GAAtE,CAA0E,gBAAQ;AAChG,cAAO;AACLjJ,kBAAS4P,IADJ;AAEL1I,qBAAY0I,KAAKrO,aAAL,CAAmB,OAAKZ,OAAL,CAAakO,2BAAhC;AAFP,QAAP;AAID,MALe,CAAhB;;AAOA,sBAAgBxJ,GAAhB,CAAoB,YAAM;AACxBsK,eAAQ7M,OAAR,CAAgB,gBAAQ;AACtB,gBAAK+M,aAAL,CAAmB;AACjBhL,mBAAQ+K;AADS,UAAnB;AAGD,QAJD;AAKD,MAND;;AAQAD,aAAQ7M,OAAR,CAAgB,gBAAQ;AACtBpD,gBAAS+J,IAAT,CAAcqG,WAAd,CAA0BF,KAAK1I,UAA/B;AACD,MAFD;;AAIA,YAAKlH,OAAL,CAAaJ,gBAAb,CAA8B,qBAA9B,EAAqD,OAAKiQ,aAA1D;AACD,I;;QAQDA,a,GAAgB,UAACxH,GAAD,EAAS;AAAA,uBACSA,IAAIxD,MADb;AAAA,SACf7E,OADe,eACfA,OADe;AAAA,SACNkH,UADM,eACNA,UADM;;;AAGvB,SAAM6I,OAAO/P,QAAQuB,aAAR,CAAsB,OAAKZ,OAAL,CAAaiO,wBAAnC,CAAb;AACA,SAAMoB,WAAWD,KAAKE,qBAAL,EAAjB;;AAEA/I,gBAAWgJ,KAAX,CAAiBF,QAAjB,GAA4B,UAA5B;AACA9I,gBAAWgJ,KAAX,CAAiBC,GAAjB,GAA0BH,SAASG,GAAT,GAAenQ,QAAQsB,aAAR,CAAsBuH,WAAtB,CAAkCuH,OAA3E;AACAlJ,gBAAWgJ,KAAX,CAAiBG,IAAjB,GAA2BL,SAASM,KAApC;AACApJ,gBAAWgJ,KAAX,CAAiBI,KAAjB,GAAyB,MAAzB;AACD,I;;QAKDC,e,GAAkB,UAAC1L,MAAD,EAAY;AAC5B,SAAM7E,UAAU6E,OAAO7E,OAAvB;AACA,SAAMwQ,SAAS,4BAAa3L,OAAO2K,UAApB,EAAgC,OAAK7O,OAAL,CAAawO,oBAA7C,CAAf;;AAEA,SAAMM,QAAQ,OAAK/B,WAAL,CAAiB/G,OAAjB,CAAyB3G,OAAzB,CAAd;AACA,SAAIA,QAAQ+B,OAAR,CAAgBwN,aAAhB,KAAkCkB,SAAlC,IAA+CzQ,QAAQ+B,OAAR,CAAgBwN,aAAhB,KAAkC,UAArF,EAAiG;AAC/FvP,eAAQ+B,OAAR,CAAgBwN,aAAhB,GAAgC,WAAhC;AACA,cAAKvB,SAAL,CAAe0C,YAAf,CAA4B,OAAK9C,cAAL,CAAoB6B,KAApB,CAA5B,EAAwD,OAAK3B,UAAL,CAAgB2B,QAAQ,CAAxB,CAAxD;AACD,MAHD,MAGO;AACL,cAAKzB,SAAL,CAAe0B,WAAf,CAA2Bc,OAAOnP,kBAAlC;AACArB,eAAQ+B,OAAR,CAAgBwN,aAAhB,GAAgC,UAAhC;AACD;AACF,I;;QAKDoB,U,GAAa,UAAC9L,MAAD,EAAY;AAAA,SACf7E,OADe,GACY6E,MADZ,CACf7E,OADe;AAAA,SACNuP,aADM,GACY1K,MADZ,CACN0K,aADM;;;AAGvB,SAAI,CAACA,aAAD,IAAkBA,kBAAkB,YAAxC,EAAsD;AACpDvP,eAAQ+B,OAAR,CAAgBwN,aAAhB,GAAgC,WAAhC;AACAvP,eAAQsF,SAAR,CAAkBD,GAAlB,CAAsB,OAAK1E,OAAL,CAAauO,uBAAnC;AACD,MAHD,MAGO;AACLlP,eAAQ+B,OAAR,CAAgBwN,aAAhB,GAAgC,YAAhC;AACAvP,eAAQsF,SAAR,CAAkBkC,MAAlB,CAAyB,OAAK7G,OAAL,CAAauO,uBAAtC;AACD;AACF,I;;QAKD0B,e,GAAkB,UAAC/L,MAAD,EAAY;AAAA,SACpB7E,OADoB,GACO6E,MADP,CACpB7E,OADoB;AAAA,SACXuP,aADW,GACO1K,MADP,CACX0K,aADW;;AAE5B,SAAMsB,sCAAa,OAAK7Q,OAAL,CAAa6C,gBAAb,CAA8B,OAAKlC,OAAL,CAAagO,gBAA3C,CAAb,EAAN;AACA,SAAI,CAACY,aAAD,IAAkBA,kBAAkB,SAAxC,EAAmD;AACjDsB,cAAO/N,OAAP,CAAe;AAAA,gBAAQmB,KAAK5D,OAAL,GAAe,IAAvB;AAAA,QAAf;AACAL,eAAQ+B,OAAR,CAAgBwN,aAAhB,GAAgC,KAAhC;AACD,MAHD,MAGO;AACLsB,cAAO/N,OAAP,CAAe;AAAA,gBAAQmB,KAAK5D,OAAL,GAAe,KAAvB;AAAA,QAAf;AACAL,eAAQ+B,OAAR,CAAgBwN,aAAhB,GAAgC,SAAhC;AACD;AACF,I;;;mBA/MkBrQ,e;;;;;;;;;;;ACPrB;;AAEA,KAAM4R,kBAAmB,SAASA,eAAT,GAA2B;AAClD,OAAMC,YAAY,EAAlB;AACA,OAAIC,UAAU,KAAd;;AAEA;AACA,YAASC,YAAT,GAAwB;AACtBF,eAAUjO,OAAV,CAAkB,UAACyB,QAAD,EAAc;AAC9BA;AACD,MAFD;;AAIAyM,eAAU,KAAV;AACD;;AAED;AACA,YAASE,MAAT,GAAkB;AAChB,SAAI,CAACF,OAAL,EAAc;AACZA,iBAAU,IAAV;;AAEA,WAAIlE,OAAOqE,qBAAX,EAAkC;AAChCrE,gBAAOqE,qBAAP,CAA6BF,YAA7B;AACD,QAFD,MAEO;AACLpR,oBAAWoR,YAAX,EAAyB,EAAzB;AACD;AACF;AACF;;AAED;AACA,YAASG,WAAT,CAAqB7M,QAArB,EAA+B;AAC7B,SAAIA,QAAJ,EAAc;AACZwM,iBAAUM,IAAV,CAAe9M,QAAf;AACD;AACF;;AAED,UAAO;AACL;AACAc,UAAK,aAACd,QAAD,EAAc;AACjB,WAAI,CAACwM,UAAUjP,MAAf,EAAuB;AACrBgL,gBAAOlN,gBAAP,CAAwB,QAAxB,EAAkCsR,MAAlC;AACD;AACDE,mBAAY7M,QAAZ;AACD;AAPI,IAAP;AASD,EA1CwB,EAAzB;;mBA4CeuM,e;;;;;;;;;;;;;;AC9Cf;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;KAEqB3R,K;AACnB;;;;;;;;;;;;;;;AAeA,kBAAYa,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;AACD,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKC,WAAL,CAAiBR,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;;AAEA,UAAKQ,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA,UAAKA,OAAL,CAAaJ,gBAAb,CAA8B,OAA9B,EAAuC,UAACG,KAAD;AAAA,cAAW,MAAK4D,WAAL,CAAiB5D,KAAjB,CAAX;AAAA,MAAvC;AACD;;AAED;;;;;;;;;;;;;;;;;;;;AAqDA;;;;;;iCAMYA,K,EAAO;AACjB,WAAMuR,QAAQ,4BAAavR,KAAb,EAAoB,KAAKY,OAAL,CAAa4Q,aAAjC,CAAd;AACA,WAAMC,MAAM,4BAAazR,KAAb,EAAoB,KAAKY,OAAL,CAAa8Q,WAAjC,CAAZ;AACA,WAAMC,WAAW,4BAAa3R,KAAb,EAAoB,KAAKY,OAAL,CAAagO,gBAAjC,CAAjB;AACA,WAAI2C,KAAJ,EAAW;AACT,cAAKK,WAAL,CAAiB,MAAjB,EAAyBL,KAAzB;AACD;AACD,WAAIE,OAAOE,QAAX,EAAqB;AACnB,cAAKC,WAAL,CAAiB,OAAjB,EAA0BH,GAA1B;AACD;AACF;;AAED;;;;;;;;;;;AAWA;;;;;;;;;;;;iCASYrR,I,EAAMH,O,EAASuE,Q,EAAU;AACnC,WAAMqN,WAAW,CAAC5R,QAAQsF,SAAR,CAAkBC,QAAlB,CAA2B,KAAK5E,OAAL,WAAqBR,IAArB,WAA3B,CAAlB;AACA,WAAMqE,aAAa,IAAIC,WAAJ,CAAgB,KAAK9D,OAAL,iBAA2BR,IAA3B,aAAhB,EAA2D;AAC5EwE,kBAAS,IADmE;AAE5EC,qBAAY,IAFgE;AAG5EC,iBAAQ,EAAE+M,kBAAF;AAHoE,QAA3D,CAAnB;;AAMA;AACA,WAAI5R,QAAQ8E,aAAR,CAAsBN,UAAtB,CAAJ,EAAuC;AACrC,oCAAYxE,OAAZ,EAAqB,KAAKW,OAAL,WAAqBR,IAArB,WAArB,EAAwDyR,QAAxD;AACA;AACA5R,iBAAQ8E,aAAR,CAAsB,IAAIL,WAAJ,CAAgB,KAAK9D,OAAL,gBAA0BR,IAA1B,aAAhB,EAA0D;AAC9EwE,oBAAS,IADqE;AAE9EC,uBAAY,IAFkE;AAG9EC,mBAAQ,EAAE+M,kBAAF;AAHsE,UAA1D,CAAtB;AAKA,aAAIrN,QAAJ,EAAc;AACZA,oBAAS,IAAT,EAAevE,OAAf,EAAwB4R,QAAxB;AACD;AACF,QAXD,MAWO;AACL,aAAM5M,QAAQ,IAAItC,KAAJ,CAAU,sCAAV,CAAd;AACAsC,eAAMC,QAAN,GAAiB,IAAjB;AACAD,eAAMhF,OAAN,GAAgBA,OAAhB;AACAgF,eAAM4M,QAAN,GAAiBA,QAAjB;AACA,aAAIrN,QAAJ,EAAc;AACZA,oBAASS,KAAT;AACD;AACF;AACF;;;+BAES;AACR,YAAK7D,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;4BAvHcA,O,EAASW,O,EAAS;AAC9B,cAAO,KAAKc,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBW,OAAlB,CAAvC;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;4BAkB6C;AAAA;;AAAA,WAAjCV,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,gBAAO,kBAAGvC,MAAH,EAAW,OAAX,EAAoB,UAACF,KAAD,EAAW;AACpC,eAAMC,UAAU,4BAAaD,KAAb,EAAoByC,iBAAiBI,YAArC,CAAhB;AACA,eAAI5C,WAAW,CAAC,OAAKyB,UAAL,CAAgB0B,GAAhB,CAAoBnD,OAApB,CAAhB,EAA8C;AAC5C,oBAAKkB,MAAL,CAAYlB,OAAZ,EAAqBwC,gBAArB,EAAuCmB,WAAvC,CAAmD5D,KAAnD;AACD;AACF,UALM,CAAP;AAMD;AACF;;;;;;AAhFkBZ,M,CAgKZsC,U,GAAa,IAAIsB,OAAJ,E;AAhKD5D,M,CAmLZwB,O,GAAU;AACfiC,iBAAc,cADC;AAEf2O,kBAAe,0BAFA;AAGfE,gBAAa,iBAHE;AAIf9C,qBAAkB,eAJH;AAKfkD,mBAAgB,kCALD;AAMfC,oBAAiB,yBANF;AAOfC,2BAAwB,yBAPT;AAQfC,0BAAuB,oBARR;AASfC,4BAAyB,0BATV;AAUfC,2BAAwB;AAVT,E;mBAnLE/S,K;;;;;;;;;;;;;;ACPrB;;AACA;;AACA;;AACA;;;;;;;;;;KAEqBC,gB;;AAEnB;;;;;;AAMA,6BAAYY,OAAZ,EAAmC;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,SAAI,CAACX,OAAD,IAAYA,QAAQY,QAAR,KAAqBC,KAAKC,YAA1C,EAAwD;AACtD,aAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAKf,OAAL,GAAeA,OAAf;;AAEA,UAAKW,OAAL,GAAeK,OAAOC,MAAP,CAAc,KAAKE,WAAL,CAAiBR,OAA/B,EAAwCA,OAAxC,CAAf;;AAEA,UAAKQ,WAAL,CAAiBM,UAAjB,CAA4BC,GAA5B,CAAgC,KAAK1B,OAArC,EAA8C,IAA9C;;AAEA;AACA,SAAMmS,kBAAkB,sBAAS,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAT,EAAuC,EAAvC,CAAxB;;AAEA,UAAKrS,OAAL,CAAasB,aAAb,CAA2BuH,WAA3B,CAAuCjJ,gBAAvC,CAAwD,QAAxD,EAAkEuS,eAAlE;AACD;;AAED;;;;;;;;;;;AA6BA;;;oCAGe;AACb,WAAI,KAAKnS,OAAL,CAAasB,aAAb,CAA2BuH,WAA3B,CAAuCuH,OAAvC,GAAiD,GAArD,EAA0D;AACxD,cAAKpQ,OAAL,CAAasF,SAAb,CAAuBD,GAAvB,CAA2B,KAAK1E,OAAL,CAAa2R,OAAxC;AACD,QAFD,MAEO;AACL,cAAKtS,OAAL,CAAasF,SAAb,CAAuBkC,MAAvB,CAA8B,KAAK7G,OAAL,CAAa2R,OAA3C;AACD;AACF;;;+BAES;AACR,YAAKnR,WAAL,CAAiBM,UAAjB,CAA4Ba,MAA5B,CAAmC,KAAKtC,OAAxC;AACD;;AAED;;;;;;;AAOA;;;;;;;;;;;4BA9CcA,O,EAASW,O,EAAS;AAC9B,cAAO,KAAKc,UAAL,CAAgBc,GAAhB,CAAoBvC,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBW,OAAlB,CAAvC;AACD;;AAED;;;;;;;;;;;4BAQ6C;AAAA;;AAAA,WAAjCV,MAAiC,uEAAxBP,QAAwB;AAAA,WAAdiB,OAAc,uEAAJ,EAAI;;AAC3C,WAAM6B,mBAAmBxB,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,KAAKP,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;AACA,WAAIV,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAOW,QAAP,KAAoBC,KAAK4B,aAAtE,EAAqF;AACnF,eAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;AACD,WAAIzC,OAAOW,QAAP,KAAoBC,KAAKC,YAAzB,IAAyCb,OAAO0C,OAAP,CAAeH,iBAAiBI,YAAhC,CAA7C,EAA4F;AAC1F,cAAK1B,MAAL,CAAYjB,MAAZ,EAAoBuC,gBAApB;AACD,QAFD,MAEO;AACL,sCAAKvC,OAAO4C,gBAAP,CAAwBL,iBAAiBI,YAAzC,CAAL,GAA6DE,OAA7D,CAAqE;AAAA,kBAAW,MAAK5B,MAAL,CAAYlB,OAAZ,EAAqBwC,gBAArB,CAAX;AAAA,UAArE;AACD;AACF;;;;;;AApDkBpD,iB,CA0EZqC,U,GAAa,IAAIsB,OAAJ,E;AA1ED3D,iB,CAoFZuB,O,GAAU;AACf2R,YAAS,sDADM;AAEf1P,iBAAc;AAFC,E;mBApFExD,gB;;;;;;ACLrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO,YAAY;AAC9B,YAAW,QAAQ;AACnB;AACA,YAAW,OAAO;AAClB;AACA,YAAW,QAAQ;AACnB;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,+CAA8C,kBAAkB;AAChb,cAAa,QAAQ;AACrB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;ACxXA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;KAEqBR,O;AACnB;;;;;;;;;;;;;;;;;;;;;;;AAuBA,oBAAYoB,OAAZ,EAAmC;AAAA;;AAAA,SAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AAC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","file":"bluemix-components-without-polyfills.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 050a31bba31b2804def7\n **/","// ====================//\n// Imports and Exports //\n// ====================//\n\n// Base Elements & Components\n// -------------\n// - JavaScript classes for use with components and base-elements.\n// - The following statements import classes from actual locations to\n//   be consumed from this file instead of their actual locations.\nimport initCheckbox from './checkbox';\nimport FileUploader from './file-uploader';\nimport FabButton from './fab';\nimport ContentSwitcher from './content-switcher';\nimport Tab from './tabs';\nimport OverflowMenu from './overflow-menu';\nimport Modal from './modals';\nimport HeaderNav from './header';\nimport Toolbars from './toolbars';\nimport Loading from './loading';\nimport Dropdown from './dropdown';\nimport Card from './card';\nimport NumberInput from './number-input';\nimport ResponsiveTable from './responsive-table';\nimport Table from './table';\nimport DetailPageHeader from './detail-page-header';\nimport LeftNav from './left-nav';\nimport UnifiedHeader from './unified-header';\nimport InlineLeftNav from './inline-left-nav';\nimport ProfileSwitcher from './profile-switcher';\nimport Pagination from './pagination';\nimport SearchWithOptions from './search-with-options';\nimport Accordion from './accordion';\nimport CopyBtn from './copy-btn';\n\nconst settings = {};\n\n/**\n * This module is used for the following purposes:\n * 1. Export ES2015 classes as modules (used with base-elements and components)\n * 2. Build an ES5-compatible files for prototyping.\n *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n * @exports BluemixComponents\n * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n */\nexport {\n  /**\n   * Settings.\n   * @type Object\n   * @property {boolean} [disableAutoInit]\n   *   Disables automatic instantiation of components.\n   *   By default (`BluemixComponents.disableAutoInit` is `false`),\n   *   bluemix-components attempts to instantiate components automatically\n   *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n   *   or upon DOM events (e.g. clicking) on such elements.\n   *   See each components' static `.init()` methods for details.\n   */\n  settings,\n\n  /**\n   * Watches for change in checkbox in the given document and force changing `checked` attribute\n   * so that DOM mutation observer in {@link https://www.npmjs.com/package/svgxuse svgxuse} is triggered.\n   * @type initCheckbox\n   */\n  initCheckbox,\n\n  /**\n   * Floating action button.\n   * @type FabButton\n   */\n  FabButton,\n\n  /**\n   * File uploader.\n   * @type FileUploader\n   */\n  FileUploader,\n\n  /**\n   * Content switcher.\n   * @type ContentSwitcher\n   */\n  ContentSwitcher,\n\n  /**\n   * Container of tabs.\n   * @type Tab\n   */\n  Tab,\n\n  /**\n   * Overflow menu.\n   * @type OverflowMenu\n   */\n  OverflowMenu,\n\n  /**\n   * Modal dialog.\n   * @type Modal\n   */\n  Modal,\n\n  /**\n   * Header with taxonomy menu.\n   * @type HeaderNav\n   */\n  HeaderNav,\n\n  /**\n   * Left Navigation Menu\n   * @type LeftNav\n   */\n   LeftNav,\n\n  /**\n   * Search button in tool bar.\n   * @type Toolbars\n   */\n  Toolbars,\n\n  /**\n   * Spinner indicating loading state.\n   * @type Loading\n   */\n  Loading,\n\n  /**\n   * A selector with drop downs.\n   * @type Dropdown\n   */\n  Dropdown,\n\n  /**\n   * The container for cards.\n   * @type Card\n   */\n  Card,\n\n  /**\n   * Number input UI.\n   * @type NumberInput\n   */\n  NumberInput,\n\n  /**\n   *  Data table -responsive\n   *  @type Table\n   */\n  ResponsiveTable,\n\n  /**\n   * Data table.\n   * @type Table\n   */\n  Table,\n\n  /**\n   * Detail page header.\n   * @type DetailPageHeader\n   */\n  DetailPageHeader,\n\n  /**\n   * Profile Switcher.\n   * @type ProfileSwitcher\n   */\n  ProfileSwitcher,\n\n  /**\n   * Pagination.\n   * @type Pagination\n   */\n  Pagination,\n\n  /**\n   * Accordion.\n   * @type Accordion\n   */\n  Accordion,\n};\n\n/**\n * Instantiates components automatically\n * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n * or upon DOM events (e.g. clicking) on such elements.\n * See each components' static `.init()` methods for details.\n *\n * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n *\n * @private\n */\n\nconst init = () => {\n  if (!settings.disableAutoInit) {\n    initCheckbox();\n    FabButton.init();\n    FileUploader.init();\n    ContentSwitcher.init();\n    Tab.init();\n    OverflowMenu.init();\n    Modal.init();\n    Toolbars.init();\n    Loading.init();\n    Dropdown.init();\n    Card.init();\n    NumberInput.init();\n    ResponsiveTable.init();\n    Table.init();\n    DetailPageHeader.init();\n    LeftNav.init();\n    UnifiedHeader.init();\n    InlineLeftNav.init();\n    ProfileSwitcher.init();\n    Pagination.init();\n    SearchWithOptions.init();\n    Accordion.init();\n    CopyBtn.init();\n  }\n};\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  // DOMContentLoaded has been fired already\n  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n  setTimeout(init, 0);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/index.js\n **/","function listener(event) {\n  const element = event.target;\n  if (element.tagName === 'INPUT' && element.type === 'checkbox' && element.hasAttribute('checked') !== element.checked) {\n    if (element.checked) {\n      element.setAttribute('checked', '');\n    } else {\n      element.removeAttribute('checked');\n    }\n  }\n}\n\n/**\n * Watches for change in checkbox in the given document and force changing `checked` attribute\n * so that DOM mutation observer in {@link https://www.npmjs.com/package/svgxuse svgxuse} is triggered.\n * @param {Document} [doc=document] The document object to watch for.\n * @returns {Handle} The handle to release the event listener.\n */\nfunction initCheckbox(doc = document) {\n  doc.removeEventListener('change', listener); // In case this function has been called earlier\n  doc.addEventListener('change', listener);\n  return {\n    release() {\n      doc.removeEventListener('change', listener);\n      return null;\n    },\n  };\n}\n\nexport default initCheckbox;\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/checkbox.js\n **/","import '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/array-from';\n\nexport default class FileUploader {\n  /**\n   * File uploader.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.labelNode = this.element.nextElementSibling || this.element.ownerDocument.querySelector(`.bx--file__label${this.options.selectorLabel}`);\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('change', (event) => this.updateLabel(event));\n  }\n\n  /**\n   * Instantiates file uploader of the given element.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates file uploader in the given node.\n   * If the given element indicates that it's an file uploader, instantiates it.\n   * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find file uploaders.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Updates the label for the file name upon file selection.\n   * @param {Event} event The event triggering this method.\n   */\n  updateLabel(event) {\n    let fileName = '';\n    const element = this.element;\n\n    if (element.files && element.files.length > 1) {\n      fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n    } else {\n      fileName = event.target.value.split('\\\\').pop();\n    }\n\n    if (fileName) {\n      this.labelNode.textContent = fileName;\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and file uploader instance.\n   * @member FileUploader.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode FileUploader.create .create()}, or {@linkcode FileUploader.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode FileUploader.init .init()} works.\n   * @member FileUploader.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find file uploaders.\n   */\n  static options = {\n    selectorInit: '[data-file-uploader]',\n    selectorLabel: '[data-file-appearance]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/file-uploader.js\n **/","module.exports = Element.matches;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Element.matches\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Object.assign\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = Array.from;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Array.from\"\n ** module id = 5\n ** module chunks = 0\n **/","import '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class FabButton {\n  /**\n   * Floating action button.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a floting action button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('click', (event) => this.toggle(event));\n  }\n\n  /**\n   * Instantiates floating action buttons in the given element.\n   * If the given element indicates that it's an floating action button, instantiates it.\n   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find floating action buttons.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, effectiveOptions.selectorInit);\n        if (element && !this.components.has(element)) {\n          this.create(element).toggle(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Toggles this floating action button.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    if (this.element.dataset.state === 'closed') {\n      this.element.dataset.state = 'open';\n    } else {\n      this.element.dataset.state = 'closed';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Instantiates floating action button of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * The map associating DOM element and floating action button instance.\n   * @member FabButton.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode FabButton.create .create()}, or {@linkcode FabButton.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode FabButton.init .init()} works.\n   * @member FabButton.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find floating action buttons.\n   */\n  static options = {\n    selectorInit: '[data-fab]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/fab.js\n **/","import './element-matches';\n\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by the polyfill).\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  if (typeof event.target.matches === 'function') {\n    if (event.target.matches(selector)) {\n      // If event target itself matches the given selector, return it\n      return event.target;\n    } else if (event.target.matches(selector + ' *')) {\n      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n      for (let traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n        if (traverse.matches(selector)) {\n          return traverse;\n        }\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/event-matches.js\n **/","export default function on(element, ...args) {\n  element.addEventListener(...args);\n  return {\n    release() {\n      element.removeEventListener(...args);\n      return null;\n    },\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/misc/on.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class ContentSwitcher {\n  /**\n   * Set of content switcher buttons.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n\n    [... element.querySelectorAll('input')].forEach((input) => {\n      if (input.checked) this._changeActive(input);\n    });\n  }\n\n  /**\n   * Instantiates a set of content switcher buttons of the given element.\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates content switcher button sets in the given node.\n   * If the given element indicates that it's an content switcher button set, instantiates it.\n   * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n   * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find content switcher button set.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... document.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Handles click on content switcher button set.\n   * If the click is on a content switcher button, activates it.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const button = eventMatches(event, this.options.selectorButton);\n\n    if (button) {\n      this.setActive(button);\n    }\n  }\n\n  /**\n   * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n   * @private\n   * @param {HTMLElement} item The button to be selected.\n   */\n  _changeActive(item) {\n    // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n    const itemLink = item.querySelector(this.options.selectorLink);\n    if (itemLink) {\n      [... this.element.querySelectorAll(this.options.selectorLink)].forEach((link) => {\n        if (link !== itemLink) {\n          link.setAttribute('aria-selected', 'false');\n        }\n      });\n      itemLink.setAttribute('aria-selected', 'true');\n    }\n\n    const selectorButtons = [... this.element.querySelectorAll(this.options.selectorButton)];\n\n    selectorButtons.forEach((button) => {\n      if (button !== item) {\n        toggleClass(button, this.options.classActive, false);\n        [... button.ownerDocument.querySelectorAll(button.dataset.target)].forEach(element => element.setAttribute('hidden', ''));\n      }\n    });\n\n    toggleClass(item, this.options.classActive, true);\n    [... item.ownerDocument.querySelectorAll(item.dataset.target)].forEach(element => element.removeAttribute('hidden'));\n  }\n\n  /**\n   * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @typedef {Object} ContentSwitcher~cancelError\n   * @property {boolean} canceled `true` always.\n   * @property {boolean} item The content switcher button that was about to be selected.\n   */\n\n  /**\n   * The callback called once switching is finished or is canceled.\n   * @callback ContentSwitcher~setActiveCallback\n   * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n   */\n\n  /**\n   * Selects a content switcher button.\n   * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n   * DOM elements associated with unselected buttons in the same way will be hidden.\n   * @param {HTMLElement} item The button to be selected.\n   * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n   */\n  setActive(item, callback) {\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: { item },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeActive(item);\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item },\n      }));\n      if (callback) {\n        callback(null, item);\n      }\n    } else {\n      const error = new Error('Switching active item has been canceled.');\n      error.canceled = true;\n      error.item = item;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and content switcher set instance.\n   * @member ContentSwitcher.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode ContentSwitcher.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode ContentSwitcher.init .init()} works.\n   * @member ContentSwitcher.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find content switcher button set.\n   * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n   * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @property {string} [classActive] The CSS class for switcher button's selected state.\n   * @property {string} [eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static options = {\n    selectorInit: '[data-content-switcher]',\n    selectorButton: 'input[type=\"radio\"], .bx--content-switcher__btn',\n    selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n    classActive: 'bx--content-switcher--selected',\n    eventBeforeSelected: 'content-switcher-beingselected',\n    eventAfterSelected: 'content-switcher-selected',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/content-switcher.js\n **/","module.exports = CustomEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"CustomEvent\"\n ** module id = 10\n ** module chunks = 0\n **/","export default function toggleClass(element, name, add) {\n  if (element.classList.contains(name) === !add) {\n    element.classList[add ? 'add' : 'remove'](name);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/toggle-class.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/math-sign';\nimport '../polyfills/object-assign';\nimport ContentSwitcher from './content-switcher';\n\nexport default class Tab extends ContentSwitcher {\n  /**\n   * Container of tabs.\n   * @extends ContentSwitcher\n   * @param {HTMLElement} element The element working as a container of tabs.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  constructor(element, options) {\n    super(element, options);\n\n    this.element.addEventListener('keydown', (event) => this.handleKeyDown(event));\n\n    const selected = this.element.querySelector(this.options.selectorButtonSelected);\n    if (selected) {\n      this.updateTriggerText(selected);\n    }\n  }\n\n  /**\n   * Instantiates tab containers in the given node.\n   * If the given element indicates that it's an tab container, instantiates it.\n   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find tab containers.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  _changeActive(item) {\n    super._changeActive(item);\n    this.updateTriggerText(item);\n  }\n\n  /**\n   * Handles click on tab container.\n   * * If the click is on a tab, activates it.\n   * * If the click is on the button to open the drop down menu, does so.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    super.handleClick(event);\n    const button = eventMatches(event, this.options.selectorButton);\n    const trigger = eventMatches(event, this.options.selectorTrigger);\n    if (button) {\n      super.handleClick(event);\n      this.updateMenuState();\n    }\n    if (trigger) {\n      this.updateMenuState();\n    }\n  }\n\n  /**\n   * Handles arrow keys on tab container.\n   * * Up/Left keys are used to go to previous tab.\n   * * Down/Right keys are used to go to next tab.\n   * @param {Event} event The event triggering this method.\n   */\n  handleKeyDown(event) {\n    const triggerNode = this.element.querySelector(this.options.selectorTrigger);\n    if (triggerNode && triggerNode.offsetParent) {\n      return;\n    }\n\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n\n    if (direction) {\n      const buttons = [... this.element.querySelectorAll(this.options.selectorButton)];\n      const button = this.element.querySelector(this.options.selectorButtonSelected);\n      const nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * buttons.length;\n      this.setActive(buttons[nextIndexLooped], (error, item) => {\n        if (item) {\n          const link = item.querySelector(this.options.selectorLink);\n          if (link) {\n            link.focus();\n          }\n        }\n      });\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Shows/hides the drop down menu used in narrow mode.\n   */\n  updateMenuState() {\n    this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n  }\n\n  /**\n   * Updates the text indicating the currently selected tab item.\n   * @param {HTMLElement} target The newly selected tab item.\n   */\n  updateTriggerText(target) {\n    this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n  }\n\n  /**\n   * The map associating DOM element and tab container instance.\n   * @member Tab.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode Tab.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Tab.init .init()} works.\n   * @member Tab.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find tab containers.\n   * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @property {string} [selectorButton] The CSS selector to find tab containers.\n   * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n   * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n   * @property {string} [classActive] The CSS class for tab's selected state.\n   * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @property {string} [eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  static options = Object.assign(Object.create(ContentSwitcher.options), {\n    selectorInit: '[data-tabs]',\n    selectorMenu: '.bx--tabs__nav',\n    selectorTrigger: '.bx--tabs__trigger',\n    selectorTriggerText: '.bx--tabs__trigger-text',\n    selectorButton: '.bx--tabs__nav-item',\n    selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n    selectorLink: '.bx--tabs__nav-link',\n    classActive: 'bx--tabs--selected',\n    classHidden: 'bx--tabs--hidden',\n    eventBeforeSelected: 'tab-beingselected',\n    eventAfterSelected: 'tab-selected',\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/tabs.js\n **/","module.exports = Math.sign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Math.sign\"\n ** module id = 13\n ** module chunks = 0\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport on from '../misc/on';\n\nexport default class OverflowMenu {\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.optionMenu = this.element.querySelector(this.options.selectorOptionMenu);\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.handleDocumentClick(event));\n\n    /**\n     * The handle to release keypress event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentKeyPress = on(this.element.ownerDocument, 'keypress', (event) => this.handleKeyPress(event));\n  }\n\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Runs the state change handler associated with the given name, and fires events before/after that.\n   * If the event before the state change handler runs is canceled, the state change handler won't run.\n   * @param {string} name The name of change in state. The before/after event handlers will have its associated name.\n   * @param {Element} element The DOM element triggering this change in state.\n   * @param {Event} evt The event triggering this change in state.\n   */\n  emitEvent = (name, element, evt) => {\n    const optionMenu = this.optionMenu;\n    const detail = { element, optionMenu, evt };\n    const capitalizedName = name[0].toUpperCase() + name.substr(1);\n\n    const eventBefore = new CustomEvent(this.constructor.options[`eventBefore${capitalizedName}`], {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    const eventAfter = new CustomEvent(this.constructor.options[`eventAfter${capitalizedName}`], {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    const canceled = !this.element.dispatchEvent(eventBefore);\n\n    if (!canceled) {\n      this[this.constructor.actionHandlers[name]](detail);\n      this.element.dispatchEvent(eventAfter);\n    }\n  }\n\n  /**\n   * Shows this overflow menu.\n   */\n  show() {\n    this.optionMenu.classList.add('bx--overflow-menu--open');\n    this.element.classList.add('bx--overflow-menu--open');\n  }\n\n  /**\n   * Hides this overflow menu.\n   */\n  hide() {\n    this.optionMenu.classList.remove('bx--overflow-menu--open');\n    this.element.classList.remove('bx--overflow-menu--open');\n  }\n\n  handleDocumentClick(event) {\n    const isOfSelf = this.element.contains(event.target);\n    const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n    const eventName = shouldBeOpen ? 'shown' : 'hidden';\n\n    if (isOfSelf && this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    this.emitEvent(eventName, this.element, event);\n  }\n\n  handleKeyPress(event) {\n    const key = event.key || event.which;\n    if (key === 'Enter' || key === 13) {\n      const isOfSelf = this.element.contains(event.target);\n      const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n      const eventName = shouldBeOpen ? 'shown' : 'hidden';\n\n      if (isOfSelf && this.element.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      this.emitEvent(eventName, this.element, event);\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    if (this.hDocumentKeyPress) {\n      this.hDocumentKeyPress = this.hDocumentKeyPress.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  static components = new WeakMap();\n\n  static options = {\n    selectorInit: '[data-overflow-menu]',\n    selectorOptionMenu: '.bx--overflow-menu__options',\n    eventBeforeShown: 'overflow-menu-beingshown',\n    eventAfterShown: 'overflow-menu-shown',\n    eventBeforeHidden: 'overflow-menu-beinghidden',\n    eventAfterHidden: 'overflow-menu-hidden',\n  };\n\n  static actionHandlers = {\n    shown: 'show',\n    hidden: 'hide',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/overflow-menu.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\n/**\n * @param {Element} element The element to obtain transition duration from.\n * @returns {number} The transition duration of the given property set in the given element.\n */\nfunction getTransitionDuration(element) {\n  const computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n  const durations = computedStyle.transitionDuration.split(/,\\s*/)\n    .map((transitionDuration) => parseFloat(transitionDuration))\n    .filter((duration) => !isNaN(duration));\n  return durations.length > 0 ? Math.max(...durations) : 0;\n}\n\nexport default class Modal {\n  /**\n   * Modal dialog.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookCloseActions();\n  }\n\n  /**\n   * Instantiates modal dialog of the given element.\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates modal dialogs in the given element.\n   * If the given element indicates that it's an modal dialog, instantiates it.\n   * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n   * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS class to find modal dialogs.\n   * @param {string} [options.attribInitTarget] The attribute name in the launcher buttons to find target modal dialogs.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, `[${effectiveOptions.attribInitTarget}]`);\n\n        if (element) {\n          event.delegateTarget = element;\n\n          const modalElements = [... element.ownerDocument.querySelectorAll(element.getAttribute(effectiveOptions.attribInitTarget))];\n          if (modalElements.length > 1) {\n            throw new Error('Target modal must be unique.');\n          }\n\n          if (modalElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n\n            const modal = this.create(modalElements[0], effectiveOptions);\n            modal.show(event, (error, shownAlready) => {\n              if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n                modal.element.focus();\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Adds event listeners for closing this dialog.\n   */\n  hookCloseActions() {\n    this.element.addEventListener('click', (event) => {\n      if (event.currentTarget === event.target) this.hide(event);\n    });\n\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n\n    this.keydownHandler = (event) => {\n      if (event.which === 27) {\n        this.hide(event);\n      }\n    };\n\n    this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\n    [... this.element.querySelectorAll('[data-modal-close]')].forEach((element) => {\n      element.addEventListener('click', (event) => {\n        this.hide(event);\n      });\n    });\n  }\n\n  /**\n   * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n   * @private\n   * @param {boolean} visible `true` to make this modal dialog visible.\n   * @param {Function} callback Callback called when change in state completes.\n   */\n  _changeState(visible, callback) {\n    let finished;\n    const finishedTransition = () => {\n      if (!finished) {\n        finished = true;\n        this.element.removeEventListener('transitionend', finishedTransition);\n        callback();\n      }\n    };\n\n    this.element.addEventListener('transitionend', finishedTransition);\n    const transitionDuration = getTransitionDuration(this.element);\n    toggleClass(this.element, this.options.classVisible, visible);\n    toggleClass(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n    if (transitionDuration === 0) {\n      finishedTransition();\n    }\n  }\n\n  /**\n   * The callback called once showing/hiding this dialog is finished or is canceled.\n   * @callback Modal~stateChangeCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Shows this modal dialog.\n   * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  show(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.delegateTarget || launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeShown, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(true, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterShown, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Showing dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  /**\n   * Hides this modal dialog.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  hide(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (!this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(false, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterHidden, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Hiding dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n  }\n\n  /**\n   * The map associating DOM element and modal instance.\n   * @member Modal.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Modal.create .create()}, or {@linkcode Modal.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Modal.init .init()} works.\n   * @member Modal.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS class to find modal dialogs.\n   * @property {string} attribInitTarget The attribute name in the launcher buttons to find target modal dialogs.\n   * @property {string} [classVisible] The CSS class for the visible state.\n   * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @property {string} [eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @property {string} [eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @property {string} [eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @property {string} [eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  static options = {\n    selectorInit: '[data-modal]',\n    attribInitTarget: 'data-modal-target',\n    classVisible: 'is-visible',\n    classNoScroll: 'bx--noscroll',\n    eventBeforeShown: 'modal-beingshown',\n    eventAfterShown: 'modal-shown',\n    eventBeforeHidden: 'modal-beinghidden',\n    eventAfterHidden: 'modal-hidden',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/modals.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class HeaderNav {\n  /**\n   * Header with taxonomy menu.\n   * @deprecated\n   * @implements Component\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\n    this.element.addEventListener('keydown', (event) => this.toggleNav(event));\n\n    [... this.element.querySelectorAll(this.options.selectorItemLink)].forEach((item) => {\n      item.addEventListener('click', (e) => this.select(e));\n    });\n  }\n\n  /**\n   * Instantiates taxonomy menus in the given element.\n   * If the given element indicates that it's an taxonomy menu, instantiates it.\n   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find taxonomy menus.\n   * @param {string} [options.attribInitTarget] The attribute name in the lancher buttons to find taxonomy menus.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, `[${effectiveOptions.attribInitTarget}]`);\n\n        if (element) {\n          const headerElements = [... element.ownerDocument.querySelectorAll(element.getAttribute(effectiveOptions.attribInitTarget))];\n          if (headerElements.length > 1) {\n            throw new Error('Target header must be unique.');\n          }\n\n          if (headerElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n            this.create(headerElements[0], effectiveOptions).toggleNav(event);\n          }\n        }\n      };\n\n      target.addEventListener('click', handler);\n      target.addEventListener('keydown', handler);\n\n      return {\n        release: () => {\n          target.removeEventListener('keydown', handler);\n          target.removeEventListener('click', handler);\n        },\n      };\n    }\n  }\n\n  /**\n   * Instantiates taxonomy menu of the given element.\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Shows/hides this taxonomy menu.\n   * @param {Event} event The event triggering this function.\n   */\n  toggleNav(event) {\n    const isActive = this.element.classList.contains(this.options.classActive);\n    let add;\n    if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n      // Toggle button or ESC key on nav\n      add = !isActive;\n    } else if (event.type === 'keydown' && event.which === 27) {\n      // Down arrow on launch button\n      add = false;\n    } else {\n      return;\n    }\n\n    const launchingElement = eventMatches(event, '[data-nav-target]') || event.currentTarget;\n    if (launchingElement.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    const eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n      bubbles: true,\n      cancelable: true,\n      detail: { launchingElement: launchingElement },\n    });\n    const defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\n    if (add) {\n      this.triggerNode = launchingElement;\n      this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n    }\n\n    if (defaultNotPrevented) {\n      this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n      (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n      this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n        bubbles: true,\n        cancelable: true,\n        detail: { launchingElement: launchingElement },\n      }));\n    }\n  }\n\n  /**\n   * Selects a menu item.\n   * @param {Event} event The event triggering this function.\n   */\n  select(event) {\n    const activatedElement = event.currentTarget;\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        initiatingEvent: event,\n        itemElement: activatedElement,\n      },\n    });\n\n    if (this.element.dispatchEvent(eventStart)) {\n      [... this.element.querySelectorAll(this.options.selectorItem)].forEach((element) => {\n        if (element.contains(activatedElement)) {\n          element.classList.add('selected');\n        } else if (element.classList.contains('selected')) {\n          element.classList.remove('selected');\n        }\n      });\n      activatedElement.classList.add('selected');\n      if (this.triggerLabelNode) {\n        this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n      }\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { itemElement: activatedElement },\n      }));\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n  }\n\n  /**\n   * The map associating DOM element and taxonomy menu instance.\n   * @member HeaderNav.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode HeaderNav.create .create()}, or {@linkcode HeaderNav.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode HeaderNav.init .init()} works.\n   * @member HeaderNav.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find taxonomy menus.\n   * @property {string} attribInitTarget The attribute name in the lancher buttons to find taxonomy menus.\n   * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n   * @property {string} [selectorItem] The CSS selector to find the menu items.\n   * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n   * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n   * @property {string} [classActive] The CSS class for the visible state.\n   * @property {string} [eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @property {string} [eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @property {string} [eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  static options = {\n    selectorInit: '[data-nav]',\n    attribInitTarget: 'data-nav-target',\n    selectorTriggerLabel: '.current-taxonomy',\n    classActive: 'taxonomy-nav--active',\n    selectorMenu: '.taxonomy-menu',\n    selectorItem: '.taxonomy-item',\n    selectorItemLink: '.taxonomy-item--taxonomy-menu',\n    selectorLabel: '.taxonomy-item__label',\n    eventBeforeShown: 'header-beingshown',\n    eventAfterShown: 'header-shown',\n    eventBeforeHidden: 'header-beinghidden',\n    eventAfterHidden: 'header-hidden',\n    eventBeforeSelected: 'header-beingselected',\n    eventAfterSelected: 'header-selected',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/header.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\n\nexport default class Toolbars {\n  /**\n   * Search button in tool bar.\n   * @implements Component\n   * @param {HTMLElement} element The element working as an search button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleActionClick(event));\n  }\n\n  /**\n   * Instantiates a search button of the given element.\n   * @param {HTMLElement} element The element working as a search button.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates search buttons in the given node.\n   * If the given element indicates that it's an search button, instantiates it.\n   * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n   * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find search buttons.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Show/hide search box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleActionClick(event) {\n    const searchActionNode = event.currentTarget;\n\n    if (searchActionNode.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    this.element.classList.toggle('show-search');\n    if (this.searchFieldNode) {\n      this.searchFieldNode.classList.toggle('show-search');\n      this.searchFieldNode.value = '';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and search button instance.\n   * @member Toolbars.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Toolbars.create .create()}, or {@linkcode Toolbars.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Toolbars.init .init()} works.\n   * @member Toolbars.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find search buttons.\n   */\n  static options = {\n    selectorInit: '[data-list-icons-search-action-target]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/toolbars.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class Loading {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.active] `true` if this spinner should roll.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.active = this.options.active;\n\n    this.constructor.components.set(this.element, this);\n\n    // Initialize spinner\n    this.set(this.active);\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner, instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find spinners.\n   * @param {boolean} [options.active] `true` if this spinner should roll.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Sets active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  set(active) {\n    if (typeof active !== 'boolean') {\n      throw new TypeError('set expects a boolean.');\n    }\n\n    this.active = active;\n    toggleClass(this.element, 'bx--loading--stop', !this.active);\n\n    return this;\n  }\n\n  /**\n   * Toggles active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  toggle() {\n    return this.set(!this.active);\n  }\n\n  /**\n   * @returns {boolean} `true` if this spinner is rolling roll.\n   */\n  isActive() {\n    return this.active;\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and spinner instance.\n   * @member Loading.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Loading.create .create()}, or {@linkcode Loading.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Loading.init .init()} works.\n   * @member Loading.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find spinners.\n   */\n  static options = {\n    selectorInit: '[data-loading]',\n    active: true,\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/loading.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class Dropdown {\n  /**\n   * A selector with drop downs.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    if (this.element.dataset.dropdown !== 'navigation') {\n      this.element.dataset.dropdown = '';\n    }\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.toggle(event));\n\n    this.setCloseOnBlur();\n\n    this.element.addEventListener('keypress', (event) => this.toggle(event));\n    this.element.addEventListener('click', (event) => {\n      const item = eventMatches(event, this.options.selectorItem);\n      if (item) {\n        this.select(item);\n      }\n    });\n  }\n\n  /**\n   * Instantiates selector of the given element.\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates selectors in the given node.\n   * If the given element indicates that it's an selector, instantiates it.\n   * Otherwise, instantiates selectors by searching for selectors in the given node.\n   * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find selectors.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  release() {\n    if (this.hFocusIn) {\n      this.hFocusIn = this.hFocusIn.release();\n    }\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Opens and closes the dropdown menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (event.which === 13 || event.which === 32 || event.type === 'click') {\n      const isOfSelf = this.element.contains(event.target);\n\n      if (isOfSelf) {\n        this.element.classList.toggle('bx--dropdown--open');\n      } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n        this.element.classList.remove('bx--dropdown--open');\n      }\n    }\n  }\n\n  /**\n   * Handles clicking on the dropdown options, doing the following:\n   * * Change Dropdown text to selected option.\n   * * Remove selected option from options when selected.\n   * * Emit custom events.\n   * @param {HTMLElement} itemToSelect The element to be activated.\n   */\n  select(itemToSelect) {\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: { item: itemToSelect },\n    });\n\n    if (this.element.dispatchEvent(eventStart)) {\n      if (this.element.dataset.dropdownType !== 'navigation') {\n        this.element.firstElementChild.innerHTML = itemToSelect.innerHTML;\n        itemToSelect.classList.add(this.options.classSelected);\n      }\n      this.element.dataset.value = itemToSelect.parentElement.dataset.value;\n\n      [... this.element.querySelectorAll(this.options.selectorItemSelected)].forEach((item) => {\n        if (itemToSelect !== item) {\n          item.classList.remove(this.options.classSelected);\n        }\n      });\n\n      itemToSelect.classList.add(this.options.classSelected);\n\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item: itemToSelect },\n      }));\n    }\n  }\n\n  /**\n   * Sets an event handler to document for \"close on blur\" behavior.\n   */\n  setCloseOnBlur() {\n    const hasFocusin = 'onfocusin' in window;\n    const focusinEventName = hasFocusin ? 'focusin' : 'focus';\n    this.hFocusIn = on(this.element.ownerDocument, focusinEventName, (event) => {\n      if (!this.element.contains(event.target)) {\n        this.element.classList.remove('bx--dropdown--open');\n      }\n    }, !hasFocusin);\n  }\n\n  /**\n   * The map associating DOM element and selector instance.\n   * @member Dropdown.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Dropdown.create .create()}, or {@linkcode Dropdown.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Dropdown.init .init()} works.\n   * @member Dropdown.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find selectors.\n   * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @property {string} [classSelected] The CSS class for the selected dropdown item.\n   * @property {string} [eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static options = {\n    selectorInit: '[data-dropdown]',\n    selectorItem: '[data-option] > .bx--dropdown__link',\n    selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n    classSelected: 'bx--dropdown--selected',\n    eventBeforeSelected: 'dropdown-beingselected',\n    eventAfterSelected: 'dropdown-selected',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/dropdown.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/math-sign';\n\nexport default class Card {\n  /**\n   * The container for cards.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.constructor.components.set(this.element, this);\n    this.element.addEventListener('keydown', (event) => this.cardKeyPress(event));\n  }\n\n  /**\n   * Instantiates card container of the given element.\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates card container in the given node.\n   * If the given element indicates that it's an card container, instantiates it.\n   * Otherwise, instantiates card containers by searching for card containers in the given node.\n   * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find card containers.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Goes back/forward among cards,\n   * right arrow key for going forward, left arrow key for going backward.\n   * @param {Event} event The event triggering this method.\n   */\n  cardKeyPress(event) {\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n    const card = eventMatches(event, this.options.selectorCard);\n\n    if (direction && card && card === document.activeElement) {\n      const cards = [... this.element.querySelectorAll(this.options.selectorCard)];\n      const nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * cards.length;\n      cards[nextIndexLooped].focus();\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and card list instance.\n   * @member Card.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Card.create .create()}, or {@linkcode Card.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Card.init .init()} works.\n   * @member Card.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find card containers.\n   * @property {string} [selectorCard] The CSS selector to find cards.\n   */\n  static options = {\n    selectorInit: '[data-card-list]',\n    selectorCard: '.bx--card',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/card.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\n\nexport default class NumberInput {\n  /**\n   * Number input UI.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a number input UI.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = options;\n    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n    // Also <svg> does not seems to have `Element.classList`.\n    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', (event) => this.handleClick(event));\n    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates number input UI of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates number input UI in the given node.\n   * If the given element indicates that it's an number input UI, instantiates it.\n   * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n   * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find number input UIs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const state = event.currentTarget.classList;\n    const numberInput = this.element.querySelector('.bx--number__input');\n\n    if (state.contains('bx--number__arrow--up')) {\n      if (this.options.ie) {\n        ++numberInput.value;\n      } else {\n        numberInput.stepUp();\n      }\n    } else if (state.contains('bx--number__arrow--down')) {\n      if (this.options.ie) {\n        if (numberInput.value > 0) {\n          --numberInput.value;\n        }\n      } else {\n        numberInput.stepDown();\n      }\n    } else {\n      return;\n    }\n\n    // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n    numberInput.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      cancelable: false,\n    }));\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and number input UI instance.\n   * @member NumberInput.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n   * @member NumberInput.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find number input UIs.\n   */\n  static options = {\n    selectorInit: '[data-numberinput]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/number-input.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport optimizedResize from '../misc/resize';\n\nexport default class ResponsiveTable {\n  /**\n   * Responsive Table\n   * @implements components\n   * @param {HTMLElement} element The root element of tables\n   * @param {Object} [options] the... options\n   * @param {string} [options.selectorInit] selector initialization\n   * @param {string} [options.selectorExpandCells] css selector for expand\n   * @param {string} [options.expandableRow] css selector for expand\n   * @param {string} [options.selectorParentRows] css selector for rows housing expansion\n   * @param {string} [options.selectorTableBody] root css for table body\n   * @param {string} [options.overflowMenu] any overflow menus\n   * @param {string} [options.eventTrigger] selector for event bubble capture points\n   * @param {string} [options.eventParentContainer] used find the bubble container\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('Responsive Tables requires a DOM element');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.container = element.parentNode; // requires the immediate parent to be the container\n    this.expandCells = [...this.element.querySelectorAll(this.options.selectorExpandCells)];\n    this.expandableRows = [...this.element.querySelectorAll(this.options.selectorExpandableRows)];\n    this.parentRows = [...this.element.querySelectorAll(this.options.selectorParentRows)];\n    this.tableBody = this.element.querySelector(this.options.selectorTableBody);\n\n    this.zebraStripe();\n    this.initExpandableRows();\n    this.initOverflowMenus();\n\n    this.element.addEventListener('click', evt => {\n      const eventElement = eventMatches(evt, this.options.eventTrigger);\n      if (eventElement) {\n        this.emitEvent(eventElement, evt);\n      }\n    });\n\n    this.constructor.components.set(this.element, this);\n  }\n\n  /**\n   * Create an object to be used in event emission\n   */\n  getEventDetails = (element, data, evt) => {\n    const { event } = data;\n    const label = (data.label) ? data.label : '';\n    const previousValue = (data.previousValue) ? data.previousValue : '';\n    const initialEvt = evt;\n\n    return {\n      element,\n      event,\n      label,\n      previousValue,\n      initialEvt,\n    };\n  }\n\n  /**\n   * Standardize way to emit events\n   */\n  emitEvent = (element, evt) => {\n    const detail = this.getEventDetails(element, element.dataset, evt);\n\n    const eventBefore = new CustomEvent(`before${detail.event}`, {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    const eventAfter = new CustomEvent(`${detail.event}`, {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    const canceled = !this.element.dispatchEvent(eventBefore);\n\n    if (!canceled) {\n      this[this.constructor.eventHandlers[detail.event]](detail);\n      this.element.dispatchEvent(eventAfter);\n    }\n  }\n\n  /**\n   * Zebra stripes - done in javascript to handle expandable rows\n   */\n  zebraStripe = () => {\n    this.parentRows.forEach((item, index) => {\n      if (index % 2 === 0) {\n        item.classList.add(this.options.classParentRowEven);\n        if (item.nextElementSibling && item.nextElementSibling.classList.contains(this.options.classExpandableRow)) {\n          item.nextElementSibling.classList.add(this.options.classExpandableRowEven);\n        }\n      }\n    });\n  }\n\n  /**\n   * Find all expandable rows and remove them from the DOM\n   */\n  initExpandableRows = () => {\n    this.expandableRows.forEach(item => {\n      item.classList.remove(this.options.classExpandableRowHidden);\n      this.tableBody.removeChild(item);\n    });\n  }\n\n  /**\n   * Because tables has an overflow-x on it, we need to pop the overflow\n   * options outside of the table. This appends to the body and tags a resize\n   * listener to reposition when needed\n   */\n  initOverflowMenus = () => {\n    if (!this.element.querySelector(this.options.selectorOverflowMenu)) {\n      return false;\n    }\n\n    const menuMap = [...this.element.querySelectorAll(this.options.selectorOverflowMenu)].map(menu => {\n      return {\n        element: menu,\n        optionMenu: menu.querySelector(this.options.selectorOverflowMenuOptions),\n      };\n    });\n\n    optimizedResize.add(() => {\n      menuMap.forEach(menu => {\n        this.placeOverflow({\n          detail: menu,\n        });\n      });\n    });\n\n    menuMap.forEach(menu => {\n      document.body.appendChild(menu.optionMenu);\n    });\n\n    this.element.addEventListener('overflow-menu-shown', this.placeOverflow);\n  }\n\n  /**\n   * When called, finds the position of the icon supplied and positions\n   * the menu relative to that\n   *\n   * Uses fixed because getBoundingClientRect is relative to viewport\n   */\n  placeOverflow = (evt) => {\n    const { element, optionMenu } = evt.detail;\n\n    const icon = element.querySelector(this.options.selectorOverflowMenuIcon);\n    const position = icon.getBoundingClientRect();\n\n    optionMenu.style.position = 'absolute';\n    optionMenu.style.top = `${position.top + element.ownerDocument.defaultView.scrollY}px`;\n    optionMenu.style.left = `${position.right}px`;\n    optionMenu.style.right = 'auto';\n  }\n\n  /**\n   * On trigger, insert the expandable row back in\n   */\n  toggleRowExpand = (detail) => {\n    const element = detail.element;\n    const parent = eventMatches(detail.initialEvt, this.options.eventParentContainer);\n\n    const index = this.expandCells.indexOf(element);\n    if (element.dataset.previousValue === undefined || element.dataset.previousValue === 'expanded') {\n      element.dataset.previousValue = 'collapsed';\n      this.tableBody.insertBefore(this.expandableRows[index], this.parentRows[index + 1]);\n    } else {\n      this.tableBody.removeChild(parent.nextElementSibling);\n      element.dataset.previousValue = 'expanded';\n    }\n  }\n\n  /**\n   * On trigger, flip the sort icon\n   */\n  toggleSort = (detail) => {\n    const { element, previousValue } = detail;\n\n    if (!previousValue || previousValue === 'descending') {\n      element.dataset.previousValue = 'ascending';\n      element.classList.add(this.options.classTableSortAscending);\n    } else {\n      element.dataset.previousValue = 'descending';\n      element.classList.remove(this.options.classTableSortAscending);\n    }\n  }\n\n  /**\n   * On trigger, check all checkboxes\n   */\n  toggleSelectAll = (detail) => {\n    const { element, previousValue } = detail;\n    const inputs = [...this.element.querySelectorAll(this.options.selectorCheckbox)];\n    if (!previousValue || previousValue === 'toggled') {\n      inputs.forEach(item => item.checked = true);\n      element.dataset.previousValue = 'off';\n    } else {\n      inputs.forEach(item => item.checked = false);\n      element.dataset.previousValue = 'toggled';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  static components = new WeakMap();\n\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  static eventHandlers = {\n    expand: 'toggleRowExpand',\n    sort: 'toggleSort',\n    'select-all': 'toggleSelectAll',\n  };\n\n  static options = {\n    selectorInit: '[data-responsive-table]',\n    selectorExpandCells: '.bx--table-expand',\n    selectorExpandableRows: '.bx--expandable-row',\n    selectorParentRows: '.bx--parent-row',\n    selectorTableBody: '.bx--table-body',\n    selectorOverflowMenu: '[data-overflow-menu]',\n    selectorCheckbox: '.bx--checkbox',\n    selectorOverflowMenuIcon: '.bx--overflow-menu__icon',\n    selectorOverflowMenuOptions: '.bx--overflow-menu__options',\n    classParentRowEven: 'bx--parent-row--even',\n    classExpandableRow: 'bx--expandable-row',\n    classExpandableRowEven: 'bx--expandable-row--even',\n    classExpandableRowHidden: 'bx--expandable-row--hidden',\n    classTableSortAscending: 'bx--table-sort--ascending',\n    eventTrigger: '[data-event]',\n    eventParentContainer: '[data-parent-row]',\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/responsive-table.js\n **/","// mdn resize function\n\nconst optimizedResize = (function optimizedResize() {\n  const callbacks = [];\n  let running = false;\n\n  // run the actual callbacks\n  function runCallbacks() {\n    callbacks.forEach((callback) => {\n      callback();\n    });\n\n    running = false;\n  }\n\n  // fired on resize event\n  function resize() {\n    if (!running) {\n      running = true;\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(runCallbacks);\n      } else {\n        setTimeout(runCallbacks, 66);\n      }\n    }\n  }\n\n  // adds callback to loop\n  function addCallback(callback) {\n    if (callback) {\n      callbacks.push(callback);\n    }\n  }\n\n  return {\n    // public method to add additional callback\n    add: (callback) => {\n      if (!callbacks.length) {\n        window.addEventListener('resize', resize);\n      }\n      addCallback(callback);\n    },\n  };\n}());\n\nexport default optimizedResize;\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/misc/resize.js\n **/","import '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport eventMatches from '../polyfills/event-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class Table {\n  /**\n   * Data table.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates a data table of the given element.\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Sets up the given node to instantiate data tables in.\n   * If the given element indicates that it's an data table, instantiates it.\n   * Otherwise, lazily instantiates data table when it's clicked on.\n   * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find data tables.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, effectiveOptions.selectorInit);\n        if (element && !this.components.has(element)) {\n          this.create(element, effectiveOptions).handleClick(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles click on data table.\n   * * If the click is on a column title, toggles its sorting state.\n   * * If the click is on a check box, toggles the check box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const title = eventMatches(event, this.options.selectorTitle);\n    const row = eventMatches(event, this.options.selectorRow);\n    const checkbox = eventMatches(event, this.options.selectorCheckbox);\n    if (title) {\n      this.toggleState('Sort', title);\n    }\n    if (row && checkbox) {\n      this.toggleState('Check', row);\n    }\n  }\n\n  /**\n   * The callback called once toggling is finished or is canceled.\n   * @callback Table~toggleStateCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the toggling is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {HTMLElement} element The toggled element.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Toggles a sorting state or a check box's state.\n   * @param {string} type\n   *   Specifies what state to toggle:\n   *   * `\"Sort\"` for toggling a sorting state.\n   *   * `\"Check\"` for toggling a check box's state.\n   * @param {HTMLElement} element The DOM element to toggle its state.\n   * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n   */\n  toggleState(type, element, callback) {\n    const newState = !element.classList.contains(this.options[`class${type}State`]);\n    const eventStart = new CustomEvent(this.options[`eventBefore${type}Toggled`], {\n      bubbles: true,\n      cancelable: true,\n      detail: { newState },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (element.dispatchEvent(eventStart)) {\n      toggleClass(element, this.options[`class${type}State`], newState);\n      // this._changeActive(item);\n      element.dispatchEvent(new CustomEvent(this.options[`eventAfter${type}Toggled`], {\n        bubbles: true,\n        cancelable: true,\n        detail: { newState },\n      }));\n      if (callback) {\n        callback(null, element, newState);\n      }\n    } else {\n      const error = new Error('Toggling on table has been canceled.');\n      error.canceled = true;\n      error.element = element;\n      error.newState = newState;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and data table instance.\n   * @member Table.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Table.create .create()}, or {@linkcode Table.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Table.init .init()} works.\n   * @member Table.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find data tables.\n   * @property {string} [selectorTitle] The CSS selector to find column titles.\n   * @property {string} [selectorRow] The CSS selector to find rows.\n   * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n   * @property {string} [classSortState] The CSS class for the sorting state.\n   * @property {string} [classCheckState] The CSS class for the checked state.\n   * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  static options = {\n    selectorInit: '[data-table]',\n    selectorTitle: '.bx--table__column-title',\n    selectorRow: '.bx--table__row',\n    selectorCheckbox: '.bx--checkbox',\n    classSortState: 'bx--table__column-title--rotated',\n    classCheckState: 'bx--table__row--checked',\n    eventBeforeSortToggled: 'table-sort-beingtoggled',\n    eventAfterSortToggled: 'table-sort-toggled',\n    eventBeforeCheckToggled: 'table-check-beingtoggled',\n    eventAfterCheckToggled: 'table-check-toggled',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/table.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport debounce from 'lodash.debounce';\n\nexport default class DetailPageHeader {\n\n  /**\n   * The Detail Page Header.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a page header.\n   * @param {Object} [options] The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    // Debounce scroll event calls to handleScroll\n    const debouncedScroll = debounce(this.handleScroll.bind(this), 50);\n\n    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n  }\n\n  /**\n   * Instantiates detail page header of the given element.\n   * @param {HTMLElement} element The element.\n   * @param {Object} [options] The component options.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates the detail page header in the given element.\n   * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n   * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n   * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find detail page headers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Adds class to header based on users position on the page\n   */\n  handleScroll() {\n    if (this.element.ownerDocument.defaultView.scrollY > 101) {\n      this.element.classList.add(this.options.slideUp);\n    } else {\n      this.element.classList.remove(this.options.slideUp);\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and detail page header instance.\n   * @member DetailPageHeader.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode DetailPageHeader.create .create()}, or {@linkcode DetailPageHeader.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode DetailPageHeader.init .init()} works.\n   * @member DetailPageHeader.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find detail page headers.\n   */\n  static options = {\n    slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up',\n    selectorInit: '[data-detail-page-header]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/detail-page-header.js\n **/","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.debounce/index.js\n ** module id = 26\n ** module chunks = 0\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class LeftNav {\n  /**\n   * Left Navigation.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.leftNavSectionActive = false;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookOpenActions();\n    this.hookListSectionEvents();\n    this.hookListItemsEvents();\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n  }\n\n  /**\n   * Instantiates a left navigation of the given element.\n   * @param {HTMLElement} element The element working as the left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a left navigation in the given node.\n   * If the given element indicates that it's a left navigation (having `data-left-nav-container` attribute), instantiates it.\n   * Otherwise, instantiates left navigation by searching for left navigation in the given node.\n   * @param {Node} target The DOM node to instantiate left navigation in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find left nav containers.\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [...target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Closes the menu.\n   */\n  closeMenu() {\n    this.element.classList.remove(this.options.classActiveLeftNav);\n    this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.remove(this.options.classActiveTrigger);\n    this.element.querySelector(this.options.selectorLeftNav).parentNode.setAttribute('aria-expanded', 'false');\n  }\n\n  /**\n   * Toggles the menu to open and close.\n   */\n  toggleMenu() {\n    const leftNavContainer = this.element.querySelector(this.options.selectorLeftNav).parentNode;\n    this.element.classList.toggle(this.options.classActiveLeftNav);\n    this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.toggle(this.options.classActiveTrigger);\n    if (leftNavContainer.getAttribute('aria-expanded') === 'false') leftNavContainer.setAttribute('aria-expanded', 'true');\n    else leftNavContainer.setAttribute('aria-expanded', 'false');\n  }\n\n  /**\n   * Adds a transitional animation to the navSection\n   */\n  animateNavSection(selectedNav) {\n    const selectedNavValue = selectedNav.dataset.leftNavSection;\n    const selectedNavLink = selectedNav.querySelector(this.options.selectorLeftNavSectionLink);\n    const leftNav = this.element.querySelector(this.options.selectorLeftNav);\n    const leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n\n    selectedNav.classList.remove(this.options.classNavSection);\n    selectedNav.classList.remove(`${this.options.classNavSection}--${selectedNavValue}`);\n    selectedNav.classList.add(this.options.classNavSectionTransition);\n    if (leftNavSections.children[0] === selectedNav) selectedNav.classList.add(`${this.options.classNavSectionTransition}--50`); // First child only move 50px\n    else selectedNav.classList.add(`${this.options.classNavSectionTransition}--100`); // Second move 100px\n    selectedNav.setAttribute('data-left-nav-section', selectedNavValue);\n    /* Not sure what trick more performant*/\n    setTimeout(() => {\n      selectedNav.classList.add(`${this.options.classNavSectionTransition}--0`);\n    }, 100); // Could probably use a promise here\n\n    selectedNavLink.classList.remove(this.options.classNavSectionLink);\n    selectedNavLink.classList.add(this.options.classNavHeaderTitle);\n    selectedNavLink.setAttribute('data-left-nav-current-section-title', '');\n    selectedNavLink.removeAttribute('data-left-nav-section-link');\n\n    this.element.insertBefore(selectedNav, leftNav);\n  }\n\n  /**\n   * Adds a transitional animation to the navigation items on nav section click\n   */\n  animateNavList(selectedNavTitle) {\n    const currentLeftNavList = this.element.querySelector(`${this.options.selectorLeftNavList}:not(.bx--left-nav__main-nav--hidden)`);\n    const newLeftNavList = this.element.querySelector(`[data-left-nav-list=${selectedNavTitle}]`);\n    const currentLeftNavItems = [...currentLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)].reverse();\n    const newLeftNavItems = [...newLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)];\n\n    const fadeOutTime = 300;\n    let counter = 0;\n    const counterIteration = fadeOutTime / currentLeftNavItems.length; // Length of animation divided by number of items\n    currentLeftNavItems.forEach(item => {\n      item.setAttribute('tabIndex', '-1');\n      setTimeout(() => {\n        item.classList.add(this.options.classItemFade);\n      }, counter);\n      counter += counterIteration;\n    });\n\n    newLeftNavItems.forEach(item => {\n      item.setAttribute('tabIndex', '0');\n      item.classList.remove(this.options.classItemFade);\n    });\n\n    setTimeout(() => {\n      currentLeftNavList.classList.add(this.options.classListHidden);\n      currentLeftNavList.classList.add(this.options.classListTop);\n      currentLeftNavList.setAttribute('aria-hidden', 'true');\n      newLeftNavList.classList.remove(this.options.classListHidden);\n      setTimeout(() => { newLeftNavList.classList.remove(this.options.classListTop); }, 100);\n      newLeftNavList.setAttribute('aria-hidden', 'false');\n    }, fadeOutTime + 100); // Wait for items to fade out.\n  }\n\n  hookOpenActions() {\n    const openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n    const closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n\n    openBtn.addEventListener('click', () => {\n      this.element.tabIndex = '0';\n      this.toggleMenu();\n    });\n\n    openBtn.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.element.tabIndex = '0';\n        this.toggleMenu();\n      }\n    });\n\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        this.element.tabIndex = '-1';\n        this.closeMenu();\n      });\n\n      closeBtn.addEventListener('keydown', (evt) => {\n        if (evt.which === 13) {\n          this.element.tabIndex = '-1';\n          this.closeMenu();\n        }\n      });\n    }\n\n    this.element.ownerDocument.addEventListener('keydown', (evt) => {\n      if ((evt.which === 27) && this.element.classList.contains(this.options.classActiveLeftNav)) {\n        this.closeMenu();\n      }\n    });\n  }\n\n  /**\n   * Addes Event listeners to list sections\n   */\n  hookListSectionEvents() {\n    const leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n    leftNavSections.addEventListener('click', (evt) => {\n      this.handleSectionItemClick(evt, leftNavSections);\n    });\n\n    leftNavSections.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.handleSectionItemClick(evt, leftNavSections);\n        this.element.querySelector(this.options.selectorLeftNavCurrentSectionTitle).focus();\n      }\n    });\n  }\n\n  /**\n   * Adds event listeners to list items\n   */\n  hookListItemsEvents() {\n    const leftNavList = [...this.element.querySelectorAll(this.options.selectorLeftNavList)];\n    leftNavList.forEach(list => {\n      list.addEventListener('click', (evt) => {\n        const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n        if (leftNavItem) {\n          const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n          const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n          const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n          if (flyoutItem) {\n            this.addActiveListItem(flyoutItem);\n          } else if (childItem) {\n            if (childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n              const flyoutMenu = childItem.querySelector(this.options.selectorLeftNavFlyoutMenu);\n              flyoutMenu.classList.toggle(this.options.classFlyoutDisplayed);\n            } else {\n              this.addActiveListItem(childItem);\n            }\n          } else if (hasChildren) {\n            this.handleNestedListClick(leftNavItem);\n          } else {\n            this.addActiveListItem(leftNavItem);\n          }\n        }\n      });\n      list.addEventListener('keydown', (evt) => {\n        if (evt.which === 13) {\n          const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n          if (leftNavItem) {\n            const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n            const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n            const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n            if (flyoutItem) {\n              this.addActiveListItem(flyoutItem);\n            } else if (childItem) {\n              if (!childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n                this.addActiveListItem(childItem);\n              } else {\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${childItem.offsetTop - this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${childItem.offsetLeft + Math.round(childItem.offsetWidth)}px`;\n              }\n            } else if (hasChildren) {\n              this.handleNestedListClick(leftNavItem);\n            } else {\n              this.addActiveListItem(leftNavItem);\n            }\n          }\n        }\n      });\n    });\n    const flyouts = [...this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout)];\n    flyouts.forEach(flyout => {\n      flyout.addEventListener('mouseenter', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${flyout.offsetTop - this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${flyout.offsetLeft + Math.round(flyout.offsetWidth)}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.toggle(this.options.classFlyoutDisplayed);\n      });\n      flyout.addEventListener('mouseleave', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'true');\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      });\n    });\n  }\n\n  /**\n   * Hides all flyout menus.\n   */\n  hideAllFlyoutMenus() {\n    const flyoutMenus = [...this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu)];\n    flyoutMenus.forEach(menu => {\n      menu.setAttribute('aria-hidden', 'true');\n      menu.classList.remove(this.options.classFlyoutDisplayed);\n    });\n  }\n\n  /**\n   * Sets a list item as active.\n   * @param {Object} item The active list item.\n   */\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavAllListItems)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        if (!currentItem.contains(item)) {\n          currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n        } else {\n          currentItem.classList.add(this.options.classActiveLeftNavListItem);\n        }\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n    this.closeMenu();\n    this.hideAllFlyoutMenus();\n    this.closeMenu();\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the left navigation when document is clicked outside the left navigation.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n    const isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n    const shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n    let flyoutOpen;\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      flyoutOpen = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.contains(this.options.classFlyoutDisplayed);\n    }\n    if (isOfSelf && this.element.tagName === 'A') {\n      evt.preventDefault();\n    }\n    if (shouldClose) {\n      this.closeMenu();\n    }\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      if (flyoutOpen && !isOfSelf && isOpen) {\n        this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      }\n    }\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n  handleNestedListClick(listItem) {\n    const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n    this.hideAllFlyoutMenus();\n    toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n    const listItems = [...listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n    listItems.forEach(item => {\n      if (isOpen) {\n        listItem.querySelector(this.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'true');\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n      } else {\n        listItem.querySelector(this.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'false');\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n      }\n    });\n  }\n\n  handleSectionItemClick(evt, leftNavSections) { // Sorry\n    const leftNavSectionItem = eventMatches(evt, this.options.selectorLeftNavSection);\n    if (leftNavSectionItem) {\n      // currently selected\n      const selectedLeftNavSectionItem = this.element.querySelector(this.options.selectorLeftNavCurrentSection);\n      const selectedLeftNavSectionItemTitle = selectedLeftNavSectionItem.querySelector(this.options.selectorLeftNavCurrentSectionTitle);\n      const selectedLeftNavSectionItemIcon = this.element.querySelector(this.options.selectorLeftNavCurrentSectionIcon);\n      const selectedLeftNavSectionItemUse = selectedLeftNavSectionItemIcon.querySelector('use');\n      const selectedLeftNavSectionValue = selectedLeftNavSectionItem.dataset.leftNavCurrentSection;\n\n      // clicked on item\n      const leftNavSectionItemLink = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionLink);\n      const leftNavSectionItemIcon = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionIcon);\n      const leftNavSectionItemIconUse = leftNavSectionItemIcon.querySelector('use');\n      const leftNavSectionValue = leftNavSectionItem.dataset.leftNavSection;\n\n\n      if (this.leftNavSectionActive) {\n        return;\n      }\n      this.leftNavSectionActive = true;\n\n      const newLeftNavSectionItem = document.createElement('li');\n      newLeftNavSectionItem.setAttribute('data-left-nav-section', selectedLeftNavSectionValue);\n      newLeftNavSectionItem.classList.add(this.options.classNavSection);\n      newLeftNavSectionItem.classList.add(`${this.options.classNavSection}--${selectedLeftNavSectionValue}`);\n\n      const newLeftNavSectionItemAnchor = document.createElement('a');\n      newLeftNavSectionItemAnchor.setAttribute('href', 'javascript:void(0)'); // eslint-disable-line no-script-url\n      newLeftNavSectionItemAnchor.setAttribute('tabindex', 0);\n      newLeftNavSectionItemAnchor.classList.add(this.options.classNavSectionAnchor);\n\n      const newLeftNavSectionItemIcon = selectedLeftNavSectionItemIcon.cloneNode(true);\n      // IE11 doesn't support classList on SVG, must revert to className\n      newLeftNavSectionItemIcon.setAttribute('class', 'bx--left-nav__section--taxonomy-icon');\n      newLeftNavSectionItemIcon.removeAttribute('data-left-nav-current-section-icon');\n      newLeftNavSectionItemIcon.setAttribute('data-left-nav-section-icon', selectedLeftNavSectionValue);\n\n      const newLeftNavSectionItemLink = document.createElement('span');\n      newLeftNavSectionItemLink.setAttribute('data-left-nav-section-link', '');\n      newLeftNavSectionItemLink.classList.add(this.options.classNavSectionLink);\n      newLeftNavSectionItemLink.textContent = selectedLeftNavSectionItemTitle.textContent;\n\n      this.animateNavSection(leftNavSectionItem);\n      this.animateNavList(leftNavSectionValue);\n\n      newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemIcon);\n      newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemLink);\n      newLeftNavSectionItem.appendChild(newLeftNavSectionItemAnchor);\n      leftNavSections.insertBefore(newLeftNavSectionItem, leftNavSections.firstChild);\n\n      setTimeout(() => {\n        selectedLeftNavSectionItemTitle.textContent = leftNavSectionItemLink.textContent;\n        selectedLeftNavSectionItem.setAttribute('data-left-nav-current-section', leftNavSectionValue);\n        selectedLeftNavSectionItemIcon.setAttribute('data-left-nav-current-section-icon', leftNavSectionValue);\n        selectedLeftNavSectionItemUse.setAttribute('xlink:href', leftNavSectionItemIconUse.getAttribute('xlink:href'));\n\n        leftNavSectionItem.parentNode.removeChild(leftNavSectionItem); // Cant use .remove() because of IE11\n        this.leftNavSectionActive = false;\n      }, 450); // Wait for nav items to animate\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode LeftNav.create .create()}, or {@linkcode LeftNav.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode LeftNav.init .init()} works.\n   * @member LeftNav.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find left nav containers.\n   * @property {string} [selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @property {string} [selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @property {string} [selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @property {string} [selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @property {string} [selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @property {string} [selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @property {string} [selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @property {string} [selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @property {string} [selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @property {string} [selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @property {string} [selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @property {string} [classActiveLeftNav] The class name for when a left nav is active.\n   * @property {string} [classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @property {string} [classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @property {string} [classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @property {string} [classActiveSection] The class name for an active section item in the left nav header.\n   * @property {string} [classItemHasChildren] The class name for when a list item has children.\n   */\n  static options = {\n    selectorInit: '[data-left-nav-container]',\n    // Data Attribute selectors\n    selectorLeftNav: '[data-left-nav]',\n    selectorLeftNavList: '[data-left-nav-list]',\n    selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n    selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n    selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n    selectorLeftNavListItem: '[data-left-nav-item]',\n    selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n    selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n    selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n    selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n    selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n    selectorLeftNavSections: '[data-left-nav-sections]',\n    selectorLeftNavSection: '[data-left-nav-section]',\n    selectorLeftNavSectionLink: '[data-left-nav-section-link]',\n    selectorLeftNavSectionIcon: '[data-left-nav-section-icon]',\n    selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n    selectorLeftNavCurrentSectionTitle: '[data-left-nav-current-section-title]',\n    selectorLeftNavCurrentSectionIcon: '[data-left-nav-current-section-icon]',\n    selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n    selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n    selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n    // CSS Class Selectors\n    classActiveTrigger: 'bx--left-nav__trigger--active',\n    classActiveLeftNav: 'bx--left-nav--active',\n    classActiveLeftNavListItem: 'bx--active-list-item',\n    classExpandedLeftNavListItem: 'bx--main-nav__parent-item--expanded',\n    classFlyoutDisplayed: 'bx--nested-list__flyout-menu--displayed',\n    classItemHasChildren: 'bx--main-nav__parent-item--has-children',\n    classNavSection: 'bx--left-nav__section',\n    classNavSectionTransition: 'bx--left-nav__section--transition',\n    classNavSectionAnchor: 'bx--left-nav__section--anchor',\n    classNavSectionLink: 'bx--left-nav__section--link',\n    classNavHeaderTitle: 'bx--left-nav__header--title',\n    classItemFade: 'bx--main-nav__parent-item--fade',\n    classItemHidden: 'bx--main-nav__parent-item--hidden',\n    classListHidden: 'bx--left-nav__main-nav--hidden',\n    classListTop: 'bx--left-nav__main-nav--top',\n  };\n\n  /**\n   * The map associating DOM element and left navigation instance.\n   * @member LeftNav.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\n\nexport default class UnifiedHeader {\n\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n    this.constructor.components.set(this.element, this);\n  }\n\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  release() {\n    if (this.handleDocumentClick) {\n      this.element.ownerDocument.removeEventListener('click', (evt) => this.handleDocumentClick(evt));\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and left navigation instance.\n   * @member UnifiedHeader.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode UnifiedHeader.create .create()}, or {@linkcode UnifiedHeader.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode UnifiedHeader.init .init()} works.\n   * @member UnifiedHeader.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find unified headers.\n   */\n  static options = {\n    selectorInit: '[data-unified-header]',\n    // Data Attribute selectors\n    // CSS Class Selectors\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/unified-header.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class InlineLeftNav {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} options The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n    this.hookListItemsEvents();\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find inline left navs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  hookListItemsEvents() {\n    const leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n    leftNavList.addEventListener('click', (evt) => {\n      const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n      if (leftNavItem) {\n        const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n        const hasChildren = leftNavItem.classList.contains('left-nav-list__item--has-children');\n        if (childItem) {\n          this.addActiveListItem(childItem);\n        } else if (hasChildren) {\n          this.handleNestedListClick(leftNavItem, evt);\n        } else {\n          this.addActiveListItem(leftNavItem);\n        }\n      }\n    });\n    [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n      item.addEventListener('keydown', (evt) => {\n        const leftNavItemWithChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n        if (leftNavItemWithChildren && evt.which === 13) {\n          this.handleNestedListClick(leftNavItemWithChildren, evt);\n        }\n      });\n    });\n  }\n\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * The nested list is expanded and the icon is rotated.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n   handleNestedListClick(listItem, evt) {\n     const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n     if (!('leftNavItemLink' in evt.target.dataset)) {\n       toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n     }\n     const list = listItem.querySelector(this.options.selectorLeftNavNestedList);\n     const listItems = [... list.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n     listItems.forEach(item => {\n       if (isOpen) {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n       } else {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n       }\n     });\n   }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and spinner instance.\n   * @member InlineLeftNav.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode InlineLeftNav.create .create()}, or {@linkcode InlineLeftNav.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode InlineLeftNav.init .init()} works.\n   * @member InlineLeftNav.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find inline left navs.\n   */\n  static options = {\n    selectorInit: '[data-inline-left-nav]',\n    // Data Attribute selectors\n    selectorLeftNavList: '[data-inline-left-nav-list]',\n    selectorLeftNavNestedList: '[data-inline-left-nav-nested-list]',\n    selectorLeftNavListItem: '[data-inline-left-nav-item]',\n    selectorLeftNavListItemLink: '[data-inline-left-nav-item-link]',\n    selectorLeftNavNestedListItem: '[data-inline-left-nav-nested-item]',\n    selectorLeftNavListItemHasChildren: '[data-inline-left-nav-with-children]',\n    // CSS Class Selectors\n    classActiveLeftNavListItem: 'left-nav-list__item--active',\n    classExpandedLeftNavListItem: 'left-nav-list__item--expanded',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/inline-left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class ProfileSwitcher {\n  /**\n   * Profile Switcher.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a profile switcher.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n   * @param {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n   * @param {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n   * @param {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n   * @param {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n   * @param {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n   * @param {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n\n    this.element.addEventListener('dropdown-beingselected', (event) => {\n      if (event.target.querySelector(this.options.selectorAccountDropdown) !== null) {\n        if (event.detail.item.querySelector(this.options.classLinkedIcon) !== null) {\n          this.element.linkedAccount = event.detail.item.querySelector(this.options.selectorAccountSlLinked).cloneNode(true);\n          this.element.isLinked = true;\n          this.element.linkedIcon = event.detail.item.querySelector(this.options.classLinkedIcon).cloneNode(true);\n        } else {\n          this.element.linkedAccount = '';\n          this.element.isLinked = false;\n          this.element.linkedIcon = '';\n        }\n      }\n    });\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('keydown', (event) => this.toggle(event));\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseenter', (event) => {\n      this.getLinkedData(event);\n      this.determineSwitcherValues(true);\n    });\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseleave', (event) => {\n      this.getLinkedData(event);\n      this.determineSwitcherValues(false);\n    });\n\n    this.element.ownerDocument.addEventListener('keyup', () => this.handleBlur());\n  }\n\n  /**\n   * Instantiates a profile switcher of the given element.\n   * @param {HTMLElement} element The element working as the profile switcher.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a profile switcher in the given node.\n   * If the given element indicates that it's a profile switcher (having `data-profile-switcher` attribute), instantiates it.\n   * Otherwise, instantiates profile switcher by searching for profile switcher in the given node.\n   * @param {Node} target The DOM node to instantiate profile switcher in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find profile switchers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Opens and closes the menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    const isOfSelf = this.element.contains(event.target);\n    if (event.which === 13 || event.which === 32) {\n      if (isOfSelf) {\n        this.element.classList.toggle(this.options.classSwitcherOpen);\n      } else if (!isOfSelf && this.element.classList.contains(this.options.classSwitcherOpen)) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      }\n    }\n  }\n\n  getLinkedData(event) {\n    if (event.target.querySelector(this.options.selectorLinkedAccount) !== null) {\n      if (event.target.querySelector(this.options.selectorLinkedAccount).textContent.length > 1) {\n        this.element.isLinked = true;\n      } else {\n        this.element.isLinked = false;\n      }\n    }\n  }\n\n  handleBlur() {\n    if (!(this.element.contains(document.activeElement))) {\n      this.element.classList.remove(this.options.classSwitcherOpen);\n    }\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the profile switcherwhen document is clicked outside the left navigation or\n   * the user clicks the profile switcher while it is open.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggle = this.element.ownerDocument.querySelector(this.options.selectorToggle).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    if (isOfSelf) {\n      if (isToggle && isOpen) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      } else if (isOpen) {\n        this.determineSwitcherValues();\n      } else {\n        this.element.classList.add(this.options.classSwitcherOpen);\n      }\n    } else {\n      this.element.classList.remove(this.options.classSwitcherOpen);\n    }\n  }\n\n  /**\n   * Handles logic to determine what text to display in profile switcher.\n   * If the text is over 25 characters long, truncate and add ellipses.\n   * Also adds logic to change the switcher width based on the width of the hovered\n   * profile switcher\n   * @param {boolean} isHovered boolean value passed by the event listener on bx--toggle.\n   */\n  determineSwitcherValues(isHovered) {\n    const linkedElement = this.element.querySelector(this.options.selectorLinkedAccount);\n    const nameElement = this.element.querySelector(this.options.selectorAccount);\n    const regionElement = this.element.querySelector(this.options.selectorRegion);\n    const orgElement = this.element.querySelector(this.options.selectorOrg);\n    const spaceElement = this.element.querySelector(this.options.selectorSpace);\n    const menuElement = this.element.querySelector(this.options.selectorMenu);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    if (linkedElement) {\n      if (this.element.isLinked) {\n        if (this.element.linkedAccount) {\n          linkedElement.appendChild(this.element.linkedAccount);\n        }\n        if (this.element.linkedIcon) {\n          linkedElement.appendChild(this.element.linkedIcon);\n        }\n      } else {\n        linkedElement.textContent = '';\n      }\n    }\n\n\n    let nameDropdownValue = '';\n    if (this.element.querySelector(this.options.selectorAccountDropdown)) {\n      if (this.element.isLinked) {\n        nameDropdownValue = this.element.querySelector(this.options.selectorAccountLinked).textContent;\n      } else {\n        nameDropdownValue = this.element.querySelector(this.options.selectorAccountDropdown).textContent;\n      }\n    }\n\n    let regionDropdownValue = '';\n    if (this.element.querySelector(this.options.selectorRegionDropdown)) {\n      regionDropdownValue = this.element.querySelector(this.options.selectorRegionDropdown).textContent;\n    }\n\n    let orgDropdownValue = '';\n    if (this.element.querySelector(this.options.selectorOrgDropdown)) {\n      orgDropdownValue = this.element.querySelector(this.options.selectorOrgDropdown).textContent;\n    }\n\n    let spaceDropdownValue = '';\n    if (this.element.querySelector(this.options.selectorSpaceDropdown)) {\n      spaceDropdownValue = this.element.querySelector(this.options.selectorSpaceDropdown).textContent;\n    }\n\n    let nameShort;\n    let orgShort;\n    let spaceShort;\n\n    if (isHovered && !isOpen) {\n      nameElement.textContent = nameDropdownValue;\n      orgElement.textContent = orgDropdownValue;\n      spaceElement.textContent = spaceDropdownValue;\n      regionElement.textContent = regionDropdownValue;\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    } else {\n      if (nameDropdownValue.length > 25) {\n        nameShort = nameDropdownValue.substr(0, 25) + '...';\n        nameElement.textContent = nameShort;\n      } else {\n        nameElement.textContent = nameDropdownValue;\n      }\n\n      if (orgDropdownValue.length > 25) {\n        orgShort = orgDropdownValue.slice(0, 12) + '...' + orgDropdownValue.slice(-13);\n        orgElement.textContent = orgShort;\n      } else {\n        orgElement.textContent = orgDropdownValue;\n      }\n\n      if (spaceDropdownValue.length > 25) {\n        spaceShort = spaceDropdownValue.substr(0, 25) + '...';\n        spaceElement.textContent = spaceShort;\n      } else {\n        spaceElement.textContent = spaceDropdownValue;\n      }\n\n      regionElement.textContent = regionDropdownValue;\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The component options.\n   * @member ProfileSwitcher.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find profile switchers.\n   * @property {string} [selectorProfileSwitcher] The data attribute selector for the profile switcher.\n   * @property {string} [selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n   * @property {string} [selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n   * @property {string} [selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n   * @property {string} [selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n   * @property {string} [selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n   * @property {string} [selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n   */\n  static options = {\n    selectorInit: '[data-profile-switcher]',\n    // Data Attribute selectors\n    selectorProfileSwitcher: '[data-profile-switcher]',\n    selectorToggle: '[data-profile-switcher-toggle]',\n    selectorMenu: '[data-switcher-menu]',\n    selectorLinkedAccount: '[data-switcher-account-sl]',\n    selectorAccount: '[data-switcher-account]',\n    selectorRegion: '[data-switcher-region]',\n    selectorOrg: '[data-switcher-org]',\n    selectorSpace: '[data-switcher-space]',\n    selectorDropdown: '[data-dropdown]',\n    selectorAccountDropdown: '[data-dropdown-account]',\n    selectorAccountSlDropdown: '[data-dropdown-account-sl]',\n    selectorAccountLinked: '[data-dropdown-account-linked]',\n    selectorAccountSlLinked: '[data-dropdown-account-sl-linked]',\n    selectorRegionDropdown: '[data-dropdown-region]',\n    selectorOrgDropdown: '[data-dropdown-org]',\n    selectorSpaceDropdown: '[data-dropdown-space]',\n    classSwitcherOpen: 'bx--account-switcher--open',\n    classLinkedIcon: '.bx--account-switcher__linked-icon',\n  };\n\n  /**\n   * The map associating DOM element and profile switcher instance.\n   * @member ProfileSwitcher.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/profile-switcher.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\n\nexport default class Pagination {\n  /**\n  * Pagination component.\n  * @implements Component\n  * @param {HTMLElement} element The element working as a pagination component.\n  * @param {Object} [options] The component options.\n  * @property {string} [selectorInit] The CSS selector to find pagination components.\n  * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n  * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n  * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n  * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n  * @property {string} [eventItemsPerPage]\n  *   The name of the custom event fired when a user changes the number of items per page.\n  *   event.detail.value contains the number of items a user wishes to see.\n  * @property {string} [eventPageNumber]\n  *   The name of the custom event fired when a user inputs a specific page number.\n  *   event.detail.value contains the value that the user input.\n  * @property {string} [eventPageChange]\n  *   The name of the custom event fired when a user goes forward or backward a page.\n  *   event.detail.direction contains the direction a user wishes to go.\n  */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (evt) => {\n      if (evt.target.matches(this.options.selectorPageBackward)) {\n        const detail = {\n          initialEvt: evt,\n          element: evt.target,\n          direction: 'backward',\n        };\n        this.emitEvent(this.options.eventPageChange, detail);\n      } else if (evt.target.matches(this.options.selectorPageForward)) {\n        const detail = {\n          initialEvt: evt,\n          element: evt.target,\n          direction: 'forward',\n        };\n        this.emitEvent(this.options.eventPageChange, detail);\n      }\n    });\n\n    this.element.addEventListener('input', (evt) => {\n      if (evt.target.matches(this.options.selectorItemsPerPageInput)) {\n        const detail = {\n          initialEvt: evt,\n          element: evt.target,\n          value: evt.target.value,\n        };\n        this.emitEvent(this.options.eventItemsPerPage, detail);\n      } else if (evt.target.matches(this.options.selectorPageNumberInput)) {\n        const detail = {\n          initialEvt: evt,\n          element: evt.target,\n          value: evt.target.value,\n        };\n        this.emitEvent(this.options.eventPageNumber, detail);\n      }\n    });\n  }\n\n  /**\n   * Dispatches a custom event\n   * @param {String} evtName name of the event to be dispatched.\n   * @param {Object} detail contains the original event and any other necessary details.\n   */\n  emitEvent = (evtName, detail) => {\n    const event = new CustomEvent(`${evtName}`, {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    this.element.dispatchEvent(event);\n  }\n\n  /**\n   * Instantiates a pagination component of the given element.\n   * @param {HTMLElement} element The element working as a pagination component.\n   * @param {Object} [options] The component options.\n  * @property {string} [selectorInit] The CSS selector to find pagination components.\n  * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n  * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n  * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n  * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n  * @property {string} [eventItemsPerPage]\n  *   The name of the custom event fired when a user changes the number of items per page.\n  *   event.detail.value contains the number of items a user wishes to see.\n  * @property {string} [eventPageNumber]\n  *   The name of the custom event fired when a user inputs a specific page number.\n  *   event.detail.value contains the value that the user input.\n  * @property {string} [eventPageChange]\n  *   The name of the custom event fired when a user goes forward or backward a page.\n  *   event.detail.direction contains the direction a user wishes to go.\n  */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n  * Sets up the given node to instantiate a pagination component in.\n  * If the given element indicates that it's an pagination component, instantiates it.\n  * Otherwise, lazily instantiates pagination component when it's clicked on.\n  * @param {Node} target The DOM node to instantiate pagination component in. Should be a document or an element.\n  * @param {Object} [options] The component options.\n  * @property {string} [selectorInit] The CSS selector to find pagination components.\n  * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n  * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n  * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n  * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n  * @property {string} [eventItemsPerPage]\n  *   The name of the custom event fired when a user changes the number of items per page.\n  *   event.detail.value contains the number of items a user wishes to see.\n  * @property {string} [eventPageNumber]\n  *   The name of the custom event fired when a user inputs a specific page number.\n  *   event.detail.value contains the value that the user input.\n  * @property {string} [eventPageChange]\n  *   The name of the custom event fired when a user goes forward or backward a page.\n  *   event.detail.direction contains the direction a user wishes to go.\n  */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n}\n\n/**\n * The map associating DOM element and pagination instance.\n * @type {WeakMap}\n */\nPagination.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode Pagination.create .create()}, or {@linkcode Pagination.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Pagination.init .init()} works.\n * @property {string} [selectorInit] The CSS selector to find pagination components.\n * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n * @property {string} [eventItemsPerPage]\n *   The name of the custom event fired when a user changes the number of items per page.\n *   event.detail.value contains the number of items a user wishes to see.\n * @property {string} [eventPageNumber]\n *   The name of the custom event fired when a user inputs a specific page number.\n *   event.detail.value contains the value that the user input.\n * @property {string} [eventPageChange]\n *   The name of the custom event fired when a user goes forward or backward a page.\n *   event.detail.direction contains the direction a user wishes to go.\n */\nPagination.options = {\n  selectorInit: '[data-pagination]',\n  selectorItemsPerPageInput: '[data-items-per-page]',\n  selectorPageNumberInput: '[data-page-number-input]',\n  selectorPageBackward: '[data-page-backward]',\n  selectorPageForward: '[data-page-forward]',\n  eventItemsPerPage: 'itemsPerPage',\n  eventPageNumber: 'pageNumber',\n  eventPageChange: 'pageChange',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/pagination.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class SearchWithOptions {\n  /**\n   * Search with Options.\n   * @implements Component\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorToggleLayoutBtn] The data attribute selector for the button that toggles between the layouts.\n   * @param {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.\n   * @param {string} [options.classHiddenContainer] The class selector for a hidden container.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.querySelector(this.options.selectorToggleLayoutBtn).addEventListener('click', (evt) => this.toggleLayout(evt));\n  }\n\n  /**\n   * Instantiates a search component of the given element.\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a search component in the given node.\n   * If the given element indicates that it's a search component (having `data-search-with-options` attribute), instantiates it.\n   * Otherwise, instantiates the search component by searching for the search component in the given node.\n   * @param {Node} target The DOM node to instantiate the search component in. Should be a document or an element..\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find unified headers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Toggles between the grid and list layout.\n   * @param {Event} event The event triggering this method.\n   */\n  toggleLayout(evt) {\n    const btn = evt.currentTarget;\n    const iconContainers = [... btn.querySelectorAll(this.options.selectorIconContainer)];\n    iconContainers.forEach(container => {\n      const isHidden = container.classList.contains(this.options.classHiddenContainer);\n      toggleClass(container, this.options.classHiddenContainer, !isHidden);\n    });\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and content switcher set instance.\n   * @member SearchWithOptions.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode SearchWithOptions.create .create()}, or {@linkcode SearchWithOptions.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode SearchWithOptions.init .init()} works.\n   * @member SearchWithOptions.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find search UIs with options.\n   */\n  static options = {\n    selectorInit: '[data-search-with-options]',\n    selectorToggleLayoutBtn: '[data-search-toggle-btn]',\n    selectorIconContainer: '[data-search-toggle-layout]',\n    classHiddenContainer: 'bx--search__toggle-layout__container--hidden',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/search-with-options.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\n\nexport default class Accordion {\n  /**\n   * Accordion.\n   * @implements Component\n   * @param {HTMLElement} element The element working as an accordion.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.constructor.components.set(this.element, this);\n\n    [... this.element.querySelectorAll(this.options.accordionItem)].forEach(item => {\n      item.addEventListener('click', (event) => this.handleClick(event));\n      item.addEventListener('keypress', (event) => this.handleKeypress(event));\n    });\n  }\n\n  /**\n   * Instantiates accordion of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates accordion UI in the given node.\n   * If the given element indicates that it's an accordion UI, instantiates it.\n   * Otherwise, instantiates accordion UIs by searching for accordion UIs in the given node.\n   * @param {Node} target The DOM node to instantiate accordion UIs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find accordion UIs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Handles toggling of active state of accordion\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    event.currentTarget.classList.toggle('bx--accordion__item--active');\n  }\n\n  /**\n   * Handles toggling of active state of accordion via keyboard\n   * @param {Event} event The event triggering this method.\n   */\n  handleKeypress(event) {\n    if (event.keyCode === 13 || event.keyCode === 32) this.handleClick(event);\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and accordion UI instance.\n * @type {WeakMap}\n */\nAccordion.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n * @property {string} selectorInit The CSS selector to find accordion UIs.\n */\nAccordion.options = {\n  selectorInit: '[data-accordion]',\n  accordionItem: '[data-accordion-item]',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/accordion.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\n\nexport default class CopyBtn {\n  /**\n   * CopyBtn UI.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a copy button UI.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.element.addEventListener('click', () => this.handleClick());\n  }\n\n  /**\n   * Instantiates copy button UI of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates copy button UI in the given node.\n   * If the given element indicates that it's an copy button UI, instantiates it.\n   * Otherwise, instantiates copy button UIs by searching for copy button UIs in the given node.\n   * @param {Node} target The DOM node to instantiate copy button UIs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find copy button UIs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Show the feedback tooltip on click. Hide the feedback tooltip after specified timeout value.\n   */\n  handleClick() {\n    const feedback = this.element.querySelector(this.options.feedbackTooltip);\n    feedback.classList.add(this.options.classShowFeedback);\n    setTimeout(() => {\n      feedback.classList.remove(this.options.classShowFeedback);\n    }, this.options.timeoutValue);\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and copy button UI instance.\n   * @member CopyBtn.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode CopyBtn.create .create()}, or {@linkcode CopyBtn.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode CopyBtn.init .init()} works.\n   * @member CopyBtn.options\n   * @type {Object}\n   * @property {string} selectorInit The data attribute to find copy button UIs.\n   * @property {string} feedbackTooltip The data attribute to find feedback tooltip.\n   * @property {string} classShowFeedback The CSS selector for showing the feedback tooltip.\n   * @property {number} timeoutValue The specified timeout value before the feedback tooltip is hidden.\n   */\n  static options = {\n    selectorInit: '[data-copy-btn]',\n    feedbackTooltip: '[data-feedback]',\n    classShowFeedback: 'bx--btn--copy__feedback--displayed',\n    timeoutValue: 2000,\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/copy-btn.js\n **/"],"sourceRoot":""}