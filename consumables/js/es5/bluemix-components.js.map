{"version":3,"sources":["webpack:///webpack/bootstrap b64c49d264278d9cd8c5","webpack:///./consumables/js/es2015/index.js","webpack:///./~/svgxuse/svgxuse.js","webpack:///./consumables/js/es2015/file-uploader.js","webpack:///./consumables/js/es2015/fab.js","webpack:///./consumables/js/polyfills/event-matches.js","webpack:///./consumables/js/misc/on.js","webpack:///./consumables/js/es2015/content-switcher.js","webpack:///./consumables/js/polyfills/array-from.js","webpack:///./consumables/js/polyfills/object-assign.js","webpack:///./consumables/js/polyfills/toggle-class.js","webpack:///./consumables/js/es2015/tabs.js","webpack:///./consumables/js/polyfills/math-sign.js","webpack:///./consumables/js/es2015/overflow-menu.js","webpack:///./consumables/js/es2015/modals.js","webpack:///./consumables/js/polyfills/custom-event.js","webpack:///./consumables/js/es2015/header.js","webpack:///./consumables/js/es2015/toolbars.js","webpack:///./consumables/js/es2015/loading.js","webpack:///./consumables/js/es2015/dropdown.js","webpack:///./consumables/js/es2015/card.js","webpack:///./consumables/js/es2015/number-input.js","webpack:///./consumables/js/es2015/table.js","webpack:///./consumables/js/es2015/detail-page-header.js","webpack:///./~/lodash.debounce/index.js","webpack:///./consumables/js/es2015/left-nav.js","webpack:///./consumables/js/es2015/unified-header.js","webpack:///./consumables/js/es2015/inline-left-nav.js","webpack:///./consumables/js/es2015/profile-switcher.js","webpack:///./consumables/js/es2015/search-with-options.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC/BA;;AAOA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,KAAM,WAAW,EAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBE,S,GAAA,Q;;;;;;;AAMA,U;;;;;;;AAMA,a;;;;;;;AAMA,gB;;;;;;;AAMA,I;;;;;;;AAMA,a;;;;;;;AAMA,M;;;;;;;AAMA,U;;;;;;;AAMC,Q;;;;;;;AAMD,S;;;;;;;AAMA,Q;;;;;;;AAMA,S;;;;;;;AAMA,K;;;;;;;AAMA,Y;;;;;;;AAMA,M;;;;;;;AAMA,iB;;;;;;;AAMA,gB;;;;;;;;;;;;;AAcF,KAAM,OAAO,SAAP,IAAO,GAAM;AACjB,OAAI,CAAC,SAAS,eAAd,EAA+B;AAC7B,mBAAU,IAAV;AACA,4BAAa,IAAb;AACA,+BAAgB,IAAhB;AACA,oBAAI,IAAJ;AACA,4BAAa,IAAb;AACA,sBAAM,IAAN;AACA,wBAAS,IAAT;AACA,uBAAQ,IAAR;AACA,wBAAS,IAAT;AACA,oBAAK,IAAL;AACA,2BAAY,IAAZ;AACA,qBAAM,IAAN;AACA,gCAAiB,IAAjB;AACA,uBAAQ,IAAR;AACA,6BAAc,IAAd;AACA,6BAAc,IAAd;AACA,+BAAgB,IAAhB;AACA,iCAAkB,IAAlB;AACD;AACF,EArBD;;AAuBA,KAAI,SAAS,UAAT,KAAwB,SAA5B,EAAuC;AACrC,YAAS,gBAAT,CAA0B,kBAA1B,EAA8C,IAA9C;AACD,EAFD,MAEO;;;AAGL,cAAW,IAAX,EAAiB,CAAjB;AACD,E;;;;;;ACpMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA,UAAS;AACT;AACA,EAAC;;;;;;;;;;;;;;;;;;;KCpLoB,Y;;;;;;;;;AAQnB,yBAAY,OAAZ,EAAmC;AAAA;;AAAA,SAAd,OAAc,yDAAJ,EAAI;;AAAA;;AACjC,SAAI,CAAC,OAAD,IAAY,QAAQ,QAAR,KAAqB,KAAK,YAA1C,EAAwD;AACtD,aAAM,IAAI,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,UAAK,OAAL,GAAe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AEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO,YAAY;AAC9B,YAAW,QAAQ;AACnB;AACA,YAAW,OAAO;AAClB;AACA,YAAW,QAAQ;AACnB;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,+CAA8C,kBAAkB;AAChb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YA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","file":"bluemix-components.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b64c49d264278d9cd8c5\n **/","// ====================//\n// Imports and Exports //\n// ====================//\n\n\n// Polyfills\n// -------------\nimport 'svgxuse';\n\n// Base Elements & Components\n// -------------\n// - JavaScript classes for use with components and base-elements.\n// - The following statements import classes from actual locations to\n//   be consumed from this file instead of their actual locations.\nimport FileUploader from './file-uploader';\nimport FabButton from './fab';\nimport ContentSwitcher from './content-switcher';\nimport Tab from './tabs';\nimport OverflowMenu from './overflow-menu';\nimport Modal from './modals';\nimport HeaderNav from './header';\nimport Toolbars from './toolbars';\nimport Loading from './loading';\nimport Dropdown from './dropdown';\nimport Card from './card';\nimport NumberInput from './number-input';\nimport Table from './table';\nimport DetailPageHeader from './detail-page-header';\nimport LeftNav from './left-nav';\nimport UnifiedHeader from './unified-header';\nimport InlineLeftNav from './inline-left-nav';\nimport ProfileSwitcher from './profile-switcher';\nimport SearchWithOptions from './search-with-options';\n\nconst settings = {};\n\n/**\n * This module is used for the following purposes:\n * 1. Export ES2015 classes as modules (used with base-elements and components)\n * 2. Build an ES5-compatible files for prototyping.\n *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n * @exports BluemixComponents\n * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n */\nexport {\n  /**\n   * Settings.\n   * @type Object\n   * @property {boolean} [disableAutoInit]\n   *   Disables automatic instantiation of components.\n   *   By default (`BluemixComponents.disableAutoInit` is `false`),\n   *   bluemix-components attempts to instantiate components automatically\n   *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n   *   or upon DOM events (e.g. clicking) on such elements.\n   *   See each components' static `.init()` methods for details.\n   */\n  settings,\n\n  /**\n   * Floating action button.\n   * @type FabButton\n   */\n  FabButton,\n\n  /**\n   * File uploader.\n   * @type FileUploader\n   */\n  FileUploader,\n\n  /**\n   * Content switcher.\n   * @type ContentSwitcher\n   */\n  ContentSwitcher,\n\n  /**\n   * Container of tabs.\n   * @type Tab\n   */\n  Tab,\n\n  /**\n   * Overflow menu.\n   * @type OverflowMenu\n   */\n  OverflowMenu,\n\n  /**\n   * Modal dialog.\n   * @type Modal\n   */\n  Modal,\n\n  /**\n   * Header with taxonomy menu.\n   * @type HeaderNav\n   */\n  HeaderNav,\n\n  /**\n   * Left Navigation Menu\n   * @type LeftNav\n   */\n   LeftNav,\n\n  /**\n   * Search button in tool bar.\n   * @type Toolbars\n   */\n  Toolbars,\n\n  /**\n   * Spinner indicating loading state.\n   * @type Loading\n   */\n  Loading,\n\n  /**\n   * A selector with drop downs.\n   * @type Dropdown\n   */\n  Dropdown,\n\n  /**\n   * The container for cards.\n   * @type Card\n   */\n  Card,\n\n  /**\n   * Number input UI.\n   * @type NumberInput\n   */\n  NumberInput,\n\n  /**\n   * Data table.\n   * @type Table\n   */\n  Table,\n\n  /**\n   * Detail page header.\n   * @type DetailPageHeader\n   */\n  DetailPageHeader,\n\n  /**\n   * Profile Switcher.\n   * @type ProfileSwitcher\n   */\n  ProfileSwitcher,\n};\n\n/**\n * Instantiates components automatically\n * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n * or upon DOM events (e.g. clicking) on such elements.\n * See each components' static `.init()` methods for details.\n *\n * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n *\n * @private\n */\n\nconst init = () => {\n  if (!settings.disableAutoInit) {\n    FabButton.init();\n    FileUploader.init();\n    ContentSwitcher.init();\n    Tab.init();\n    OverflowMenu.init();\n    Modal.init();\n    Toolbars.init();\n    Loading.init();\n    Dropdown.init();\n    Card.init();\n    NumberInput.init();\n    Table.init();\n    DetailPageHeader.init();\n    LeftNav.init();\n    UnifiedHeader.init();\n    InlineLeftNav.init();\n    ProfileSwitcher.init();\n    SearchWithOptions.init();\n  }\n};\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  // DOMContentLoaded has been fired already\n  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n  setTimeout(init, 0);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/index.js\n **/","/*!\n * @copyright Copyright (c) 2016 IcoMoon.io\n * @license   Licensed under MIT license\n *            See https://github.com/Keyamoon/svgxuse\n * @version   1.1.16\n */\n/*jslint browser: true */\n/*global XDomainRequest, MutationObserver, window */\n(function () {\n    'use strict';\n    if (window && window.addEventListener) {\n        var cache = Object.create(null); // holds xhr objects to prevent multiple requests\n        var checkUseElems,\n            tid; // timeout id\n        var debouncedCheck = function () {\n            clearTimeout(tid);\n            tid = setTimeout(checkUseElems, 100);\n        };\n        var unobserveChanges = function () {\n            return;\n        };\n        var observeChanges = function () {\n            var observer;\n            window.addEventListener('resize', debouncedCheck, false);\n            window.addEventListener('orientationchange', debouncedCheck, false);\n            if (window.MutationObserver) {\n                observer = new MutationObserver(debouncedCheck);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true\n                });\n                unobserveChanges = function () {\n                    try {\n                        observer.disconnect();\n                        window.removeEventListener('resize', debouncedCheck, false);\n                        window.removeEventListener('orientationchange', debouncedCheck, false);\n                    } catch (ignore) {}\n                };\n            } else {\n                document.documentElement.addEventListener('DOMSubtreeModified', debouncedCheck, false);\n                unobserveChanges = function () {\n                    document.documentElement.removeEventListener('DOMSubtreeModified', debouncedCheck, false);\n                    window.removeEventListener('resize', debouncedCheck, false);\n                    window.removeEventListener('orientationchange', debouncedCheck, false);\n                };\n            }\n        };\n        var xlinkNS = 'http://www.w3.org/1999/xlink';\n        checkUseElems = function () {\n            var base,\n                bcr,\n                fallback = '', // optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n                hash,\n                i,\n                Request,\n                inProgressCount = 0,\n                isHidden,\n                url,\n                uses,\n                xhr;\n            if (window.XMLHttpRequest) {\n                Request = new XMLHttpRequest();\n                if (Request.withCredentials !== undefined) {\n                    Request = XMLHttpRequest;\n                } else {\n                    Request = XDomainRequest || undefined;\n                }\n            }\n            if (Request === undefined) {\n                return;\n            }\n            function observeIfDone() {\n                // If done with making changes, start watching for chagnes in DOM again\n                inProgressCount -= 1;\n                if (inProgressCount === 0) { // if all xhrs were resolved\n                    observeChanges(); // watch for changes to DOM\n                }\n            }\n            function attrUpdateFunc(spec) {\n                return function () {\n                    if (cache[spec.base] !== true) {\n                        spec.useEl.setAttributeNS(xlinkNS, 'xlink:href', '#' + spec.hash);\n                    }\n                };\n            }\n            function onloadFunc(xhr) {\n                return function () {\n                    var body = document.body;\n                    var x = document.createElement('x');\n                    var svg;\n                    xhr.onload = null;\n                    x.innerHTML = xhr.responseText;\n                    svg = x.getElementsByTagName('svg')[0];\n                    if (svg) {\n                        svg.setAttribute('aria-hidden', 'true');\n                        svg.style.position = 'absolute';\n                        svg.style.width = 0;\n                        svg.style.height = 0;\n                        svg.style.overflow = 'hidden';\n                        body.insertBefore(svg, body.firstChild);\n                    }\n                    observeIfDone();\n                };\n            }\n            function onErrorTimeout(xhr) {\n                return function () {\n                    xhr.onerror = null;\n                    xhr.ontimeout = null;\n                    observeIfDone();\n                };\n            }\n            unobserveChanges(); // stop watching for changes to DOM\n            // find all use elements\n            uses = document.getElementsByTagName('use');\n            for (i = 0; i < uses.length; i += 1) {\n                try {\n                    bcr = uses[i].getBoundingClientRect();\n                } catch (ignore) {\n                    // failed to get bounding rectangle of the use element\n                    bcr = false;\n                }\n                url = uses[i].getAttributeNS(xlinkNS, 'href').split('#');\n                base = url[0];\n                hash = url[1];\n                isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n                if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n                    // the use element is empty\n                    // if there is a reference to an external SVG, try to fetch it\n                    // use the optional fallback URL if there is no reference to an external SVG\n                    if (fallback && !base.length && hash && !document.getElementById(hash)) {\n                        base = fallback;\n                    }\n                    if (base.length) {\n                        // schedule updating xlink:href\n                        xhr = cache[base];\n                        if (xhr !== true) {\n                            // true signifies that prepending the SVG was not required\n                            setTimeout(attrUpdateFunc({\n                                useEl: uses[i],\n                                base: base,\n                                hash: hash\n                            }), 0);\n                        }\n                        if (xhr === undefined) {\n                            xhr = new Request();\n                            cache[base] = xhr;\n                            xhr.onload = onloadFunc(xhr);\n                            xhr.onerror = onErrorTimeout(xhr);\n                            xhr.ontimeout = onErrorTimeout(xhr);\n                            xhr.open('GET', base);\n                            xhr.send();\n                            inProgressCount += 1;\n                        }\n                    }\n                } else {\n                    if (!isHidden) {\n                        if (cache[base] === undefined) {\n                            // remember this URL if the use element was not empty and no request was sent\n                            cache[base] = true;\n                        } else if (cache[base].onload) {\n                            // if it turns out that prepending the SVG is not necessary,\n                            // abort the in-progress xhr.\n                            cache[base].abort();\n                            cache[base].onload = undefined;\n                            cache[base] = true;\n                        }\n                    }\n                }\n            }\n            uses = '';\n            inProgressCount += 1;\n            observeIfDone();\n        };\n        // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n        window.addEventListener('load', function winLoad() {\n            window.removeEventListener('load', winLoad, false); // to prevent memory leaks\n            tid = setTimeout(checkUseElems, 0);\n        }, false);\n    }\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svgxuse/svgxuse.js\n ** module id = 1\n ** module chunks = 0\n **/","export default class FileUploader {\n  /**\n   * File uploader.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    const labelSelector = options.labelSelector || element.dataset.label;\n    this.labelNode = element.parentNode.querySelector(labelSelector) || element.nextElementSibling;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('change', (event) => this.updateLabel(event));\n  }\n\n  /**\n   * Instantiates file uploader of the given element.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates file uploader in the given node.\n   * If the given element indicates that it's an file uploader (having `data-file-uploader` attribute), instantiates it.\n   * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fileInput !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-file-uploader]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Updates the label for the file name upon file selection.\n   * @param {Event} event The event triggering this method.\n   */\n  updateLabel(event) {\n    let fileName = '';\n    const element = this.element;\n\n    if (element.files && element.files.length > 1) {\n      fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n    } else {\n      fileName = event.target.value.split('\\\\').pop();\n    }\n\n    if (fileName) {\n      this.labelNode.textContent = fileName;\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} FileUploader#options\n * @property {string} [labelSelector] The CSS selector to find the label for the file name.\n */\n\n/**\n * The map associating DOM element and file uploader instance.\n * @type {WeakMap}\n */\nFileUploader.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/file-uploader.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class FabButton {\n  /**\n   * Floating action button.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a floting action button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('click', (event) => this.toggle(event));\n  }\n\n  /**\n   * Instantiates floating action buttons in the given element.\n   * If the given element indicates that it's an floating action button (having `data-fab` attribute), instantiates it.\n   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fab !== undefined) {\n      this.create(target);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, '[data-fab]');\n        if (element && !this.components.has(element)) {\n          this.create(element).toggle(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Toggles this floating action button.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    if (this.element.dataset.state === 'closed') {\n      this.element.dataset.state = 'open';\n    } else {\n      this.element.dataset.state = 'closed';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Instantiates floating action button of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n}\n\n/**\n * The map associating DOM element and floating action button instance.\n * @type {WeakMap}\n */\nFabButton.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/fab.js\n **/","const matchesFuncName = [\n  'matches',\n  'webkitMatchesSelector',\n  'msMatchesSelector',\n].filter((name) => typeof document.documentElement[name] === 'function')[0];\n\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()`.\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  if (typeof event.target[matchesFuncName] === 'function') {\n    if (event.target[matchesFuncName](selector)) {\n      // If event target itself matches the given selector, return it\n      return event.target;\n    } else if (event.target[matchesFuncName](selector + ' *')) {\n      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n      for (let traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n        if (traverse[matchesFuncName](selector)) {\n          return traverse;\n        }\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/event-matches.js\n **/","export default function on(element, ...args) {\n  element.addEventListener(...args);\n  return {\n    release() {\n      element.removeEventListener(...args);\n      return null;\n    },\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/misc/on.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class ContentSwitcher {\n  /**\n   * Set of content switcher buttons.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorButton: 'input[type=\"radio\"], .bx--content-switcher__btn',\n      selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n      classActive: 'bx--content-switcher--selected',\n      eventBeforeSelected: 'content-switcher-beingselected',\n      eventAfterSelected: 'content-switcher-selected',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n\n    [... element.querySelectorAll('input')].forEach((input) => {\n      if (input.checked) this._changeActive(input);\n    });\n  }\n\n  /**\n   * Instantiates a set of content switcher buttons of the given element.\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates content switcher button sets in the given node.\n   * If the given element indicates that it's an content switcher button set (having `data-content-switcher` attribute), instantiates it.\n   * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n   * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.contentSwitcher !== undefined) {\n      this.create(target, options);\n    } else {\n      [... document.querySelectorAll('[data-content-switcher]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Handles click on content switcher button set.\n   * If the click is on a content switcher button, activates it.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const button = eventMatches(event, this.options.selectorButton);\n\n    if (button) {\n      this.setActive(button);\n    }\n  }\n\n  /**\n   * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n   * @private\n   * @param {HTMLElement} item The button to be selected.\n   */\n  _changeActive(item) {\n    // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n    const itemLink = item.querySelector(this.options.selectorLink);\n    if (itemLink) {\n      [... this.element.querySelectorAll(this.options.selectorLink)].forEach((link) => {\n        if (link !== itemLink) {\n          link.setAttribute('aria-selected', 'false');\n        }\n      });\n      itemLink.setAttribute('aria-selected', 'true');\n    }\n\n    const selectorButtons = [... this.element.querySelectorAll(this.options.selectorButton)];\n\n    selectorButtons.forEach((button) => {\n      if (button !== item) {\n        toggleClass(button, this.options.classActive, false);\n        [... button.ownerDocument.querySelectorAll(button.dataset.target)].forEach(element => element.setAttribute('hidden', ''));\n      }\n    });\n\n    toggleClass(item, this.options.classActive, true);\n    [... item.ownerDocument.querySelectorAll(item.dataset.target)].forEach(element => element.removeAttribute('hidden'));\n  }\n\n  /**\n   * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @typedef {Object} ContentSwitcher~cancelError\n   * @property {boolean} canceled `true` always.\n   * @property {boolean} item The content switcher button that was about to be selected.\n   */\n\n  /**\n   * The callback called once switching is finished or is canceled.\n   * @callback ContentSwitcher~setActiveCallback\n   * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n   */\n\n  /**\n   * Selects a content switcher button.\n   * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n   * DOM elements associated with unselected buttons in the same way will be hidden.\n   * @param {HTMLElement} item The button to be selected.\n   * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n   */\n  setActive(item, callback) {\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: { item },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeActive(item);\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item },\n      }));\n      if (callback) {\n        callback(null, item);\n      }\n    } else {\n      const error = new Error('Switching active item has been canceled.');\n      error.canceled = true;\n      error.item = item;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} ContentSwitcher#options\n * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n * @property {string} [classActive] The CSS class for switcher button's selected state.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a switcher button is selected.\n *   Cancellation of this event stops selection of content switcher button.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n */\n\n/**\n * The map associating DOM element and content switcher set instance.\n * @type {WeakMap}\n */\nContentSwitcher.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/content-switcher.js\n **/","Array.from = Array.from || function fromArray(a) {\n  return Array.prototype.slice.call(a);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/array-from.js\n **/","Object.assign = Object.assign || function assignObject(inDst) {\n  if (inDst == null) { // eslint-disable-line eqeqeq\n    // Throw if the given destination is null or undefined\n    throw new TypeError('Can\\'t convert to object: ${dst}');\n  }\n\n  const dst = Object(inDst);\n\n  [... arguments].slice(1).forEach((src) => {\n    Object.keys(src).forEach((prop) => {\n      dst[prop] = src[prop];\n    });\n  });\n\n  return dst;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/object-assign.js\n **/","export default function toggleClass(element, name, add) {\n  if (element.classList.contains(name) === !add) {\n    element.classList[add ? 'add' : 'remove'](name);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/toggle-class.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/math-sign';\nimport '../polyfills/object-assign';\nimport ContentSwitcher from './content-switcher';\n\nexport default class Tab extends ContentSwitcher {\n  /**\n   * Container of tabs.\n   * @extends ContentSwitcher\n   * @param {HTMLElement} element The element working as a container of tabs.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  constructor(element, options = {}) {\n    super(element, Object.assign({\n      selectorMenu: '.bx--tabs__nav',\n      selectorTrigger: '.bx--tabs__trigger',\n      selectorTriggerText: '.bx--tabs__trigger-text',\n      selectorButton: '.bx--tabs__nav-item',\n      selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n      selectorLink: '.bx--tabs__nav-link',\n      classActive: 'bx--tabs--selected',\n      classHidden: 'bx--tabs--hidden',\n      eventBeforeSelected: 'tab-beingselected',\n      eventAfterSelected: 'tab-selected',\n    }, options));\n\n    this.element.addEventListener('keydown', (event) => this.handleKeyDown(event));\n\n    const selected = this.element.querySelector(this.options.selectorButtonSelected);\n    if (selected) {\n      this.updateTriggerText(selected);\n    }\n  }\n\n  /**\n   * Instantiates tab containers in the given node.\n   * If the given element indicates that it's an tab container (having `data-tabs` attribute), instantiates it.\n   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-tabs]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  _changeActive(item) {\n    super._changeActive(item);\n    this.updateTriggerText(item);\n  }\n\n  /**\n   * Handles click on tab container.\n   * * If the click is on a tab, activates it.\n   * * If the click is on the button to open the drop down menu, does so.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    super.handleClick(event);\n    const button = eventMatches(event, this.options.selectorButton);\n    const trigger = eventMatches(event, this.options.selectorTrigger);\n    if (button) {\n      super.handleClick(event);\n      this.updateMenuState();\n    }\n    if (trigger) {\n      this.updateMenuState();\n    }\n  }\n\n  /**\n   * Handles arrow keys on tab container.\n   * * Up/Left keys are used to go to previous tab.\n   * * Down/Right keys are used to go to next tab.\n   * @param {Event} event The event triggering this method.\n   */\n  handleKeyDown(event) {\n    const triggerNode = this.element.querySelector(this.options.selectorTrigger);\n    if (triggerNode && triggerNode.offsetParent) {\n      return;\n    }\n\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n\n    if (direction) {\n      const buttons = [... this.element.querySelectorAll(this.options.selectorButton)];\n      const button = this.element.querySelector(this.options.selectorButtonSelected);\n      const nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * buttons.length;\n      this.setActive(buttons[nextIndexLooped], (error, item) => {\n        if (item) {\n          const link = item.querySelector(this.options.selectorLink);\n          if (link) {\n            link.focus();\n          }\n        }\n      });\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Shows/hides the drop down menu used in narrow mode.\n   */\n  updateMenuState() {\n    this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n  }\n\n  /**\n   * Updates the text indicating the currently selected tab item.\n   * @param {HTMLElement} target The newly selected tab item.\n   */\n  updateTriggerText(target) {\n    this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Tab#options\n * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n * @property {string} [selectorButton] The CSS selector to find tab containers.\n * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n * @property {string} [classActive] The CSS class for tab's selected state.\n * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a tab is selected.\n *   Cancellation of this event stops selection of tab.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n */\n\n/**\n * The map associating DOM element and tab container instance.\n * @type {WeakMap}\n */\nTab.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/tabs.js\n **/","Math.sign = Math.sign || function sign(x) {\n  const n = +x;\n  return n === 0 ? n : n / Math.abs(n);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/math-sign.js\n **/","import '../polyfills/array-from';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class OverflowMenu {\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.handleDocumentClick(event));\n\n    /**\n     * The handle to release keypress event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentKeyPress = on(this.element.ownerDocument, 'keypress', (event) => this.handleKeyPress(event));\n  }\n\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.overflowMenu !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-overflow-menu]')].forEach(element => this.create(element));\n    }\n  }\n\n  handleDocumentClick(event) {\n    const isOfSelf = this.element.contains(event.target);\n    const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n    if (isOfSelf && this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n  }\n\n  handleKeyPress(event) {\n    const key = event.key || event.which;\n    if (key === 'Enter' || key === 13) {\n      const isOfSelf = this.element.contains(event.target);\n      const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n      if (isOfSelf && this.element.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    if (this.hDocumentKeyPress) {\n      this.hDocumentKeyPress = this.hDocumentKeyPress.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\nOverflowMenu.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/overflow-menu.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\n/**\n * @param {Element} element The element to obtain transition duration from.\n * @returns {number} The transition duration of the given property set in the given element.\n */\nfunction getTransitionDuration(element) {\n  const computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n  const durations = computedStyle.transitionDuration.split(/,\\s*/)\n    .map((transitionDuration) => parseFloat(transitionDuration))\n    .filter((duration) => !isNaN(duration));\n  return durations.length > 0 ? Math.max(...durations) : 0;\n}\n\nexport default class Modal {\n  /**\n   * Modal dialog.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      classVisible: 'is-visible',\n      classNoScroll: 'bx--noscroll',\n      eventBeforeShown: 'modal-beingshown',\n      eventAfterShown: 'modal-shown',\n      eventBeforeHidden: 'modal-beinghidden',\n      eventAfterHidden: 'modal-hidden',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookCloseActions();\n  }\n\n  /**\n   * Instantiates modal dialog of the given element.\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates modal dialogs in the given element.\n   * If the given element indicates that it's an modal dialog (having `data-modal` attribute), instantiates it.\n   * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n   * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.modal !== undefined) {\n      this.create(target, options);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, '[data-modal-target]');\n\n        if (element) {\n          event.delegateTarget = element;\n\n          const modalElements = [... element.ownerDocument.querySelectorAll(element.dataset.modalTarget)];\n          if (modalElements.length > 1) {\n            throw new Error('Target modal must be unique.');\n          }\n\n          if (modalElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n\n            const modal = this.create(modalElements[0], options);\n            modal.show(event, (error, shownAlready) => {\n              if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n                modal.element.focus();\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Adds event listeners for closing this dialog.\n   */\n  hookCloseActions() {\n    this.element.addEventListener('click', (event) => {\n      if (event.currentTarget === event.target) this.hide(event);\n    });\n\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n\n    this.keydownHandler = (event) => {\n      if (event.which === 27) {\n        this.hide(event);\n      }\n    };\n\n    this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\n    [... this.element.querySelectorAll('[data-modal-close]')].forEach((element) => {\n      element.addEventListener('click', (event) => {\n        this.hide(event);\n      });\n    });\n  }\n\n  /**\n   * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n   * @private\n   * @param {boolean} visible `true` to make this modal dialog visible.\n   * @param {Function} callback Callback called when change in state completes.\n   */\n  _changeState(visible, callback) {\n    let finished;\n    const finishedTransition = () => {\n      if (!finished) {\n        finished = true;\n        this.element.removeEventListener('transitionend', finishedTransition);\n        callback();\n      }\n    };\n\n    this.element.addEventListener('transitionend', finishedTransition);\n    const transitionDuration = getTransitionDuration(this.element);\n    toggleClass(this.element, this.options.classVisible, visible);\n    toggleClass(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n    if (transitionDuration === 0) {\n      finishedTransition();\n    }\n  }\n\n  /**\n   * The callback called once showing/hiding this dialog is finished or is canceled.\n   * @callback Modal~stateChangeCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Shows this modal dialog.\n   * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  show(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.delegateTarget || launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeShown, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(true, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterShown, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Showing dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  /**\n   * Hides this modal dialog.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  hide(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (!this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(false, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterHidden, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Hiding dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Modal#options\n * @property {string} [classVisible] The CSS class for the visible state.\n * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n * @property {string} [eventBeforeShown]\n *   The name of the custom event fired before this modal is shown.\n *   Cancellation of this event stops showing the modal.\n * @property {string} [eventAfterShown]\n *   The name of the custom event telling that modal is sure shown\n *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n * @property {string} [eventBeforeHidden]\n *   The name of the custom event fired before this modal is hidden.\n *   Cancellation of this event stops hiding the modal.\n * @property {string} [eventAfterHidden]\n *   The name of the custom event telling that modal is sure hidden\n *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n */\n\n/**\n * The map associating DOM element and modal instance.\n * @type {WeakMap}\n */\nModal.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/modals.js\n **/","const missingNativeCustomEvent = (() => {\n  try {\n    new CustomEvent('test-event'); // eslint-disable-line no-new\n  } catch (error) {\n    return true;\n  }\n})();\nif (missingNativeCustomEvent) {\n  window.CustomEvent = function CustomEvent(type, init = {}) {\n    const event = document.createEvent('HTMLEvents');\n    event.initEvent(type, init.bubbles, init.cancelable);\n    if (init.detail) {\n      event.detail = init.detail;\n    }\n    return event;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/custom-event.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class HeaderNav {\n  /**\n   * Header with taxonomy menu.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorTriggerLabel: '.current-taxonomy',\n      classActive: 'taxonomy-nav--active',\n      selectorMenu: '.taxonomy-menu',\n      selectorItem: '.taxonomy-item',\n      selectorItemLink: '.taxonomy-item--taxonomy-menu',\n      selectorLabel: '.taxonomy-item__label',\n      eventBeforeShown: 'header-beingshown',\n      eventAfterShown: 'header-shown',\n      eventBeforeHidden: 'header-beinghidden',\n      eventAfterHidden: 'header-hidden',\n      eventBeforeSelected: 'header-beingselected',\n      eventAfterSelected: 'header-selected',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\n    this.element.addEventListener('keydown', (event) => this.toggleNav(event));\n\n    [... this.element.querySelectorAll(this.options.selectorItemLink)].forEach((item) => {\n      item.addEventListener('click', (e) => this.select(e));\n    });\n  }\n\n  /**\n   * Instantiates taxonomy menus in the given element.\n   * If the given element indicates that it's an taxonomy menu (having `data-nav` attribute), instantiates it.\n   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.nav !== undefined) {\n      this.create(target, options);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, '[data-nav-target]');\n\n        if (element) {\n          const headerElements = [... element.ownerDocument.querySelectorAll(element.dataset.navTarget)];\n          if (headerElements.length > 1) {\n            throw new Error('Target header must be unique.');\n          }\n\n          if (headerElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n            this.create(headerElements[0], options).toggleNav(event);\n          }\n        }\n      };\n\n      target.addEventListener('click', handler);\n      target.addEventListener('keydown', handler);\n\n      return {\n        release: () => {\n          target.removeEventListener('keydown', handler);\n          target.removeEventListener('click', handler);\n        },\n      };\n    }\n  }\n\n  /**\n   * Instantiates taxonomy menu of the given element.\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Shows/hides this taxonomy menu.\n   * @param {Event} event The event triggering this function.\n   */\n  toggleNav(event) {\n    const isActive = this.element.classList.contains(this.options.classActive);\n    let add;\n    if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n      // Toggle button or ESC key on nav\n      add = !isActive;\n    } else if (event.type === 'keydown' && event.which === 27) {\n      // Down arrow on launch button\n      add = false;\n    } else {\n      return;\n    }\n\n    const launchingElement = eventMatches(event, '[data-nav-target]') || event.currentTarget;\n    if (launchingElement.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    const eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n      bubbles: true,\n      cancelable: true,\n      detail: { launchingElement: launchingElement },\n    });\n    const defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\n    if (add) {\n      this.triggerNode = launchingElement;\n      this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n    }\n\n    if (defaultNotPrevented) {\n      this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n      (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n      this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n        bubbles: true,\n        cancelable: true,\n        detail: { launchingElement: launchingElement },\n      }));\n    }\n  }\n\n  /**\n   * Selects a menu item.\n   * @param {Event} event The event triggering this function.\n   */\n  select(event) {\n    const activatedElement = event.currentTarget;\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        initiatingEvent: event,\n        itemElement: activatedElement,\n      },\n    });\n\n    if (this.element.dispatchEvent(eventStart)) {\n      [... this.element.querySelectorAll(this.options.selectorItem)].forEach((element) => {\n        if (element.contains(activatedElement)) {\n          element.classList.add('selected');\n        } else if (element.classList.contains('selected')) {\n          element.classList.remove('selected');\n        }\n      });\n      activatedElement.classList.add('selected');\n      if (this.triggerLabelNode) {\n        this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n      }\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { itemElement: activatedElement },\n      }));\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n  }\n}\n\n/**\n * The component options.\n * @member {Object} HeaderNav#options\n * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n * @property {string} [selectorItem] The CSS selector to find the menu items.\n * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n * @property {string} [classActive] The CSS class for the visible state.\n * @property {string} [eventBeforeShown]\n *   The name of the custom event fired before this taxonomy menu is shown.\n *   Cancellation of this event stops showing the taxonomy menu.\n * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n * @property {string} [eventBeforeHidden]\n *   The name of the custom event fired before this taxonomy menu is hidden.\n *   Cancellation of this event stops hiding the taxonomy menu.\n * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a menu item is selected.\n *   Cancellation of this event stops the selection.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n */\n\n/**\n * The map associating DOM element and taxonomy menu instance.\n * @type {WeakMap}\n */\nHeaderNav.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/header.js\n **/","export default class Toolbars {\n  /**\n   * Search button in tool bar.\n   * @implements Component\n   * @param {HTMLElement} element The element working as an search button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleActionClick(event));\n  }\n\n  /**\n   * Instantiates a search button of the given element.\n   * @param {HTMLElement} element The element working as a search button.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates search buttons in the given node.\n   * If the given element indicates that it's an search button (having `data-list-icons-search-action-target` attribute), instantiates it.\n   * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n   * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.listIconsSearchActionTarget !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-list-icons-search-action-target]')].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Show/hide search box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleActionClick(event) {\n    const searchActionNode = event.currentTarget;\n\n    if (searchActionNode.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    this.element.classList.toggle('show-search');\n    if (this.searchFieldNode) {\n      this.searchFieldNode.classList.toggle('show-search');\n      this.searchFieldNode.value = '';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and search button instance.\n * @type {WeakMap}\n */\nToolbars.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/toolbars.js\n **/","import toggleClass from '../polyfills/toggle-class';\n\nexport default class Loading {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} options The component options.\n   * @param {boolean} options.active `true` if this spinner should roll.\n   */\n  constructor(element, options = { active: true }) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.active = 'active' in options ? options.active : true;\n    this.ie = false;\n\n    // Check if browser is Internet Explorer\n    if (options.ie || window.ActiveXObject || 'ActiveXObject' in window) {\n      this.ie = true;\n      this.element.classList.add('bx--loading--ie');\n    }\n\n    this.constructor.components.set(this.element, this);\n\n    // Initialize spinner\n    this.set(this.active);\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-loading]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Sets active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  set(active) {\n    if (typeof active !== 'boolean') {\n      throw new TypeError('set expects a boolean.');\n    }\n\n    this.active = active;\n\n    if (this.ie) {\n      toggleClass(this.element, 'bx--loading--stop--ie', !this.active);\n    }\n    toggleClass(this.element, 'bx--loading--stop', !this.active);\n\n    return this;\n  }\n\n  /**\n   * Toggles active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  toggle() {\n    return this.set(!this.active);\n  }\n\n  /**\n   * @returns {boolean} `true` if this spinner is rolling roll.\n   */\n  isActive() {\n    return this.active;\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and spinner instance.\n * @type {WeakMap}\n */\nLoading.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/loading.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class Dropdown {\n  /**\n   * A selector with drop downs.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorItem: '[data-option] > .bx--dropdown__link',\n      selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n      classSelected: 'bx--dropdown--selected',\n      eventBeforeSelected: 'dropdown-beingselected',\n      eventAfterSelected: 'dropdown-selected',\n    }, options);\n\n    if (this.element.dataset.dropdown !== 'navigation') {\n      this.element.dataset.dropdown = '';\n    }\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.toggle(event));\n\n    this.element.addEventListener('keypress', (event) => this.toggle(event));\n    this.element.addEventListener('click', (event) => this.selected(event));\n  }\n\n  /**\n   * Instantiates selector of the given element.\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates selectors in the given node.\n   * If the given element indicates that it's an selector (having `data-dropdown` attribute), instantiates it.\n   * Otherwise, instantiates selectors by searching for selectors in the given node.\n   * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-dropdown]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Opens and closes the dropdown menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (event.which === 13 || event.type === 'click') {\n      const isOfSelf = this.element.contains(event.target);\n\n      if (isOfSelf) {\n        this.element.classList.toggle('bx--dropdown--open');\n      } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n        this.element.classList.remove('bx--dropdown--open');\n      }\n    }\n  }\n\n  /**\n   * Handles clicking on the dropdown options, doing the following:\n   * * Change Dropdown text to selected option.\n   * * Remove selected option from options when selected.\n   * * Emit custom events.\n   * @param {Event} event The event triggering this method.\n   */\n  selected(event) {\n    const activatedElement = event.target;\n    if (activatedElement.parentElement.dataset.option !== undefined) {\n      const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item: activatedElement },\n      });\n\n      if (this.element.dispatchEvent(eventStart)) {\n        if (this.element.dataset.dropdown !== 'navigation') {\n          this.element.firstElementChild.textContent = activatedElement.textContent;\n          activatedElement.classList.add(this.options.classSelected);\n        }\n        this.element.dataset.value = activatedElement.parentElement.dataset.value;\n        [... this.element.querySelectorAll(this.options.selectorItemSelected)].forEach((item) => {\n          if (activatedElement !== item) {\n            item.classList.remove(this.options.classSelected);\n          }\n        });\n\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n          bubbles: true,\n          cancelable: true,\n          detail: { item: activatedElement },\n        }));\n      }\n    }\n  }\n}\n\n\n/**\n * The component options.\n * @member {Object} Dropdown#options\n * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n * @property {string} [classSelected] The CSS class for the selected dropdown item.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a drop down item is selected.\n *   Cancellation of this event stops selection of drop down item.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n */\n\n/**\n * The map associating DOM element and selector instance.\n * @type {WeakMap}\n */\nDropdown.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/dropdown.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/math-sign';\n\nexport default class Card {\n  /**\n   * The container for cards.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n    this.options = Object.assign({\n      selectorCard: '.bx--card',\n    }, options);\n    this.constructor.components.set(this.element, this);\n    this.element.addEventListener('keydown', (event) => this.cardKeyPress(event));\n  }\n\n  /**\n   * Instantiates card container of the given element.\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates card container in the given node.\n   * If the given element indicates that it's an card container (having `data-card-list` attribute), instantiates it.\n   * Otherwise, instantiates card containers by searching for card containers in the given node.\n   * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.cardList !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-card-list]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Goes back/forward among cards,\n   * right arrow key for going forward, left arrow key for going backward.\n   * @param {Event} event The event triggering this method.\n   */\n  cardKeyPress(event) {\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n    const card = eventMatches(event, this.options.selectorCard);\n\n    if (direction && card && card === document.activeElement) {\n      const cards = [... this.element.querySelectorAll(this.options.selectorCard)];\n      const nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * cards.length;\n      cards[nextIndexLooped].focus();\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Card#options\n * @property {string} [selectorCard] The CSS selector to find cards.\n */\n\n/**\n * The map associating DOM element and card list instance.\n * @type {WeakMap}\n */\nCard.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/card.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\n\nexport default class NumberInput {\n  /**\n   * Number input UI.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a number input UI.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = options;\n    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n    // Also <svg> does not seems to have `Element.classList`.\n    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', (event) => this.handleClick(event));\n    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates number input UI of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates number input UI in the given node.\n   * If the given element indicates that it's an number input UI (having `data-numberinput` attribute), instantiates it.\n   * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n   * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.numberinput !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-numberinput]')].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const state = event.currentTarget.classList;\n    const numberInput = this.element.querySelector('.bx--number__input');\n\n    if (state.contains('bx--number__arrow--icon-up')) {\n      if (this.options.ie) {\n        ++numberInput.value;\n      } else {\n        numberInput.stepUp();\n      }\n    } else if (state.contains('bx--number__arrow--icon-down')) {\n      if (this.options.ie) {\n        if (numberInput.value > 0) {\n          --numberInput.value;\n        }\n      } else {\n        numberInput.stepDown();\n      }\n    } else {\n      return;\n    }\n\n    // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n    numberInput.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      cancelable: false,\n    }));\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and number input UI instance.\n * @type {WeakMap}\n */\nNumberInput.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/number-input.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class Table {\n  /**\n   * Data table.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorTitle: '.bx--table__column-title',\n      selectorRow: '.bx--table__row',\n      selectorCheckbox: '.bx--checkbox',\n      classSortState: 'bx--table__column-title--rotated',\n      classCheckState: 'bx--table__row--checked',\n      eventBeforeSortToggled: 'table-sort-beingtoggled',\n      eventAfterSortToggled: 'table-sort-toggled',\n      eventBeforeCheckToggled: 'table-check-beingtoggled',\n      eventAfterCheckToggled: 'table-check-toggled',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates a data table of the given element.\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Sets up the given node to instantiate data tables in.\n   * If the given element indicates that it's an data table (having `data-table` attribute), instantiates it.\n   * Otherwise, lazily instantiates data table when it's clicked on.\n   * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.table !== undefined) {\n      this.create(target, options);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, '[data-table]');\n        if (element && !this.components.has(element)) {\n          this.create(element, options).handleClick(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles click on data table.\n   * * If the click is on a column title, toggles its sorting state.\n   * * If the click is on a check box, toggles the check box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const title = eventMatches(event, this.options.selectorTitle);\n    const row = eventMatches(event, this.options.selectorRow);\n    const checkbox = eventMatches(event, this.options.selectorCheckbox);\n    if (title) {\n      this.toggleState('Sort', title);\n    }\n    if (row && checkbox) {\n      this.toggleState('Check', row);\n    }\n  }\n\n  /**\n   * The callback called once toggling is finished or is canceled.\n   * @callback Table~toggleStateCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the toggling is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {HTMLElement} element The toggled element.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Toggles a sorting state or a check box's state.\n   * @param {string} type\n   *   Specifies what state to toggle:\n   *   * `\"Sort\"` for toggling a sorting state.\n   *   * `\"Check\"` for toggling a check box's state.\n   * @param {HTMLElement} element The DOM element to toggle its state.\n   * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n   */\n  toggleState(type, element, callback) {\n    const newState = !element.classList.contains(this.options[`class${type}State`]);\n    const eventStart = new CustomEvent(this.options[`eventBefore${type}Toggled`], {\n      bubbles: true,\n      cancelable: true,\n      detail: { newState },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (element.dispatchEvent(eventStart)) {\n      toggleClass(element, this.options[`class${type}State`], newState);\n      // this._changeActive(item);\n      element.dispatchEvent(new CustomEvent(this.options[`eventAfter${type}Toggled`], {\n        bubbles: true,\n        cancelable: true,\n        detail: { newState },\n      }));\n      if (callback) {\n        callback(null, element, newState);\n      }\n    } else {\n      const error = new Error('Toggling on table has been canceled.');\n      error.canceled = true;\n      error.element = element;\n      error.newState = newState;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Table#options\n * @property {string} [selectorTitle] The CSS selector to find column titles.\n * @property {string} [selectorRow] The CSS selector to find rows.\n * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n * @property {string} [classSortState] The CSS class for the sorting state.\n * @property {string} [classCheckState] The CSS class for the checked state.\n * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n */\n\n/**\n * The map associating DOM element and data table instance.\n * @type {WeakMap}\n */\nTable.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/table.js\n **/","import debounce from 'lodash.debounce';\n\nexport default class DetailPageHeader {\n\n  /**\n   * The Detail Page Header.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a page header.\n   * @param {Object} [options] The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    // Debounce scroll event calls to handleScroll\n    const debouncedScroll = debounce(this.handleScroll.bind(this), 50);\n\n    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n  }\n\n  /**\n   * Instantiates detail page header of the given element.\n   * @param {HTMLElement} element The element.\n   * @param {Object} [options] The component options.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates the detail page header in the given element.\n   * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n   * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n   * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.detailPageHeader !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-detail-page-header]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Adds class to header based on users position on the page\n   */\n  handleScroll() {\n    if (this.element.ownerDocument.defaultView.scrollY > 101) {\n      this.element.classList.add(this.options.slideUp);\n    } else {\n      this.element.classList.remove(this.options.slideUp);\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and detail page header instance.\n * @type {WeakMap}\n */\nDetailPageHeader.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/detail-page-header.js\n **/","/**\n * lodash 4.0.6 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @type {Function}\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n */\nvar now = Date.now;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide an options object to indicate whether `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent calls\n * to the debounced function return the result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime = 0,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (!lastCallTime || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    clearTimeout(timerId);\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastCallTime = lastInvokeTime = 0;\n    lastArgs = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3);\n * // => 3\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3');\n * // => 3\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.debounce/index.js\n ** module id = 23\n ** module chunks = 0\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class LeftNav {\n  /**\n   * Left Navigation.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      selectorLeftNav: '[data-left-nav]',\n      selectorLeftNavList: '[data-left-nav-list]',\n      selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n      selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n      selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n      selectorLeftNavListItem: '[data-left-nav-item]',\n      selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n      selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n      selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n      selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n      selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n      selectorLeftNavSection: '[data-left-nav-section]',\n      selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n      selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n      selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n      selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n      // CSS Class Selectors\n      classActiveLeftNav: 'bx--left-nav--active',\n      classActiveLeftNavListItem: 'bx--left-nav-list__item--active',\n      classActiveTrigger: 'bx--left-nav__trigger--active',\n      classExpandedLeftNavListItem: 'bx--left-nav-list__item--expanded',\n      classFlyoutDisplayed: 'bx--left-nav-list--flyout--displayed',\n      classItemHasChildren: 'bx--left-nav-list__item--has-children',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookOpenActions();\n    this.hookListItemsEvents();\n    this.animateInNav();\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n  }\n\n  /**\n   * Instantiates a left navigation of the given element.\n   * @param {HTMLElement} element The element working as the left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a left navigation in the given node.\n   * If the given element indicates that it's a left navigation (having `data-left-nav-container` attribute), instantiates it.\n   * Otherwise, instantiates left navigation by searching for left navigation in the given node.\n   * @param {Node} target The DOM node to instantiate left navigation in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-left-nav-container]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Closes the menu.\n   */\n   closeMenu() {\n     this.element.classList.remove(this.options.classActiveLeftNav);\n     this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.remove(this.options.classActiveTrigger);\n   }\n\n   /**\n    * Toggles the menu to open and close.\n    */\n   toggleMenu() {\n     this.element.classList.toggle(this.options.classActiveLeftNav);\n     this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.toggle(this.options.classActiveTrigger);\n   }\n\n  /**\n   * Adds a animation delay to the list items as they appear on page load.\n   */\n  animateInNav() {\n    let counter = 0.1;\n    [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n      item.classList.add('animate');\n      item.style.animationDelay = `${counter}s`;\n      counter += 0.05;\n    });\n    setTimeout(() => {\n      [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n        item.classList.remove('animate');\n      });\n    }, 1000);\n  }\n\n  /**\n   * Adds event listeners for showing and hiding the left navigation\n   */\n  hookOpenActions() {\n    const openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n    const closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n\n    openBtn.addEventListener('click', () => {\n      this.element.tabIndex = '0';\n      this.toggleMenu();\n    });\n\n    openBtn.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.element.tabIndex = '0';\n        this.toggleMenu();\n      }\n    });\n\n    closeBtn.addEventListener('click', () => {\n      this.element.tabIndex = '-1';\n      this.closeMenu();\n    });\n\n    closeBtn.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.element.tabIndex = '-1';\n        this.closeMenu();\n      }\n    });\n\n    this.element.ownerDocument.addEventListener('keydown', (evt) => {\n      if ((evt.which === 27) && this.element.classList.contains(this.options.classActiveLeftNav)) {\n        this.closeMenu();\n      }\n    });\n  }\n\n  /**\n   * Adds event listeners to list items\n   */\n  hookListItemsEvents() {\n    const leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n    leftNavList.addEventListener('click', (evt) => {\n      const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n      if (leftNavItem) {\n        const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n        const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n        const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n        if (flyoutItem) {\n          this.addActiveListItem(flyoutItem);\n        } else if (childItem) {\n          if (childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n            const flyoutMenu = childItem.querySelector(this.options.selectorLeftNavFlyoutMenu);\n            flyoutMenu.classList.toggle(this.options.classFlyoutDisplayed);\n          } else {\n            this.addActiveListItem(childItem);\n          }\n        } else if (hasChildren) {\n          this.handleNestedListClick(leftNavItem);\n        } else {\n          this.addActiveListItem(leftNavItem);\n        }\n      }\n    });\n    leftNavList.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n        if (leftNavItem) {\n          const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n          const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n          const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n          if (flyoutItem) {\n            this.addActiveListItem(flyoutItem);\n          } else if (childItem) {\n            if (!childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n              this.addActiveListItem(childItem);\n            }\n          } else if (hasChildren) {\n            this.handleNestedListClick(leftNavItem);\n          } else {\n            this.addActiveListItem(leftNavItem);\n          }\n        }\n      }\n    });\n    const flyouts = [... this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout)];\n    flyouts.forEach(flyout => {\n      flyout.addEventListener('mouseenter', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${flyout.offsetTop - this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${flyout.offsetLeft + Math.round(flyout.offsetWidth)}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.add(this.options.classFlyoutDisplayed);\n      });\n      flyout.addEventListener('mouseleave', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      });\n    });\n  }\n\n  /**\n   * Hides all flyout menus.\n   */\n  hideAllFlyoutMenus() {\n    const flyoutMenus = [... this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu)];\n    flyoutMenus.forEach(menu => {\n      menu.classList.remove(this.options.classFlyoutDisplayed);\n    });\n  }\n\n  /**\n   * Sets a list item as active.\n   * @param {Object} item The active list item.\n   */\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavAllListItems)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        if (!currentItem.contains(item)) {\n          currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n        } else {\n          currentItem.classList.add(this.options.classActiveLeftNavListItem);\n        }\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n    this.hideAllFlyoutMenus();\n    this.closeMenu();\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the left navigation when document is clicked outside the left navigation.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n    const isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n    const shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n    let flyoutOpen;\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      flyoutOpen = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.contains(this.options.classFlyoutDisplayed);\n    }\n    if (isOfSelf && this.element.tagName === 'A') {\n      evt.preventDefault();\n    }\n    if (shouldClose) {\n      this.closeMenu();\n    }\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      if (flyoutOpen && !isOfSelf && isOpen) {\n        this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      }\n    }\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n  handleNestedListClick(listItem) {\n    const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n    this.hideAllFlyoutMenus();\n    toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n    const listItems = [... listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n    listItems.forEach(item => {\n      if (isOpen) {\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n      } else {\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n      }\n    });\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n* The component options.\n * @member {Object} LeftNav#options\n * @property {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n * @property {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n * @property {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n * @property {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n * @property {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n * @property {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n * @property {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n * @property {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n * @property {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n * @property {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n * @property {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n * @property {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n * @property {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n * @property {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n * @property {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n * @property {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n * @property {string} [options.classItemHasChildren] The class name for when a list item has children.\n */\n\n/**\n * The map associating DOM element and left navigation instance.\n * @type {WeakMap}\n */\nLeftNav.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\n\nexport default class UnifiedHeader {\n\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      // CSS Class Selectors\n    }, options);\n    this.constructor.components.set(this.element, this);\n  }\n\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-unified-header]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  release() {\n    if (this.handleDocumentClick) {\n      this.element.ownerDocument.removeEventListener('click', (evt) => this.handleDocumentClick(evt));\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and left navigation instance.\n * @type {WeakMap}\n */\nUnifiedHeader.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/unified-header.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class InlineLeftNav {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} options The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      selectorLeftNavList: '[data-inline-left-nav-list]',\n      selectorLeftNavNestedList: '[data-inline-left-nav-nested-list]',\n      selectorLeftNavListItem: '[data-inline-left-nav-item]',\n      selectorLeftNavListItemLink: '[data-inline-left-nav-item-link]',\n      selectorLeftNavNestedListItem: '[data-inline-left-nav-nested-item]',\n      // CSS Class Selectors\n      classActiveLeftNavListItem: 'left-nav-list__item--active',\n      classExpandedLeftNavListItem: 'left-nav-list__item--expanded',\n    }, options);\n\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n    this.hookListItemsEvents();\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-inline-left-nav]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  hookListItemsEvents() {\n    const leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n    leftNavList.addEventListener('click', (evt) => {\n      const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n      if (leftNavItem) {\n        const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n        const hasChildren = leftNavItem.classList.contains('left-nav-list__item--has-children');\n        if (childItem) {\n          this.addActiveListItem(childItem);\n        } else if (hasChildren) {\n          this.handleNestedListClick(leftNavItem, evt);\n        } else {\n          this.addActiveListItem(leftNavItem);\n        }\n      }\n    });\n    [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n      item.addEventListener('keydown', (evt) => {\n        const leftNavItemWithChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n        if (leftNavItemWithChildren && evt.which === 13) {\n          this.handleNestedListClick(leftNavItemWithChildren);\n        }\n      });\n    });\n  }\n\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * The nested list is expanded and the icon is rotated.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n   handleNestedListClick(listItem, evt) {\n     const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n     if (!('leftNavItemLink' in evt.target.dataset)) {\n       toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n     }\n     const list = listItem.querySelector(this.options.selectorLeftNavNestedList);\n     const listItems = [... list.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n     listItems.forEach(item => {\n       if (isOpen) {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n       } else {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n       }\n     });\n   }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and spinner instance.\n * @type {WeakMap}\n */\nInlineLeftNav.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/inline-left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class ProfileSwitcher {\n  /**\n   * Profile Switcher.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a profile switcher.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n   * @param {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n   * @param {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n   * @param {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n   * @param {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n   * @param {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n   * @param {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      selectorProfileSwitcher: '[data-profile-switcher]',\n      selectorToggle: '[data-profile-switcher-toggle]',\n      selectorMenu: '[data-switcher-menu]',\n      selectorAccount: '[data-switcher-account]',\n      selectorOrg: '[data-switcher-org]',\n      selectorSpace: '[data-switcher-space]',\n      selectorAccountDropdown: '[data-dropdown-account]',\n      selectorOrgDropdown: '[data-dropdown-org]',\n      selectorSpaceDropdown: '[data-dropdown-space]',\n      classSwitcherOpen: 'bx--account-switcher--open',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n    this.element.querySelector(this.options.selectorToggle).addEventListener('keypress', (event) => this.toggle(event));\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseenter', () => this.determineSwitcherValues(true));\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseleave', () => this.determineSwitcherValues(false));\n  }\n\n  /**\n   * Instantiates a profile switcher of the given element.\n   * @param {HTMLElement} element The element working as the profile switcher.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a profile switcher in the given node.\n   * If the given element indicates that it's a profile switcher (having `data-profile-switcher` attribute), instantiates it.\n   * Otherwise, instantiates profile switcher by searching for profile switcher in the given node.\n   * @param {Node} target The DOM node to instantiate profile switcher in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-profile-switcher]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Opens and closes the menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (event.which === 13) {\n      const isOfSelf = this.element.contains(event.target);\n      if (isOfSelf) {\n        this.element.classList.toggle(this.options.classSwitcherOpen);\n      } else if (!isOfSelf && this.element.classList.contains(this.options.classSwitcherOpen)) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      }\n    }\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the profile switcherwhen document is clicked outside the left navigation or\n   * the user clicks the profile switcher while it is open.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggle = this.element.ownerDocument.querySelector(this.options.selectorToggle).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    if (isOfSelf) {\n      if (isToggle && isOpen) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      } else if (isOpen) {\n        this.determineSwitcherValues();\n      } else {\n        this.element.classList.add(this.options.classSwitcherOpen);\n      }\n    } else {\n      this.element.classList.remove(this.options.classSwitcherOpen);\n    }\n  }\n\n  /**\n   * Handles logic to determine what text to display in profile switcher.\n   * If the text is over 25 characters long, truncate and add ellipses.\n   * Also adds logic to change the switcher width based on the width of the hovered\n   * profile switcher\n   * @param {boolean} isHovered boolean value passed by the event listener on bx--toggle.\n   */\n  determineSwitcherValues(isHovered) {\n    const nameElement = this.element.querySelector(this.options.selectorAccount);\n    const orgElement = this.element.querySelector(this.options.selectorOrg);\n    const spaceElement = this.element.querySelector(this.options.selectorSpace);\n    const menuElement = this.element.querySelector(this.options.selectorMenu);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    const nameDropdownValue = this.element.querySelector(this.options.selectorAccountDropdown).textContent;\n    const orgDropdownValue = this.element.querySelector(this.options.selectorOrgDropdown).textContent;\n    const spaceDropdownValue = this.element.querySelector(this.options.selectorSpaceDropdown).textContent;\n    let nameShort;\n    let orgShort;\n    let spaceShort;\n\n    if (isHovered && !isOpen) {\n      nameElement.textContent = nameDropdownValue;\n      orgElement.textContent = orgDropdownValue;\n      spaceElement.textContent = spaceDropdownValue;\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    } else {\n      if (nameDropdownValue.length > 25) {\n        nameShort = nameDropdownValue.substr(0, 25) + '...';\n        nameElement.textContent = nameShort;\n      } else {\n        nameElement.textContent = nameDropdownValue;\n      }\n\n      if (orgDropdownValue.length > 25) {\n        orgShort = orgDropdownValue.slice(0, 12) + '...' + orgDropdownValue.slice(-13);\n        orgElement.textContent = orgShort;\n      } else {\n        orgElement.textContent = orgDropdownValue;\n      }\n\n      if (spaceDropdownValue.length > 25) {\n        spaceShort = spaceDropdownValue.substr(0, 25) + '...';\n        spaceElement.textContent = spaceShort;\n      } else {\n        spaceElement.textContent = spaceDropdownValue;\n      }\n\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n* The component options..\n * @member {Object} ProfileSwitcher#options\n * @property {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n * @property {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n * @property {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n * @property {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n * @property {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n * @property {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n * @property {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n */\n\n/**\n * The map associating DOM element and profile switcher instance.\n * @type {WeakMap}\n */\nProfileSwitcher.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/profile-switcher.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class SearchWithOptions {\n  /**\n   * Search with Options.\n   * @implements Component\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorToggleLayoutBtn] The data attribute selector for the button that toggles between the layouts.\n   * @param {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.\n   * @param {string} [options.classHiddenContainer] The class selector for a hidden container.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorToggleLayoutBtn: '[data-search-toggle-btn]',\n      selectorIconContainer: '[data-search-toggle-layout]',\n      classHiddenContainer: 'bx--search__toggle-layout__container--hidden',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.querySelector(this.options.selectorToggleLayoutBtn).addEventListener('click', (evt) => this.toggleLayout(evt));\n  }\n\n  /**\n   * Instantiates a search component of the given element.\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a search component in the given node.\n   * If the given element indicates that it's a search component (having `data-search-with-options` attribute), instantiates it.\n   * Otherwise, instantiates the search component by searching for the search component in the given node.\n   * @param {Node} target The DOM node to instantiate the search component in. Should be a document or an element..\n   * @param {Object} [options] The component options\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-search-with-options]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Toggles between the grid and list layout.\n   * @param {Event} event The event triggering this method.\n   */\n  toggleLayout(evt) {\n    const btn = evt.currentTarget;\n    const iconContainers = [... btn.querySelectorAll(this.options.selectorIconContainer)];\n    iconContainers.forEach(container => {\n      const isHidden = container.classList.contains(this.options.classHiddenContainer);\n      toggleClass(container, this.options.classHiddenContainer, !isHidden);\n    });\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\nSearchWithOptions.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/search-with-options.js\n **/"],"sourceRoot":""}