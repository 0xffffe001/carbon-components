{"version":3,"sources":["webpack:///webpack/bootstrap 752679f08d185c675ef3","webpack:///./consumables/js/es2015/index.js","webpack:///./~/svgxuse/svgxuse.js","webpack:///./consumables/js/es2015/file-uploader.js","webpack:///./consumables/js/polyfills/element-matches.js","webpack:///./consumables/js/es2015/fab.js","webpack:///./consumables/js/polyfills/event-matches.js","webpack:///./consumables/js/misc/on.js","webpack:///./consumables/js/es2015/content-switcher.js","webpack:///./consumables/js/polyfills/array-from.js","webpack:///./consumables/js/polyfills/object-assign.js","webpack:///./consumables/js/polyfills/toggle-class.js","webpack:///./consumables/js/es2015/tabs.js","webpack:///./consumables/js/polyfills/math-sign.js","webpack:///./consumables/js/es2015/overflow-menu.js","webpack:///./consumables/js/es2015/modals.js","webpack:///./consumables/js/polyfills/custom-event.js","webpack:///./consumables/js/es2015/header.js","webpack:///./consumables/js/es2015/toolbars.js","webpack:///./consumables/js/es2015/loading.js","webpack:///./consumables/js/es2015/dropdown.js","webpack:///./consumables/js/es2015/card.js","webpack:///./consumables/js/es2015/number-input.js","webpack:///./consumables/js/es2015/table.js","webpack:///./consumables/js/es2015/detail-page-header.js","webpack:///./~/lodash.debounce/index.js","webpack:///./consumables/js/es2015/left-nav.js","webpack:///./consumables/js/es2015/unified-header.js","webpack:///./consumables/js/es2015/inline-left-nav.js","webpack:///./consumables/js/es2015/profile-switcher.js","webpack:///./consumables/js/es2015/search-with-options.js"],"names":["settings","FabButton","FileUploader","ContentSwitcher","Tab","OverflowMenu","Modal","HeaderNav","LeftNav","Toolbars","Loading","Dropdown","Card","NumberInput","Table","DetailPageHeader","ProfileSwitcher","init","disableAutoInit","document","readyState","addEventListener","setTimeout","element","options","nodeType","Node","ELEMENT_NODE","TypeError","Object","assign","create","constructor","labelSelector","dataset","label","labelNode","parentNode","querySelector","nextElementSibling","components","set","event","updateLabel","fileName","files","length","multipleCaption","replace","target","value","split","pop","textContent","delete","get","effectiveOptions","DOCUMENT_NODE","Error","matches","selectorInit","querySelectorAll","forEach","WeakMap","matchesFuncName","filter","name","Element","prototype","toggle","tagName","preventDefault","state","has","eventMatches","selector","traverse","currentTarget","on","args","release","removeEventListener","handleClick","input","checked","_changeActive","button","selectorButton","setActive","item","itemLink","selectorLink","link","setAttribute","selectorButtons","classActive","ownerDocument","removeAttribute","callback","eventStart","CustomEvent","eventBeforeSelected","bubbles","cancelable","detail","dispatchEvent","eventAfterSelected","error","canceled","selectorButtonSelected","Array","from","fromArray","a","slice","call","assignObject","inDst","dst","arguments","src","keys","prop","toggleClass","add","classList","contains","handleKeyDown","selected","updateTriggerText","trigger","selectorTrigger","updateMenuState","triggerNode","offsetParent","direction","Left","Right","ArrowLeft","ArrowRight","key","keyIdentifier","buttons","nextIndex","Math","max","indexOf","nextIndexLooped","sign","focus","selectorMenu","classHidden","selectorTriggerText","x","n","abs","hDocumentClick","handleDocumentClick","hDocumentKeyPress","handleKeyPress","isOfSelf","shouldBeOpen","which","getTransitionDuration","computedStyle","defaultView","getComputedStyle","durations","transitionDuration","map","parseFloat","duration","isNaN","hookCloseActions","hide","keydownHandler","body","visible","finished","finishedTransition","classVisible","classNoScroll","launchingElementOrEvent","launchingElementOrEventOmitted","launchingElement","delegateTarget","launchingEvent","type","eventBeforeShown","_changeState","eventAfterShown","eventBeforeHidden","eventAfterHidden","attribInitTarget","modalElements","getAttribute","modal","show","shownAlready","offsetWidth","offsetHeight","console","warn","missingNativeCustomEvent","window","createEvent","initEvent","menuNode","toggleNav","selectorItemLink","e","select","isActive","defaultNotPrevented","triggerLabelNode","selectorTriggerLabel","activatedElement","initiatingEvent","itemElement","selectorItem","remove","selectorLabel","handler","headerElements","searchFieldNode","listIconsSearchActionTarget","handleActionClick","searchActionNode","active","ie","ActiveXObject","dropdown","parentElement","option","undefined","firstElementChild","classSelected","selectorItemSelected","cardKeyPress","card","selectorCard","activeElement","cards","numberInput","stepUp","stepDown","title","selectorTitle","row","selectorRow","checkbox","selectorCheckbox","toggleState","newState","classSortState","classCheckState","eventBeforeSortToggled","eventAfterSortToggled","eventBeforeCheckToggled","eventAfterCheckToggled","debouncedScroll","handleScroll","bind","scrollY","slideUp","detailPageHeader","leftNavSectionActive","selectorLeftNav","selectorLeftNavList","selectorLeftNavNestedList","selectorLeftNavToggleOpen","selectorLeftNavToggleClose","selectorLeftNavListItem","selectorLeftNavListItemLink","selectorLeftNavNestedListItem","selectorLeftNavArrowIcon","selectorLeftNavFlyoutMenu","selectorLeftNavFlyoutItem","selectorLeftNavSections","selectorLeftNavSection","selectorLeftNavSectionLink","selectorLeftNavSectionIcon","selectorLeftNavCurrentSection","selectorLeftNavCurrentSectionTitle","selectorLeftNavCurrentSectionIcon","selectorLeftNavListItemHasChildren","selectorLeftNavListItemHasFlyout","selectorLeftNavAllListItems","classActiveTrigger","classActiveLeftNav","classActiveLeftNavListItem","classExpandedLeftNavListItem","classFlyoutDisplayed","classItemHasChildren","classNavSection","classNavSectionTransition","classNavSectionAnchor","classNavSectionLink","classNavHeaderTitle","classItemFade","classItemHidden","classListHidden","classListTop","hookOpenActions","hookListSectionEvents","hookListItemsEvents","evt","leftNavContainer","selectedNav","selectedNavLink","leftNav","leftNavSections","toLowerCase","children","insertBefore","selectedNavTitle","currentLeftNavList","newLeftNavList","currentLeftNavItems","reverse","newLeftNavItems","fadeOutTime","counter","counterIteration","openBtn","closeBtn","tabIndex","toggleMenu","closeMenu","handleSectionItemClick","leftNavList","list","leftNavItem","childItem","hasChildren","flyoutItem","addActiveListItem","flyoutMenu","handleNestedListClick","style","top","offsetTop","scrollTop","left","offsetLeft","round","flyouts","flyout","flyoutMenus","menu","currentItem","hideAllFlyoutMenus","clickTarget","isToggleBtn","isOpen","isUnifiedHeader","shouldClose","flyoutOpen","listItem","listItems","leftNavSectionItem","selectedLeftNavSectionItem","selectedLeftNavSectionItemTitle","selectedLeftNavSectionItemIcon","selectedLeftNavSectionItemUse","leftNavSectionItemLink","leftNavSectionItemIcon","leftNavSectionItemIconUse","newLeftNavSectionItem","createElement","newLeftNavSectionItemAnchor","newLeftNavSectionItemIcon","cloneNode","newLeftNavSectionItemLink","animateNavSection","animateNavList","appendChild","firstChild","removeChild","UnifiedHeader","tabs","InlineLeftNav","leftNavItemWithChildren","selectorToggle","determineSwitcherValues","handleBlur","classSwitcherOpen","isToggle","isHovered","nameElement","selectorAccount","regionElement","selectorRegion","orgElement","selectorOrg","spaceElement","selectorSpace","menuElement","nameDropdownValue","selectorAccountDropdown","regionDropdownValue","selectorRegionDropdown","orgDropdownValue","selectorOrgDropdown","spaceDropdownValue","selectorSpaceDropdown","nameShort","orgShort","spaceShort","width","getBoundingClientRect","substr","selectorProfileSwitcher","selectorDropdown","SearchWithOptions","selectorToggleLayoutBtn","toggleLayout","btn","iconContainers","selectorIconContainer","isHidden","container","classHiddenContainer"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC/BA;;AAOA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAhCA;AACA;AACA;;;AAGA;AACA;AA4BA,KAAMA,WAAW,EAAjB;;AAEA;;;;;;;;;;;AA3BA;AACA;AACA;AACA;AACA;SA4CEA,Q,GAAAA,Q;SAMAC,S;SAMAC,Y;SAMAC,e;SAMAC,G;SAMAC,Y;SAMAC,K;SAMAC,S;SAMCC,O;SAMDC,Q;SAMAC,O;SAMAC,Q;SAMAC,I;SAMAC,W;SAMAC,K;SAMAC,gB;SAMAC,e;;AAGF;;;;;;;;;;;AAWA,KAAMC,OAAO,SAAPA,IAAO,GAAM;AACjB,OAAI,CAACjB,SAASkB,eAAd,EAA+B;AAC7B,mBAAUD,IAAV;AACA,4BAAaA,IAAb;AACA,+BAAgBA,IAAhB;AACA,oBAAIA,IAAJ;AACA,4BAAaA,IAAb;AACA,sBAAMA,IAAN;AACA,wBAASA,IAAT;AACA,uBAAQA,IAAR;AACA,wBAASA,IAAT;AACA,oBAAKA,IAAL;AACA,2BAAYA,IAAZ;AACA,qBAAMA,IAAN;AACA,gCAAiBA,IAAjB;AACA,uBAAQA,IAAR;AACA,6BAAcA,IAAd;AACA,6BAAcA,IAAd;AACA,+BAAgBA,IAAhB;AACA,iCAAkBA,IAAlB;AACD;AACF,EArBD;;AAuBA,KAAIE,SAASC,UAAT,KAAwB,SAA5B,EAAuC;AACrCD,YAASE,gBAAT,CAA0B,kBAA1B,EAA8CJ,IAA9C;AACD,EAFD,MAEO;AACL;AACA;AACAK,cAAWL,IAAX,EAAiB,CAAjB;AACD,E;;;;;;ACpMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,wCAAuC;AACvC,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA,UAAS;AACT;AACA,EAAC;;;;;;;;;;;;;;;AChND;;;;;;KAEqBf,Y;AACnB;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S,sDADgB;AAEzB5M,iBAAc;AAFW,EAA3B,C;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO,YAAY;AAC9B,YAAW,QAAQ;AACnB;AACA,YAAW,OAAO;AAClB;AACA,YAAW,QAAQ;AACnB;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,+CAA8C,kBAAkB;AAChb,cAAa,QAAQ;AACrB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,OAAO;AACpB;AACA;A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","file":"bluemix-components.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 752679f08d185c675ef3\n **/","// ====================//\n// Imports and Exports //\n// ====================//\n\n\n// Polyfills\n// -------------\nimport 'svgxuse';\n\n// Base Elements & Components\n// -------------\n// - JavaScript classes for use with components and base-elements.\n// - The following statements import classes from actual locations to\n//   be consumed from this file instead of their actual locations.\nimport FileUploader from './file-uploader';\nimport FabButton from './fab';\nimport ContentSwitcher from './content-switcher';\nimport Tab from './tabs';\nimport OverflowMenu from './overflow-menu';\nimport Modal from './modals';\nimport HeaderNav from './header';\nimport Toolbars from './toolbars';\nimport Loading from './loading';\nimport Dropdown from './dropdown';\nimport Card from './card';\nimport NumberInput from './number-input';\nimport Table from './table';\nimport DetailPageHeader from './detail-page-header';\nimport LeftNav from './left-nav';\nimport UnifiedHeader from './unified-header';\nimport InlineLeftNav from './inline-left-nav';\nimport ProfileSwitcher from './profile-switcher';\nimport SearchWithOptions from './search-with-options';\n\nconst settings = {};\n\n/**\n * This module is used for the following purposes:\n * 1. Export ES2015 classes as modules (used with base-elements and components)\n * 2. Build an ES5-compatible files for prototyping.\n *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n * @exports BluemixComponents\n * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n */\nexport {\n  /**\n   * Settings.\n   * @type Object\n   * @property {boolean} [disableAutoInit]\n   *   Disables automatic instantiation of components.\n   *   By default (`BluemixComponents.disableAutoInit` is `false`),\n   *   bluemix-components attempts to instantiate components automatically\n   *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n   *   or upon DOM events (e.g. clicking) on such elements.\n   *   See each components' static `.init()` methods for details.\n   */\n  settings,\n\n  /**\n   * Floating action button.\n   * @type FabButton\n   */\n  FabButton,\n\n  /**\n   * File uploader.\n   * @type FileUploader\n   */\n  FileUploader,\n\n  /**\n   * Content switcher.\n   * @type ContentSwitcher\n   */\n  ContentSwitcher,\n\n  /**\n   * Container of tabs.\n   * @type Tab\n   */\n  Tab,\n\n  /**\n   * Overflow menu.\n   * @type OverflowMenu\n   */\n  OverflowMenu,\n\n  /**\n   * Modal dialog.\n   * @type Modal\n   */\n  Modal,\n\n  /**\n   * Header with taxonomy menu.\n   * @type HeaderNav\n   */\n  HeaderNav,\n\n  /**\n   * Left Navigation Menu\n   * @type LeftNav\n   */\n   LeftNav,\n\n  /**\n   * Search button in tool bar.\n   * @type Toolbars\n   */\n  Toolbars,\n\n  /**\n   * Spinner indicating loading state.\n   * @type Loading\n   */\n  Loading,\n\n  /**\n   * A selector with drop downs.\n   * @type Dropdown\n   */\n  Dropdown,\n\n  /**\n   * The container for cards.\n   * @type Card\n   */\n  Card,\n\n  /**\n   * Number input UI.\n   * @type NumberInput\n   */\n  NumberInput,\n\n  /**\n   * Data table.\n   * @type Table\n   */\n  Table,\n\n  /**\n   * Detail page header.\n   * @type DetailPageHeader\n   */\n  DetailPageHeader,\n\n  /**\n   * Profile Switcher.\n   * @type ProfileSwitcher\n   */\n  ProfileSwitcher,\n};\n\n/**\n * Instantiates components automatically\n * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n * or upon DOM events (e.g. clicking) on such elements.\n * See each components' static `.init()` methods for details.\n *\n * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n *\n * @private\n */\n\nconst init = () => {\n  if (!settings.disableAutoInit) {\n    FabButton.init();\n    FileUploader.init();\n    ContentSwitcher.init();\n    Tab.init();\n    OverflowMenu.init();\n    Modal.init();\n    Toolbars.init();\n    Loading.init();\n    Dropdown.init();\n    Card.init();\n    NumberInput.init();\n    Table.init();\n    DetailPageHeader.init();\n    LeftNav.init();\n    UnifiedHeader.init();\n    InlineLeftNav.init();\n    ProfileSwitcher.init();\n    SearchWithOptions.init();\n  }\n};\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  // DOMContentLoaded has been fired already\n  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n  setTimeout(init, 0);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/index.js\n **/","/*!\n * @copyright Copyright (c) 2016 IcoMoon.io\n * @license   Licensed under MIT license\n *            See https://github.com/Keyamoon/svgxuse\n * @version   1.1.22\n */\n/*jslint browser: true */\n/*global XDomainRequest, MutationObserver, window */\n(function () {\n    'use strict';\n    if (window && window.addEventListener) {\n        var cache = Object.create(null); // holds xhr objects to prevent multiple requests\n        var checkUseElems;\n        var tid; // timeout id\n        var debouncedCheck = function () {\n            clearTimeout(tid);\n            tid = setTimeout(checkUseElems, 100);\n        };\n        var unobserveChanges = function () {\n            return;\n        };\n        var observeChanges = function () {\n            var observer;\n            window.addEventListener('resize', debouncedCheck, false);\n            window.addEventListener('orientationchange', debouncedCheck, false);\n            if (window.MutationObserver) {\n                observer = new MutationObserver(debouncedCheck);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true\n                });\n                unobserveChanges = function () {\n                    try {\n                        observer.disconnect();\n                        window.removeEventListener('resize', debouncedCheck, false);\n                        window.removeEventListener('orientationchange', debouncedCheck, false);\n                    } catch (ignore) {}\n                };\n            } else {\n                document.documentElement.addEventListener('DOMSubtreeModified', debouncedCheck, false);\n                unobserveChanges = function () {\n                    document.documentElement.removeEventListener('DOMSubtreeModified', debouncedCheck, false);\n                    window.removeEventListener('resize', debouncedCheck, false);\n                    window.removeEventListener('orientationchange', debouncedCheck, false);\n                };\n            }\n        };\n        var createRequest = function (url) {\n            // In IE 9, cross origin requests can only be sent using XDomainRequest.\n            // XDomainRequest would fail if CORS headers are not set.\n            // Therefore, XDomainRequest should only be used with cross origin requests.\n            function getOrigin(href) {\n                var a = document.createElement('a');\n                a.href = href;\n                return a.protocol + a.hostname;\n            }\n            var Request;\n            var origin = location.protocol + location.hostname;\n            var origin2;\n            if (window.XMLHttpRequest) {\n                Request = new XMLHttpRequest();\n                origin2 = getOrigin(url);\n                if (Request.withCredentials === undefined && origin2 !== '' && origin2 !== origin) {\n                    Request = XDomainRequest || undefined;\n                } else {\n                    Request = XMLHttpRequest;\n                }\n            }\n            return Request;\n        };\n        var xlinkNS = 'http://www.w3.org/1999/xlink';\n        checkUseElems = function () {\n            var base;\n            var bcr;\n            var fallback = ''; // optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n            var hash;\n            var href;\n            var i;\n            var inProgressCount = 0;\n            var isHidden;\n            var Request;\n            var url;\n            var uses;\n            var xhr;\n            function observeIfDone() {\n                // If done with making changes, start watching for chagnes in DOM again\n                inProgressCount -= 1;\n                if (inProgressCount === 0) { // if all xhrs were resolved\n                    unobserveChanges(); // make sure to remove old handlers\n                    observeChanges(); // watch for changes to DOM\n                }\n            }\n            function attrUpdateFunc(spec) {\n                return function () {\n                    if (cache[spec.base] !== true) {\n                        spec.useEl.setAttributeNS(xlinkNS, 'xlink:href', '#' + spec.hash);\n                    }\n                };\n            }\n            function onloadFunc(xhr) {\n                return function () {\n                    var body = document.body;\n                    var x = document.createElement('x');\n                    var svg;\n                    xhr.onload = null;\n                    x.innerHTML = xhr.responseText;\n                    svg = x.getElementsByTagName('svg')[0];\n                    if (svg) {\n                        svg.setAttribute('aria-hidden', 'true');\n                        svg.style.position = 'absolute';\n                        svg.style.width = 0;\n                        svg.style.height = 0;\n                        svg.style.overflow = 'hidden';\n                        body.insertBefore(svg, body.firstChild);\n                    }\n                    observeIfDone();\n                };\n            }\n            function onErrorTimeout(xhr) {\n                return function () {\n                    xhr.onerror = null;\n                    xhr.ontimeout = null;\n                    observeIfDone();\n                };\n            }\n            unobserveChanges(); // stop watching for changes to DOM\n            // find all use elements\n            uses = document.getElementsByTagName('use');\n            for (i = 0; i < uses.length; i += 1) {\n                try {\n                    bcr = uses[i].getBoundingClientRect();\n                } catch (ignore) {\n                    // failed to get bounding rectangle of the use element\n                    bcr = false;\n                }\n                href = uses[i].getAttributeNS(xlinkNS, 'href');\n                if (href && href.split) {\n                    url = href.split('#');\n                } else {\n                    url = [\"\", \"\"];\n                }\n                base = url[0];\n                hash = url[1];\n                isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n                if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n                    // the use element is empty\n                    // if there is a reference to an external SVG, try to fetch it\n                    // use the optional fallback URL if there is no reference to an external SVG\n                    if (fallback && !base.length && hash && !document.getElementById(hash)) {\n                        base = fallback;\n                    }\n                    if (base.length) {\n                        // schedule updating xlink:href\n                        xhr = cache[base];\n                        if (xhr !== true) {\n                            // true signifies that prepending the SVG was not required\n                            setTimeout(attrUpdateFunc({\n                                useEl: uses[i],\n                                base: base,\n                                hash: hash\n                            }), 0);\n                        }\n                        if (xhr === undefined) {\n                            Request = createRequest(base);\n                            if (Request !== undefined) {\n                                xhr = new Request();\n                                cache[base] = xhr;\n                                xhr.onload = onloadFunc(xhr);\n                                xhr.onerror = onErrorTimeout(xhr);\n                                xhr.ontimeout = onErrorTimeout(xhr);\n                                xhr.open('GET', base);\n                                xhr.send();\n                                inProgressCount += 1;\n                            }\n                        }\n                    }\n                } else {\n                    if (!isHidden) {\n                        if (cache[base] === undefined) {\n                            // remember this URL if the use element was not empty and no request was sent\n                            cache[base] = true;\n                        } else if (cache[base].onload) {\n                            // if it turns out that prepending the SVG is not necessary,\n                            // abort the in-progress xhr.\n                            cache[base].abort();\n                            delete cache[base].onload;\n                            cache[base] = true;\n                        }\n                    } else if (base.length && cache[base]) {\n                        attrUpdateFunc({\n                            useEl: uses[i],\n                            base: base,\n                            hash: hash\n                        })();\n                    }\n                }\n            }\n            uses = '';\n            inProgressCount += 1;\n            observeIfDone();\n        };\n        // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n        window.addEventListener('load', function winLoad() {\n            window.removeEventListener('load', winLoad, false); // to prevent memory leaks\n            tid = setTimeout(checkUseElems, 0);\n        }, false);\n    }\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svgxuse/svgxuse.js\n ** module id = 1\n ** module chunks = 0\n **/","import '../polyfills/element-matches';\n\nexport default class FileUploader {\n  /**\n   * File uploader.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    const labelSelector = this.options.labelSelector || element.dataset.label;\n    this.labelNode = element.parentNode.querySelector(labelSelector) || element.nextElementSibling;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('change', (event) => this.updateLabel(event));\n  }\n\n  /**\n   * Instantiates file uploader of the given element.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates file uploader in the given node.\n   * If the given element indicates that it's an file uploader, instantiates it.\n   * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find file uploaders.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Updates the label for the file name upon file selection.\n   * @param {Event} event The event triggering this method.\n   */\n  updateLabel(event) {\n    let fileName = '';\n    const element = this.element;\n\n    if (element.files && element.files.length > 1) {\n      fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n    } else {\n      fileName = event.target.value.split('\\\\').pop();\n    }\n\n    if (fileName) {\n      this.labelNode.textContent = fileName;\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and file uploader instance.\n * @type {WeakMap}\n */\nFileUploader.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode FileUploader.create .create()}, or {@linkcode FileUploader.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode FileUploader.init .init()} works.\n * @property {string} selectorInit The CSS selector to find file uploaders.\n * @property {string} [labelSelector] The CSS selector to find the label for the file name.\n */\nFileUploader.options = {\n  selectorInit: '[data-file-uploader]',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/file-uploader.js\n **/","const matchesFuncName = [\n  'matches',\n  'webkitMatchesSelector',\n  'msMatchesSelector',\n].filter((name) => typeof Element.prototype[name] === 'function')[0];\n\nif (matchesFuncName !== 'matches') {\n  Element.prototype.matches = Element.prototype[matchesFuncName];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/element-matches.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\nimport '../polyfills/element-matches';\n\nexport default class FabButton {\n  /**\n   * Floating action button.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a floting action button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('click', (event) => this.toggle(event));\n  }\n\n  /**\n   * Instantiates floating action buttons in the given element.\n   * If the given element indicates that it's an floating action button, instantiates it.\n   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find floating action buttons.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, effectiveOptions.selectorInit);\n        if (element && !this.components.has(element)) {\n          this.create(element).toggle(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Toggles this floating action button.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    if (this.element.dataset.state === 'closed') {\n      this.element.dataset.state = 'open';\n    } else {\n      this.element.dataset.state = 'closed';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Instantiates floating action button of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n}\n\n/**\n * The map associating DOM element and floating action button instance.\n * @type {WeakMap}\n */\nFabButton.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode FabButton.create .create()}, or {@linkcode FabButton.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode FabButton.init .init()} works.\n * @property {string} selectorInit The CSS selector to find floating action buttons.\n */\nFabButton.options = {\n  selectorInit: '[data-fab]',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/fab.js\n **/","import './element-matches';\n\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by the polyfill).\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  if (typeof event.target.matches === 'function') {\n    if (event.target.matches(selector)) {\n      // If event target itself matches the given selector, return it\n      return event.target;\n    } else if (event.target.matches(selector + ' *')) {\n      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n      for (let traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n        if (traverse.matches(selector)) {\n          return traverse;\n        }\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/event-matches.js\n **/","export default function on(element, ...args) {\n  element.addEventListener(...args);\n  return {\n    release() {\n      element.removeEventListener(...args);\n      return null;\n    },\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/misc/on.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class ContentSwitcher {\n  /**\n   * Set of content switcher buttons.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n\n    [... element.querySelectorAll('input')].forEach((input) => {\n      if (input.checked) this._changeActive(input);\n    });\n  }\n\n  /**\n   * Instantiates a set of content switcher buttons of the given element.\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates content switcher button sets in the given node.\n   * If the given element indicates that it's an content switcher button set, instantiates it.\n   * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n   * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find content switcher button set.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... document.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Handles click on content switcher button set.\n   * If the click is on a content switcher button, activates it.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const button = eventMatches(event, this.options.selectorButton);\n\n    if (button) {\n      this.setActive(button);\n    }\n  }\n\n  /**\n   * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n   * @private\n   * @param {HTMLElement} item The button to be selected.\n   */\n  _changeActive(item) {\n    // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n    const itemLink = item.querySelector(this.options.selectorLink);\n    if (itemLink) {\n      [... this.element.querySelectorAll(this.options.selectorLink)].forEach((link) => {\n        if (link !== itemLink) {\n          link.setAttribute('aria-selected', 'false');\n        }\n      });\n      itemLink.setAttribute('aria-selected', 'true');\n    }\n\n    const selectorButtons = [... this.element.querySelectorAll(this.options.selectorButton)];\n\n    selectorButtons.forEach((button) => {\n      if (button !== item) {\n        toggleClass(button, this.options.classActive, false);\n        [... button.ownerDocument.querySelectorAll(button.dataset.target)].forEach(element => element.setAttribute('hidden', ''));\n      }\n    });\n\n    toggleClass(item, this.options.classActive, true);\n    [... item.ownerDocument.querySelectorAll(item.dataset.target)].forEach(element => element.removeAttribute('hidden'));\n  }\n\n  /**\n   * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @typedef {Object} ContentSwitcher~cancelError\n   * @property {boolean} canceled `true` always.\n   * @property {boolean} item The content switcher button that was about to be selected.\n   */\n\n  /**\n   * The callback called once switching is finished or is canceled.\n   * @callback ContentSwitcher~setActiveCallback\n   * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n   */\n\n  /**\n   * Selects a content switcher button.\n   * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n   * DOM elements associated with unselected buttons in the same way will be hidden.\n   * @param {HTMLElement} item The button to be selected.\n   * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n   */\n  setActive(item, callback) {\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: { item },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeActive(item);\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item },\n      }));\n      if (callback) {\n        callback(null, item);\n      }\n    } else {\n      const error = new Error('Switching active item has been canceled.');\n      error.canceled = true;\n      error.item = item;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and content switcher set instance.\n * @type {WeakMap}\n */\nContentSwitcher.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode ContentSwitcher.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode ContentSwitcher.init .init()} works.\n * @property {string} selectorInit The CSS selector to find content switcher button set.\n * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n * @property {string} [classActive] The CSS class for switcher button's selected state.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a switcher button is selected.\n *   Cancellation of this event stops selection of content switcher button.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n */\nContentSwitcher.options = {\n  selectorInit: '[data-content-switcher]',\n  selectorButton: 'input[type=\"radio\"], .bx--content-switcher__btn',\n  selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n  classActive: 'bx--content-switcher--selected',\n  eventBeforeSelected: 'content-switcher-beingselected',\n  eventAfterSelected: 'content-switcher-selected',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/content-switcher.js\n **/","Array.from = Array.from || function fromArray(a) {\n  return Array.prototype.slice.call(a);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/array-from.js\n **/","Object.assign = Object.assign || function assignObject(inDst) {\n  if (inDst == null) { // eslint-disable-line eqeqeq\n    // Throw if the given destination is null or undefined\n    throw new TypeError('Can\\'t convert to object: ${dst}');\n  }\n\n  const dst = Object(inDst);\n\n  [... arguments].slice(1).forEach((src) => {\n    Object.keys(src).forEach((prop) => {\n      dst[prop] = src[prop];\n    });\n  });\n\n  return dst;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/object-assign.js\n **/","export default function toggleClass(element, name, add) {\n  if (element.classList.contains(name) === !add) {\n    element.classList[add ? 'add' : 'remove'](name);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/toggle-class.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/math-sign';\nimport '../polyfills/object-assign';\nimport ContentSwitcher from './content-switcher';\n\nexport default class Tab extends ContentSwitcher {\n  /**\n   * Container of tabs.\n   * @extends ContentSwitcher\n   * @param {HTMLElement} element The element working as a container of tabs.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  constructor(element, options) {\n    super(element, options);\n\n    this.element.addEventListener('keydown', (event) => this.handleKeyDown(event));\n\n    const selected = this.element.querySelector(this.options.selectorButtonSelected);\n    if (selected) {\n      this.updateTriggerText(selected);\n    }\n  }\n\n  /**\n   * Instantiates tab containers in the given node.\n   * If the given element indicates that it's an tab container, instantiates it.\n   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find tab containers.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  _changeActive(item) {\n    super._changeActive(item);\n    this.updateTriggerText(item);\n  }\n\n  /**\n   * Handles click on tab container.\n   * * If the click is on a tab, activates it.\n   * * If the click is on the button to open the drop down menu, does so.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    super.handleClick(event);\n    const button = eventMatches(event, this.options.selectorButton);\n    const trigger = eventMatches(event, this.options.selectorTrigger);\n    if (button) {\n      super.handleClick(event);\n      this.updateMenuState();\n    }\n    if (trigger) {\n      this.updateMenuState();\n    }\n  }\n\n  /**\n   * Handles arrow keys on tab container.\n   * * Up/Left keys are used to go to previous tab.\n   * * Down/Right keys are used to go to next tab.\n   * @param {Event} event The event triggering this method.\n   */\n  handleKeyDown(event) {\n    const triggerNode = this.element.querySelector(this.options.selectorTrigger);\n    if (triggerNode && triggerNode.offsetParent) {\n      return;\n    }\n\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n\n    if (direction) {\n      const buttons = [... this.element.querySelectorAll(this.options.selectorButton)];\n      const button = this.element.querySelector(this.options.selectorButtonSelected);\n      const nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * buttons.length;\n      this.setActive(buttons[nextIndexLooped], (error, item) => {\n        if (item) {\n          const link = item.querySelector(this.options.selectorLink);\n          if (link) {\n            link.focus();\n          }\n        }\n      });\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Shows/hides the drop down menu used in narrow mode.\n   */\n  updateMenuState() {\n    this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n  }\n\n  /**\n   * Updates the text indicating the currently selected tab item.\n   * @param {HTMLElement} target The newly selected tab item.\n   */\n  updateTriggerText(target) {\n    this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n  }\n}\n\n/**\n * The map associating DOM element and tab container instance.\n * @type {WeakMap}\n */\nTab.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode Tab.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Tab.init .init()} works.\n * @property {string} selectorInit The CSS selector to find tab containers.\n * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n * @property {string} [selectorButton] The CSS selector to find tab containers.\n * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n * @property {string} [classActive] The CSS class for tab's selected state.\n * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a tab is selected.\n *   Cancellation of this event stops selection of tab.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n */\nTab.options = Object.assign(Object.create(ContentSwitcher.options), {\n  selectorInit: '[data-tabs]',\n  selectorMenu: '.bx--tabs__nav',\n  selectorTrigger: '.bx--tabs__trigger',\n  selectorTriggerText: '.bx--tabs__trigger-text',\n  selectorButton: '.bx--tabs__nav-item',\n  selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n  selectorLink: '.bx--tabs__nav-link',\n  classActive: 'bx--tabs--selected',\n  classHidden: 'bx--tabs--hidden',\n  eventBeforeSelected: 'tab-beingselected',\n  eventAfterSelected: 'tab-selected',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/tabs.js\n **/","Math.sign = Math.sign || function sign(x) {\n  const n = +x;\n  return n === 0 ? n : n / Math.abs(n);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/math-sign.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class OverflowMenu {\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.handleDocumentClick(event));\n\n    /**\n     * The handle to release keypress event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentKeyPress = on(this.element.ownerDocument, 'keypress', (event) => this.handleKeyPress(event));\n  }\n\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  handleDocumentClick(event) {\n    const isOfSelf = this.element.contains(event.target);\n    const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n    if (isOfSelf && this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n  }\n\n  handleKeyPress(event) {\n    const key = event.key || event.which;\n    if (key === 'Enter' || key === 13) {\n      const isOfSelf = this.element.contains(event.target);\n      const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n      if (isOfSelf && this.element.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    if (this.hDocumentKeyPress) {\n      this.hDocumentKeyPress = this.hDocumentKeyPress.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\nOverflowMenu.components = new WeakMap();\n\nOverflowMenu.options = {\n  selectorInit: '[data-overflow-menu]',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/overflow-menu.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\n/**\n * @param {Element} element The element to obtain transition duration from.\n * @returns {number} The transition duration of the given property set in the given element.\n */\nfunction getTransitionDuration(element) {\n  const computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n  const durations = computedStyle.transitionDuration.split(/,\\s*/)\n    .map((transitionDuration) => parseFloat(transitionDuration))\n    .filter((duration) => !isNaN(duration));\n  return durations.length > 0 ? Math.max(...durations) : 0;\n}\n\nexport default class Modal {\n  /**\n   * Modal dialog.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookCloseActions();\n  }\n\n  /**\n   * Instantiates modal dialog of the given element.\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates modal dialogs in the given element.\n   * If the given element indicates that it's an modal dialog, instantiates it.\n   * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n   * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS class to find modal dialogs.\n   * @param {string} [options.attribInitTarget] The attribute name in the launcher buttons to find target modal dialogs.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, `[${effectiveOptions.attribInitTarget}]`);\n\n        if (element) {\n          event.delegateTarget = element;\n\n          const modalElements = [... element.ownerDocument.querySelectorAll(element.getAttribute(effectiveOptions.attribInitTarget))];\n          if (modalElements.length > 1) {\n            throw new Error('Target modal must be unique.');\n          }\n\n          if (modalElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n\n            const modal = this.create(modalElements[0], effectiveOptions);\n            modal.show(event, (error, shownAlready) => {\n              if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n                modal.element.focus();\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Adds event listeners for closing this dialog.\n   */\n  hookCloseActions() {\n    this.element.addEventListener('click', (event) => {\n      if (event.currentTarget === event.target) this.hide(event);\n    });\n\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n\n    this.keydownHandler = (event) => {\n      if (event.which === 27) {\n        this.hide(event);\n      }\n    };\n\n    this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\n    [... this.element.querySelectorAll('[data-modal-close]')].forEach((element) => {\n      element.addEventListener('click', (event) => {\n        this.hide(event);\n      });\n    });\n  }\n\n  /**\n   * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n   * @private\n   * @param {boolean} visible `true` to make this modal dialog visible.\n   * @param {Function} callback Callback called when change in state completes.\n   */\n  _changeState(visible, callback) {\n    let finished;\n    const finishedTransition = () => {\n      if (!finished) {\n        finished = true;\n        this.element.removeEventListener('transitionend', finishedTransition);\n        callback();\n      }\n    };\n\n    this.element.addEventListener('transitionend', finishedTransition);\n    const transitionDuration = getTransitionDuration(this.element);\n    toggleClass(this.element, this.options.classVisible, visible);\n    toggleClass(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n    if (transitionDuration === 0) {\n      finishedTransition();\n    }\n  }\n\n  /**\n   * The callback called once showing/hiding this dialog is finished or is canceled.\n   * @callback Modal~stateChangeCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Shows this modal dialog.\n   * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  show(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.delegateTarget || launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeShown, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(true, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterShown, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Showing dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  /**\n   * Hides this modal dialog.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  hide(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (!this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(false, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterHidden, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Hiding dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n  }\n}\n\n/**\n * The map associating DOM element and modal instance.\n * @type {WeakMap}\n */\nModal.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode Modal.create .create()}, or {@linkcode Modal.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Modal.init .init()} works.\n * @property {string} selectorInit The CSS class to find modal dialogs.\n * @property {string} attribInitTarget The attribute name in the launcher buttons to find target modal dialogs.\n * @property {string} [classVisible] The CSS class for the visible state.\n * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n * @property {string} [eventBeforeShown]\n *   The name of the custom event fired before this modal is shown.\n *   Cancellation of this event stops showing the modal.\n * @property {string} [eventAfterShown]\n *   The name of the custom event telling that modal is sure shown\n *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n * @property {string} [eventBeforeHidden]\n *   The name of the custom event fired before this modal is hidden.\n *   Cancellation of this event stops hiding the modal.\n * @property {string} [eventAfterHidden]\n *   The name of the custom event telling that modal is sure hidden\n *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n */\nModal.options = {\n  selectorInit: '[data-modal]',\n  attribInitTarget: 'data-modal-target',\n  classVisible: 'is-visible',\n  classNoScroll: 'bx--noscroll',\n  eventBeforeShown: 'modal-beingshown',\n  eventAfterShown: 'modal-shown',\n  eventBeforeHidden: 'modal-beinghidden',\n  eventAfterHidden: 'modal-hidden',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/modals.js\n **/","const missingNativeCustomEvent = (() => {\n  try {\n    new CustomEvent('test-event'); // eslint-disable-line no-new\n  } catch (error) {\n    return true;\n  }\n})();\nif (missingNativeCustomEvent) {\n  window.CustomEvent = function CustomEvent(type, init = {}) {\n    const event = document.createEvent('HTMLEvents');\n    event.initEvent(type, init.bubbles, init.cancelable);\n    if (init.detail) {\n      event.detail = init.detail;\n    }\n    return event;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/custom-event.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class HeaderNav {\n  /**\n   * Header with taxonomy menu.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\n    this.element.addEventListener('keydown', (event) => this.toggleNav(event));\n\n    [... this.element.querySelectorAll(this.options.selectorItemLink)].forEach((item) => {\n      item.addEventListener('click', (e) => this.select(e));\n    });\n  }\n\n  /**\n   * Instantiates taxonomy menus in the given element.\n   * If the given element indicates that it's an taxonomy menu, instantiates it.\n   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find taxonomy menus.\n   * @param {string} [options.attribInitTarget] The attribute name in the lancher buttons to find taxonomy menus.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, `[${effectiveOptions.attribInitTarget}]`);\n\n        if (element) {\n          const headerElements = [... element.ownerDocument.querySelectorAll(element.getAttribute(effectiveOptions.attribInitTarget))];\n          if (headerElements.length > 1) {\n            throw new Error('Target header must be unique.');\n          }\n\n          if (headerElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n            this.create(headerElements[0], effectiveOptions).toggleNav(event);\n          }\n        }\n      };\n\n      target.addEventListener('click', handler);\n      target.addEventListener('keydown', handler);\n\n      return {\n        release: () => {\n          target.removeEventListener('keydown', handler);\n          target.removeEventListener('click', handler);\n        },\n      };\n    }\n  }\n\n  /**\n   * Instantiates taxonomy menu of the given element.\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Shows/hides this taxonomy menu.\n   * @param {Event} event The event triggering this function.\n   */\n  toggleNav(event) {\n    const isActive = this.element.classList.contains(this.options.classActive);\n    let add;\n    if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n      // Toggle button or ESC key on nav\n      add = !isActive;\n    } else if (event.type === 'keydown' && event.which === 27) {\n      // Down arrow on launch button\n      add = false;\n    } else {\n      return;\n    }\n\n    const launchingElement = eventMatches(event, '[data-nav-target]') || event.currentTarget;\n    if (launchingElement.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    const eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n      bubbles: true,\n      cancelable: true,\n      detail: { launchingElement: launchingElement },\n    });\n    const defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\n    if (add) {\n      this.triggerNode = launchingElement;\n      this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n    }\n\n    if (defaultNotPrevented) {\n      this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n      (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n      this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n        bubbles: true,\n        cancelable: true,\n        detail: { launchingElement: launchingElement },\n      }));\n    }\n  }\n\n  /**\n   * Selects a menu item.\n   * @param {Event} event The event triggering this function.\n   */\n  select(event) {\n    const activatedElement = event.currentTarget;\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        initiatingEvent: event,\n        itemElement: activatedElement,\n      },\n    });\n\n    if (this.element.dispatchEvent(eventStart)) {\n      [... this.element.querySelectorAll(this.options.selectorItem)].forEach((element) => {\n        if (element.contains(activatedElement)) {\n          element.classList.add('selected');\n        } else if (element.classList.contains('selected')) {\n          element.classList.remove('selected');\n        }\n      });\n      activatedElement.classList.add('selected');\n      if (this.triggerLabelNode) {\n        this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n      }\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { itemElement: activatedElement },\n      }));\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n  }\n}\n\n/**\n * The map associating DOM element and taxonomy menu instance.\n * @type {WeakMap}\n */\nHeaderNav.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode HeaderNav.create .create()}, or {@linkcode HeaderNav.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode HeaderNav.init .init()} works.\n * @property {string} selectorInit The CSS selector to find taxonomy menus.\n * @property {string} attribInitTarget The attribute name in the lancher buttons to find taxonomy menus.\n * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n * @property {string} [selectorItem] The CSS selector to find the menu items.\n * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n * @property {string} [classActive] The CSS class for the visible state.\n * @property {string} [eventBeforeShown]\n *   The name of the custom event fired before this taxonomy menu is shown.\n *   Cancellation of this event stops showing the taxonomy menu.\n * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n * @property {string} [eventBeforeHidden]\n *   The name of the custom event fired before this taxonomy menu is hidden.\n *   Cancellation of this event stops hiding the taxonomy menu.\n * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a menu item is selected.\n *   Cancellation of this event stops the selection.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n */\nHeaderNav.options = {\n  selectorInit: '[data-nav]',\n  attribInitTarget: 'data-nav-target',\n  selectorTriggerLabel: '.current-taxonomy',\n  classActive: 'taxonomy-nav--active',\n  selectorMenu: '.taxonomy-menu',\n  selectorItem: '.taxonomy-item',\n  selectorItemLink: '.taxonomy-item--taxonomy-menu',\n  selectorLabel: '.taxonomy-item__label',\n  eventBeforeShown: 'header-beingshown',\n  eventAfterShown: 'header-shown',\n  eventBeforeHidden: 'header-beinghidden',\n  eventAfterHidden: 'header-hidden',\n  eventBeforeSelected: 'header-beingselected',\n  eventAfterSelected: 'header-selected',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/header.js\n **/","import '../polyfills/element-matches';\n\nexport default class Toolbars {\n  /**\n   * Search button in tool bar.\n   * @implements Component\n   * @param {HTMLElement} element The element working as an search button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleActionClick(event));\n  }\n\n  /**\n   * Instantiates a search button of the given element.\n   * @param {HTMLElement} element The element working as a search button.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates search buttons in the given node.\n   * If the given element indicates that it's an search button, instantiates it.\n   * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n   * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find search buttons.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Show/hide search box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleActionClick(event) {\n    const searchActionNode = event.currentTarget;\n\n    if (searchActionNode.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    this.element.classList.toggle('show-search');\n    if (this.searchFieldNode) {\n      this.searchFieldNode.classList.toggle('show-search');\n      this.searchFieldNode.value = '';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and search button instance.\n * @type {WeakMap}\n */\nToolbars.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode Toolbars.create .create()}, or {@linkcode Toolbars.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Toolbars.init .init()} works.\n * @property {string} selectorInit The CSS selector to find search buttons.\n */\nToolbars.options = {\n  selectorInit: '[data-list-icons-search-action-target]',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/toolbars.js\n **/","import toggleClass from '../polyfills/toggle-class';\nimport '../polyfills/element-matches';\n\nexport default class Loading {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.active] `true` if this spinner should roll.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.active = this.options.active;\n    this.ie = false;\n\n    // Check if browser is Internet Explorer\n    if (options.ie || window.ActiveXObject || 'ActiveXObject' in window) {\n      this.ie = true;\n      this.element.classList.add('bx--loading--ie');\n    }\n\n    this.constructor.components.set(this.element, this);\n\n    // Initialize spinner\n    this.set(this.active);\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner, instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find spinners.\n   * @param {boolean} [options.active] `true` if this spinner should roll.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Sets active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  set(active) {\n    if (typeof active !== 'boolean') {\n      throw new TypeError('set expects a boolean.');\n    }\n\n    this.active = active;\n\n    if (this.ie) {\n      toggleClass(this.element, 'bx--loading--stop--ie', !this.active);\n    }\n    toggleClass(this.element, 'bx--loading--stop', !this.active);\n\n    return this;\n  }\n\n  /**\n   * Toggles active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  toggle() {\n    return this.set(!this.active);\n  }\n\n  /**\n   * @returns {boolean} `true` if this spinner is rolling roll.\n   */\n  isActive() {\n    return this.active;\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and spinner instance.\n * @type {WeakMap}\n */\nLoading.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode Loading.create .create()}, or {@linkcode Loading.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Loading.init .init()} works.\n * @property {string} selectorInit The CSS selector to find spinners.\n */\nLoading.options = {\n  selectorInit: '[data-loading]',\n  active: true,\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/loading.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class Dropdown {\n  /**\n   * A selector with drop downs.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    if (this.element.dataset.dropdown !== 'navigation') {\n      this.element.dataset.dropdown = '';\n    }\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.toggle(event));\n\n    this.element.addEventListener('keypress', (event) => this.toggle(event));\n    this.element.addEventListener('click', (event) => this.selected(event));\n  }\n\n  /**\n   * Instantiates selector of the given element.\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates selectors in the given node.\n   * If the given element indicates that it's an selector, instantiates it.\n   * Otherwise, instantiates selectors by searching for selectors in the given node.\n   * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find selectors.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Opens and closes the dropdown menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (event.which === 13 || event.which === 32 || event.type === 'click') {\n      const isOfSelf = this.element.contains(event.target);\n\n      if (isOfSelf) {\n        this.element.classList.toggle('bx--dropdown--open');\n      } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n        this.element.classList.remove('bx--dropdown--open');\n      }\n    }\n  }\n\n  /**\n   * Handles clicking on the dropdown options, doing the following:\n   * * Change Dropdown text to selected option.\n   * * Remove selected option from options when selected.\n   * * Emit custom events.\n   * @param {Event} event The event triggering this method.\n   */\n  selected(event) {\n    const activatedElement = event.target;\n    if (activatedElement.parentElement.dataset.option !== undefined) {\n      const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item: activatedElement },\n      });\n\n      if (this.element.dispatchEvent(eventStart)) {\n        if (this.element.dataset.dropdown !== 'navigation') {\n          this.element.firstElementChild.textContent = activatedElement.textContent;\n          activatedElement.classList.add(this.options.classSelected);\n        }\n        this.element.dataset.value = activatedElement.parentElement.dataset.value;\n        [... this.element.querySelectorAll(this.options.selectorItemSelected)].forEach((item) => {\n          if (activatedElement !== item) {\n            item.classList.remove(this.options.classSelected);\n          }\n        });\n\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n          bubbles: true,\n          cancelable: true,\n          detail: { item: activatedElement },\n        }));\n      }\n    }\n  }\n}\n\n/**\n * The map associating DOM element and selector instance.\n * @type {WeakMap}\n */\nDropdown.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode Dropdown.create .create()}, or {@linkcode Dropdown.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Dropdown.init .init()} works.\n * @property {string} selectorInit The CSS selector to find selectors.\n * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n * @property {string} [classSelected] The CSS class for the selected dropdown item.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a drop down item is selected.\n *   Cancellation of this event stops selection of drop down item.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n */\nDropdown.options = {\n  selectorInit: '[data-dropdown]',\n  selectorItem: '[data-option] > .bx--dropdown__link',\n  selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n  classSelected: 'bx--dropdown--selected',\n  eventBeforeSelected: 'dropdown-beingselected',\n  eventAfterSelected: 'dropdown-selected',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/dropdown.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/math-sign';\n\nexport default class Card {\n  /**\n   * The container for cards.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.constructor.components.set(this.element, this);\n    this.element.addEventListener('keydown', (event) => this.cardKeyPress(event));\n  }\n\n  /**\n   * Instantiates card container of the given element.\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates card container in the given node.\n   * If the given element indicates that it's an card container, instantiates it.\n   * Otherwise, instantiates card containers by searching for card containers in the given node.\n   * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find card containers.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Goes back/forward among cards,\n   * right arrow key for going forward, left arrow key for going backward.\n   * @param {Event} event The event triggering this method.\n   */\n  cardKeyPress(event) {\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n    const card = eventMatches(event, this.options.selectorCard);\n\n    if (direction && card && card === document.activeElement) {\n      const cards = [... this.element.querySelectorAll(this.options.selectorCard)];\n      const nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * cards.length;\n      cards[nextIndexLooped].focus();\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and card list instance.\n * @type {WeakMap}\n */\nCard.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode Card.create .create()}, or {@linkcode Card.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Card.init .init()} works.\n * @property {string} selectorInit The CSS selector to find card containers.\n * @property {string} [selectorCard] The CSS selector to find cards.\n */\nCard.options = {\n  selectorInit: '[data-card-list]',\n  selectorCard: '.bx--card',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/card.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\n\nexport default class NumberInput {\n  /**\n   * Number input UI.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a number input UI.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = options;\n    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n    // Also <svg> does not seems to have `Element.classList`.\n    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', (event) => this.handleClick(event));\n    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates number input UI of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates number input UI in the given node.\n   * If the given element indicates that it's an number input UI, instantiates it.\n   * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n   * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find number input UIs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const state = event.currentTarget.classList;\n    const numberInput = this.element.querySelector('.bx--number__input');\n\n    if (state.contains('bx--number__arrow--icon-up')) {\n      if (this.options.ie) {\n        ++numberInput.value;\n      } else {\n        numberInput.stepUp();\n      }\n    } else if (state.contains('bx--number__arrow--icon-down')) {\n      if (this.options.ie) {\n        if (numberInput.value > 0) {\n          --numberInput.value;\n        }\n      } else {\n        numberInput.stepDown();\n      }\n    } else {\n      return;\n    }\n\n    // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n    numberInput.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      cancelable: false,\n    }));\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and number input UI instance.\n * @type {WeakMap}\n */\nNumberInput.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n * @property {string} selectorInit The CSS selector to find number input UIs.\n */\nNumberInput.options = {\n  selectorInit: '[data-numberinput]',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/number-input.js\n **/","import '../polyfills/element-matches';\nimport eventMatches from '../polyfills/event-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class Table {\n  /**\n   * Data table.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates a data table of the given element.\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Sets up the given node to instantiate data tables in.\n   * If the given element indicates that it's an data table, instantiates it.\n   * Otherwise, lazily instantiates data table when it's clicked on.\n   * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find data tables.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, effectiveOptions.selectorInit);\n        if (element && !this.components.has(element)) {\n          this.create(element, effectiveOptions).handleClick(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles click on data table.\n   * * If the click is on a column title, toggles its sorting state.\n   * * If the click is on a check box, toggles the check box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const title = eventMatches(event, this.options.selectorTitle);\n    const row = eventMatches(event, this.options.selectorRow);\n    const checkbox = eventMatches(event, this.options.selectorCheckbox);\n    if (title) {\n      this.toggleState('Sort', title);\n    }\n    if (row && checkbox) {\n      this.toggleState('Check', row);\n    }\n  }\n\n  /**\n   * The callback called once toggling is finished or is canceled.\n   * @callback Table~toggleStateCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the toggling is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {HTMLElement} element The toggled element.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Toggles a sorting state or a check box's state.\n   * @param {string} type\n   *   Specifies what state to toggle:\n   *   * `\"Sort\"` for toggling a sorting state.\n   *   * `\"Check\"` for toggling a check box's state.\n   * @param {HTMLElement} element The DOM element to toggle its state.\n   * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n   */\n  toggleState(type, element, callback) {\n    const newState = !element.classList.contains(this.options[`class${type}State`]);\n    const eventStart = new CustomEvent(this.options[`eventBefore${type}Toggled`], {\n      bubbles: true,\n      cancelable: true,\n      detail: { newState },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (element.dispatchEvent(eventStart)) {\n      toggleClass(element, this.options[`class${type}State`], newState);\n      // this._changeActive(item);\n      element.dispatchEvent(new CustomEvent(this.options[`eventAfter${type}Toggled`], {\n        bubbles: true,\n        cancelable: true,\n        detail: { newState },\n      }));\n      if (callback) {\n        callback(null, element, newState);\n      }\n    } else {\n      const error = new Error('Toggling on table has been canceled.');\n      error.canceled = true;\n      error.element = element;\n      error.newState = newState;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and data table instance.\n * @type {WeakMap}\n */\nTable.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode Table.create .create()}, or {@linkcode Table.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Table.init .init()} works.\n * @property {string} selectorInit The CSS selector to find data tables.\n * @property {string} [selectorTitle] The CSS selector to find column titles.\n * @property {string} [selectorRow] The CSS selector to find rows.\n * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n * @property {string} [classSortState] The CSS class for the sorting state.\n * @property {string} [classCheckState] The CSS class for the checked state.\n * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n */\nTable.options = {\n  selectorInit: '[data-table]',\n  selectorTitle: '.bx--table__column-title',\n  selectorRow: '.bx--table__row',\n  selectorCheckbox: '.bx--checkbox',\n  classSortState: 'bx--table__column-title--rotated',\n  classCheckState: 'bx--table__row--checked',\n  eventBeforeSortToggled: 'table-sort-beingtoggled',\n  eventAfterSortToggled: 'table-sort-toggled',\n  eventBeforeCheckToggled: 'table-check-beingtoggled',\n  eventAfterCheckToggled: 'table-check-toggled',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/table.js\n **/","import debounce from 'lodash.debounce';\n\nexport default class DetailPageHeader {\n\n  /**\n   * The Detail Page Header.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a page header.\n   * @param {Object} [options] The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    // Debounce scroll event calls to handleScroll\n    const debouncedScroll = debounce(this.handleScroll.bind(this), 50);\n\n    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n  }\n\n  /**\n   * Instantiates detail page header of the given element.\n   * @param {HTMLElement} element The element.\n   * @param {Object} [options] The component options.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates the detail page header in the given element.\n   * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n   * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n   * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find detail page headers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.detailPageHeader !== undefined) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Adds class to header based on users position on the page\n   */\n  handleScroll() {\n    if (this.element.ownerDocument.defaultView.scrollY > 101) {\n      this.element.classList.add(this.options.slideUp);\n    } else {\n      this.element.classList.remove(this.options.slideUp);\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and detail page header instance.\n * @type {WeakMap}\n */\nDetailPageHeader.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode DetailPageHeader.create .create()}, or {@linkcode DetailPageHeader.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode DetailPageHeader.init .init()} works.\n * @property {string} selectorInit The CSS selector to find detail page headers.\n */\nDetailPageHeader.options = {\n  slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up',\n  selectorInit: '[data-detail-page-header]',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/detail-page-header.js\n **/","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.debounce/index.js\n ** module id = 24\n ** module chunks = 0\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class LeftNav {\n  /**\n   * Left Navigation.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.leftNavSectionActive = false;\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      selectorLeftNav: '[data-left-nav]',\n      selectorLeftNavList: '[data-left-nav-list]',\n      selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n      selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n      selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n      selectorLeftNavListItem: '[data-left-nav-item]',\n      selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n      selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n      selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n      selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n      selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n      selectorLeftNavSections: '[data-left-nav-sections]',\n      selectorLeftNavSection: '[data-left-nav-section]',\n      selectorLeftNavSectionLink: '[data-left-nav-section-link]',\n      selectorLeftNavSectionIcon: '[data-left-nav-section-icon]',\n      selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n      selectorLeftNavCurrentSectionTitle: '[data-left-nav-current-section-title]',\n      selectorLeftNavCurrentSectionIcon: '[data-left-nav-current-section-icon]',\n      selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n      selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n      selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n      // CSS Class Selectors\n      classActiveTrigger: 'bx--left-nav__trigger--active',\n      classActiveLeftNav: 'bx--left-nav--active',\n      classActiveLeftNavListItem: 'bx--active-list-item',\n      classExpandedLeftNavListItem: 'bx--main-nav__parent-item--expanded',\n      classFlyoutDisplayed: 'bx--nested-list__flyout-menu--displayed',\n      classItemHasChildren: 'bx--main-nav__parent-item--has-children',\n      classNavSection: 'bx--left-nav__section',\n      classNavSectionTransition: 'bx--left-nav__section--transition',\n      classNavSectionAnchor: 'bx--left-nav__section--anchor',\n      classNavSectionLink: 'bx--left-nav__section--link',\n      classNavHeaderTitle: 'bx--left-nav__header--title',\n      classItemFade: 'bx--main-nav__parent-item--fade',\n      classItemHidden: 'bx--main-nav__parent-item--hidden',\n      classListHidden: 'bx--left-nav__main-nav--hidden',\n      classListTop: 'bx--left-nav__main-nav--top',\n    }, options);\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookOpenActions();\n    this.hookListSectionEvents();\n    this.hookListItemsEvents();\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n  }\n\n  /**\n   * Instantiates a left navigation of the given element.\n   * @param {HTMLElement} element The element working as the left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a left navigation in the given node.\n   * If the given element indicates that it's a left navigation (having `data-left-nav-container` attribute), instantiates it.\n   * Otherwise, instantiates left navigation by searching for left navigation in the given node.\n   * @param {Node} target The DOM node to instantiate left navigation in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find left nav containers.\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, effectiveOptions);\n    } else {\n      [...target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Closes the menu.\n   */\n  closeMenu() {\n    this.element.classList.remove(this.options.classActiveLeftNav);\n    this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.remove(this.options.classActiveTrigger);\n    this.element.querySelector(this.options.selectorLeftNav).parentNode.setAttribute('aria-expanded', 'false');\n  }\n\n  /**\n   * Toggles the menu to open and close.\n   */\n  toggleMenu() {\n    const leftNavContainer = this.element.querySelector(this.options.selectorLeftNav).parentNode;\n    this.element.classList.toggle(this.options.classActiveLeftNav);\n    this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.toggle(this.options.classActiveTrigger);\n    if (leftNavContainer.getAttribute('aria-expanded') === 'false') leftNavContainer.setAttribute('aria-expanded', 'true');\n    else leftNavContainer.setAttribute('aria-expanded', 'false');\n  }\n\n  /**\n   * Adds a transitional animation to the navSection\n   */\n  animateNavSection(selectedNav) {\n    const selectedNavLink = selectedNav.querySelector(this.options.selectorLeftNavSectionLink);\n    const leftNav = this.element.querySelector(this.options.selectorLeftNav);\n    const leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n\n    selectedNav.classList.remove(this.options.classNavSection);\n    selectedNav.classList.remove(`${this.options.classNavSection}--'${selectedNavLink.textContent.toLowerCase()}`);\n    selectedNav.classList.add(this.options.classNavSectionTransition);\n    if (leftNavSections.children[0] === selectedNav) selectedNav.classList.add(`${this.options.classNavSectionTransition}--50`); // First child only move 50px\n    else selectedNav.classList.add(`${this.options.classNavSectionTransition}--100`); // Second move 100px\n    selectedNav.setAttribute('data-left-nav-section', selectedNavLink.textContent);\n    /* Not sure what trick more performant*/\n    setTimeout(() => {\n      selectedNav.classList.add(`${this.options.classNavSectionTransition}--0`);\n    }, 100); // Could probably use a promise here\n\n    selectedNavLink.classList.remove(this.options.classNavSectionLink);\n    selectedNavLink.classList.add(this.options.classNavHeaderTitle);\n    selectedNavLink.setAttribute('data-left-nav-current-section-title', '');\n    selectedNavLink.removeAttribute('data-left-nav-section-link');\n\n    this.element.insertBefore(selectedNav, leftNav);\n  }\n\n  /**\n   * Adds a transitional animation to the navigation items on nav section click\n   */\n  animateNavList(selectedNavTitle) {\n    const currentLeftNavList = this.element.querySelector(`${this.options.selectorLeftNavList}:not(.bx--left-nav__main-nav--hidden)`);\n    const newLeftNavList = this.element.querySelector(`[data-left-nav-list=${selectedNavTitle}]`);\n    const currentLeftNavItems = [...currentLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)].reverse();\n    const newLeftNavItems = [...newLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)];\n\n    const fadeOutTime = 300;\n    let counter = 0;\n    const counterIteration = fadeOutTime / currentLeftNavItems.length; // Length of animation divided by number of items\n    currentLeftNavItems.forEach(item => {\n      item.setAttribute('tabIndex', '-1');\n      setTimeout(() => {\n        item.classList.add(this.options.classItemFade);\n      }, counter);\n      counter += counterIteration;\n    });\n\n    newLeftNavItems.forEach(item => {\n      item.setAttribute('tabIndex', '0');\n      item.classList.remove(this.options.classItemFade);\n    });\n\n    setTimeout(() => {\n      currentLeftNavList.classList.add(this.options.classListHidden);\n      currentLeftNavList.classList.add(this.options.classListTop);\n      currentLeftNavList.setAttribute('aria-hidden', 'true');\n      newLeftNavList.classList.remove(this.options.classListHidden);\n      setTimeout(() => { newLeftNavList.classList.remove(this.options.classListTop); }, 100);\n      newLeftNavList.setAttribute('aria-hidden', 'false');\n    }, fadeOutTime + 100); // Wait for items to fade out.\n  }\n\n  hookOpenActions() {\n    const openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n    const closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n\n    openBtn.addEventListener('click', () => {\n      this.element.tabIndex = '0';\n      this.toggleMenu();\n    });\n\n    openBtn.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.element.tabIndex = '0';\n        this.toggleMenu();\n      }\n    });\n\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        this.element.tabIndex = '-1';\n        this.closeMenu();\n      });\n\n      closeBtn.addEventListener('keydown', (evt) => {\n        if (evt.which === 13) {\n          this.element.tabIndex = '-1';\n          this.closeMenu();\n        }\n      });\n    }\n\n    this.element.ownerDocument.addEventListener('keydown', (evt) => {\n      if ((evt.which === 27) && this.element.classList.contains(this.options.classActiveLeftNav)) {\n        this.closeMenu();\n      }\n    });\n  }\n\n  /**\n   * Addes Event listeners to list sections\n   */\n  hookListSectionEvents() {\n    const leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n    leftNavSections.addEventListener('click', (evt) => {\n      this.handleSectionItemClick(evt, leftNavSections);\n    });\n\n    leftNavSections.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.handleSectionItemClick(evt, leftNavSections);\n        this.element.querySelector(this.options.selectorLeftNavCurrentSectionTitle).focus();\n      }\n    });\n  }\n\n  /**\n   * Adds event listeners to list items\n   */\n  hookListItemsEvents() {\n    const leftNavList = [...this.element.querySelectorAll(this.options.selectorLeftNavList)];\n    leftNavList.forEach(list => {\n      list.addEventListener('click', (evt) => {\n        const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n        if (leftNavItem) {\n          const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n          const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n          const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n          if (flyoutItem) {\n            this.addActiveListItem(flyoutItem);\n          } else if (childItem) {\n            if (childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n              const flyoutMenu = childItem.querySelector(this.options.selectorLeftNavFlyoutMenu);\n              flyoutMenu.classList.toggle(this.options.classFlyoutDisplayed);\n            } else {\n              this.addActiveListItem(childItem);\n            }\n          } else if (hasChildren) {\n            this.handleNestedListClick(leftNavItem);\n          } else {\n            this.addActiveListItem(leftNavItem);\n          }\n        }\n      });\n      list.addEventListener('keydown', (evt) => {\n        if (evt.which === 13) {\n          const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n          if (leftNavItem) {\n            const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n            const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n            const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n            if (flyoutItem) {\n              this.addActiveListItem(flyoutItem);\n            } else if (childItem) {\n              if (!childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n                this.addActiveListItem(childItem);\n              } else {\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${childItem.offsetTop - this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${childItem.offsetLeft + Math.round(childItem.offsetWidth)}px`;\n              }\n            } else if (hasChildren) {\n              this.handleNestedListClick(leftNavItem);\n            } else {\n              this.addActiveListItem(leftNavItem);\n            }\n          }\n        }\n      });\n    });\n    const flyouts = [...this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout)];\n    flyouts.forEach(flyout => {\n      flyout.addEventListener('mouseenter', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${flyout.offsetTop - this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${flyout.offsetLeft + Math.round(flyout.offsetWidth)}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.toggle(this.options.classFlyoutDisplayed);\n      });\n      flyout.addEventListener('mouseleave', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'true');\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      });\n    });\n  }\n\n  /**\n   * Hides all flyout menus.\n   */\n  hideAllFlyoutMenus() {\n    const flyoutMenus = [...this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu)];\n    flyoutMenus.forEach(menu => {\n      menu.setAttribute('aria-hidden', 'true');\n      menu.classList.remove(this.options.classFlyoutDisplayed);\n    });\n  }\n\n  /**\n   * Sets a list item as active.\n   * @param {Object} item The active list item.\n   */\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavAllListItems)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        if (!currentItem.contains(item)) {\n          currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n        } else {\n          currentItem.classList.add(this.options.classActiveLeftNavListItem);\n        }\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n    this.closeMenu();\n    this.hideAllFlyoutMenus();\n    this.closeMenu();\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the left navigation when document is clicked outside the left navigation.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n    const isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n    const shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n    let flyoutOpen;\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      flyoutOpen = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.contains(this.options.classFlyoutDisplayed);\n    }\n    if (isOfSelf && this.element.tagName === 'A') {\n      evt.preventDefault();\n    }\n    if (shouldClose) {\n      this.closeMenu();\n    }\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      if (flyoutOpen && !isOfSelf && isOpen) {\n        this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      }\n    }\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n  handleNestedListClick(listItem) {\n    const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n    this.hideAllFlyoutMenus();\n    toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n    const listItems = [...listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n    listItems.forEach(item => {\n      if (isOpen) {\n        listItem.querySelector(this.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'true');\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n      } else {\n        listItem.querySelector(this.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'false');\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n      }\n    });\n  }\n\n  handleSectionItemClick(evt, leftNavSections) { // Sorry\n    const leftNavSectionItem = eventMatches(evt, this.options.selectorLeftNavSection);\n    if (leftNavSectionItem) {\n      const selectedLeftNavSectionItem = this.element.querySelector(this.options.selectorLeftNavCurrentSection);\n      const selectedLeftNavSectionItemTitle = selectedLeftNavSectionItem.querySelector(this.options.selectorLeftNavCurrentSectionTitle);\n      const selectedLeftNavSectionItemIcon = this.element.querySelector(this.options.selectorLeftNavCurrentSectionIcon);\n      const selectedLeftNavSectionItemUse = selectedLeftNavSectionItemIcon.querySelector('use');\n      const leftNavSectionItemLink = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionLink);\n      const leftNavSectionItemIcon = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionIcon);\n      const leftNavSectionItemIconUse = leftNavSectionItemIcon.querySelector('use');\n\n      if (this.leftNavSectionActive) {\n        return;\n      }\n      this.leftNavSectionActive = true;\n\n      const newLeftNavSectionItem = document.createElement('li');\n      newLeftNavSectionItem.setAttribute('data-left-nav-section', selectedLeftNavSectionItemTitle.textContent);\n      newLeftNavSectionItem.setAttribute('tabindex', 0);\n      newLeftNavSectionItem.classList.add(this.options.classNavSection);\n      newLeftNavSectionItem.classList.add(`${this.options.classNavSection}--${selectedLeftNavSectionItemTitle.textContent.toLowerCase()}`);\n\n      const newLeftNavSectionItemAnchor = document.createElement('a');\n      newLeftNavSectionItemAnchor.setAttribute('href', '#');\n      newLeftNavSectionItemAnchor.classList.add(this.options.classNavSectionAnchor);\n\n      const newLeftNavSectionItemIcon = selectedLeftNavSectionItemIcon.cloneNode(true);\n      // IE11 doesn't support classList on SVG, must revert to className\n      newLeftNavSectionItemIcon.setAttribute('class', 'bx--left-nav__section--taxonomy-icon');\n      newLeftNavSectionItemIcon.removeAttribute('data-left-nav-current-section-icon');\n      newLeftNavSectionItemIcon.setAttribute('data-left-nav-section-icon', selectedLeftNavSectionItemTitle.textContent);\n\n      const newLeftNavSectionItemLink = document.createElement('span');\n      newLeftNavSectionItemLink.setAttribute('data-left-nav-section-link', '');\n      newLeftNavSectionItemLink.classList.add(this.options.classNavSectionLink);\n      newLeftNavSectionItemLink.textContent = selectedLeftNavSectionItemTitle.textContent;\n\n      this.animateNavSection(leftNavSectionItem);\n      this.animateNavList(leftNavSectionItemLink.textContent);\n\n      newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemIcon);\n      newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemLink);\n      newLeftNavSectionItem.appendChild(newLeftNavSectionItemAnchor);\n      leftNavSections.insertBefore(newLeftNavSectionItem, leftNavSections.firstChild);\n\n      setTimeout(() => {\n        selectedLeftNavSectionItemTitle.textContent = leftNavSectionItemLink.textContent;\n        selectedLeftNavSectionItem.setAttribute('data-left-nav-current-section', leftNavSectionItemLink.textContent);\n        selectedLeftNavSectionItemIcon.setAttribute('data-left-nav-current-section-icon', leftNavSectionItemLink.textContent);\n        selectedLeftNavSectionItemUse.setAttribute('xlink:href', leftNavSectionItemIconUse.getAttribute('xlink:href'));\n\n        leftNavSectionItem.parentNode.removeChild(leftNavSectionItem); // Cant use .remove() because of IE11\n        this.leftNavSectionActive = false;\n      }, 450); // Wait for nav items to animate\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode LeftNav.create .create()}, or {@linkcode LeftNav.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode LeftNav.init .init()} works.\n * @property {string} selectorInit The CSS selector to find left nav containers.\n * @property {string} [selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n * @property {string} [selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n * @property {string} [selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n * @property {string} [selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n * @property {string} [selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n * @property {string} [selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n * @property {string} [selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n * @property {string} [selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n * @property {string} [selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n * @property {string} [selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n * @property {string} [selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n * @property {string} [classActiveLeftNav] The class name for when a left nav is active.\n * @property {string} [classActiveLeftNavListItem] The class name for when a left nav list item is active.\n * @property {string} [classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n * @property {string} [classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n * @property {string} [classActiveSection] The class name for an active section item in the left nav header.\n * @property {string} [classItemHasChildren] The class name for when a list item has children.\n */\nLeftNav.options = {\n  selectorInit: '[data-left-nav-container]',\n  // Data Attribute selectors\n  selectorLeftNav: '[data-left-nav]',\n  selectorLeftNavList: '[data-left-nav-list]',\n  selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n  selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n  selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n  selectorLeftNavListItem: '[data-left-nav-item]',\n  selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n  selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n  selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n  selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n  selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n  selectorLeftNavSections: '[data-left-nav-sections]',\n  selectorLeftNavSection: '[data-left-nav-section]',\n  selectorLeftNavSectionLink: '[data-left-nav-section-link]',\n  selectorLeftNavSectionIcon: '[data-left-nav-section-icon]',\n  selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n  selectorLeftNavCurrentSectionTitle: '[data-left-nav-current-section-title]',\n  selectorLeftNavCurrentSectionIcon: '[data-left-nav-current-section-icon]',\n  selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n  selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n  selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n  // CSS Class Selectors\n  classActiveTrigger: 'bx--left-nav__trigger--active',\n  classActiveLeftNav: 'bx--left-nav--active',\n  classActiveLeftNavListItem: 'bx--active-list-item',\n  classExpandedLeftNavListItem: 'bx--main-nav__parent-item--expanded',\n  classFlyoutDisplayed: 'bx--nested-list__flyout-menu--displayed',\n  classItemHasChildren: 'bx--main-nav__parent-item--has-children',\n  classNavSection: 'bx--left-nav__section',\n  classNavSectionTransition: 'bx--left-nav__section--transition',\n  classNavSectionAnchor: 'bx--left-nav__section--anchor',\n  classNavSectionLink: 'bx--left-nav__section--link',\n  classNavHeaderTitle: 'bx--left-nav__header--title',\n  classItemFade: 'bx--main-nav__parent-item--fade',\n  classItemHidden: 'bx--main-nav__parent-item--hidden',\n  classListHidden: 'bx--left-nav__main-nav--hidden',\n  classListTop: 'bx--left-nav__main-nav--top',\n};\n\n/**\n * The map associating DOM element and left navigation instance.\n * @type {WeakMap}\n */\nLeftNav.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\n\nexport default class UnifiedHeader {\n\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n    this.constructor.components.set(this.element, this);\n  }\n\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  release() {\n    if (this.handleDocumentClick) {\n      this.element.ownerDocument.removeEventListener('click', (evt) => this.handleDocumentClick(evt));\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and left navigation instance.\n * @type {WeakMap}\n */\nUnifiedHeader.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode UnifiedHeader.create .create()}, or {@linkcode UnifiedHeader.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode UnifiedHeader.init .init()} works.\n * @property {string} selectorInit The CSS selector to find unified headers.\n */\nUnifiedHeader.options = {\n  selectorInit: '[data-unified-header]',\n  // Data Attribute selectors\n  // CSS Class Selectors\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/unified-header.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class InlineLeftNav {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} options The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n    this.hookListItemsEvents();\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find inline left navs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  hookListItemsEvents() {\n    const leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n    leftNavList.addEventListener('click', (evt) => {\n      const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n      if (leftNavItem) {\n        const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n        const hasChildren = leftNavItem.classList.contains('left-nav-list__item--has-children');\n        if (childItem) {\n          this.addActiveListItem(childItem);\n        } else if (hasChildren) {\n          this.handleNestedListClick(leftNavItem, evt);\n        } else {\n          this.addActiveListItem(leftNavItem);\n        }\n      }\n    });\n    [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n      item.addEventListener('keydown', (evt) => {\n        const leftNavItemWithChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n        if (leftNavItemWithChildren && evt.which === 13) {\n          this.handleNestedListClick(leftNavItemWithChildren);\n        }\n      });\n    });\n  }\n\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * The nested list is expanded and the icon is rotated.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n   handleNestedListClick(listItem, evt) {\n     const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n     if (!('leftNavItemLink' in evt.target.dataset)) {\n       toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n     }\n     const list = listItem.querySelector(this.options.selectorLeftNavNestedList);\n     const listItems = [... list.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n     listItems.forEach(item => {\n       if (isOpen) {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n       } else {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n       }\n     });\n   }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and spinner instance.\n * @type {WeakMap}\n */\nInlineLeftNav.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode InlineLeftNav.create .create()}, or {@linkcode InlineLeftNav.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode InlineLeftNav.init .init()} works.\n * @property {string} selectorInit The CSS selector to find inline left navs.\n */\nInlineLeftNav.options = {\n  selectorInit: '[data-inline-left-nav]',\n  // Data Attribute selectors\n  selectorLeftNavList: '[data-inline-left-nav-list]',\n  selectorLeftNavNestedList: '[data-inline-left-nav-nested-list]',\n  selectorLeftNavListItem: '[data-inline-left-nav-item]',\n  selectorLeftNavListItemLink: '[data-inline-left-nav-item-link]',\n  selectorLeftNavNestedListItem: '[data-inline-left-nav-nested-item]',\n  // CSS Class Selectors\n  classActiveLeftNavListItem: 'left-nav-list__item--active',\n  classExpandedLeftNavListItem: 'left-nav-list__item--expanded',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/inline-left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class ProfileSwitcher {\n  /**\n   * Profile Switcher.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a profile switcher.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n   * @param {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n   * @param {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n   * @param {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n   * @param {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n   * @param {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n   * @param {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n    this.element.querySelector(this.options.selectorToggle).addEventListener('keydown', (event) => this.toggle(event));\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseenter', () => this.determineSwitcherValues(true));\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseleave', () => this.determineSwitcherValues(false));\n\n    this.element.ownerDocument.addEventListener('keyup', () => this.handleBlur());\n  }\n\n  /**\n   * Instantiates a profile switcher of the given element.\n   * @param {HTMLElement} element The element working as the profile switcher.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a profile switcher in the given node.\n   * If the given element indicates that it's a profile switcher (having `data-profile-switcher` attribute), instantiates it.\n   * Otherwise, instantiates profile switcher by searching for profile switcher in the given node.\n   * @param {Node} target The DOM node to instantiate profile switcher in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find profile switchers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Opens and closes the menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    const isOfSelf = this.element.contains(event.target);\n    if (event.which === 13 || event.which === 32) {\n      if (isOfSelf) {\n        this.element.classList.toggle(this.options.classSwitcherOpen);\n      } else if (!isOfSelf && this.element.classList.contains(this.options.classSwitcherOpen)) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      }\n    }\n  }\n\n  handleBlur() {\n    if (!(this.element.contains(document.activeElement))) {\n      this.element.classList.remove(this.options.classSwitcherOpen);\n    }\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the profile switcherwhen document is clicked outside the left navigation or\n   * the user clicks the profile switcher while it is open.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggle = this.element.ownerDocument.querySelector(this.options.selectorToggle).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    if (isOfSelf) {\n      if (isToggle && isOpen) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      } else if (isOpen) {\n        this.determineSwitcherValues();\n      } else {\n        this.element.classList.add(this.options.classSwitcherOpen);\n      }\n    } else {\n      this.element.classList.remove(this.options.classSwitcherOpen);\n    }\n  }\n\n  /**\n   * Handles logic to determine what text to display in profile switcher.\n   * If the text is over 25 characters long, truncate and add ellipses.\n   * Also adds logic to change the switcher width based on the width of the hovered\n   * profile switcher\n   * @param {boolean} isHovered boolean value passed by the event listener on bx--toggle.\n   */\n  determineSwitcherValues(isHovered) {\n    const nameElement = this.element.querySelector(this.options.selectorAccount);\n    const regionElement = this.element.querySelector(this.options.selectorRegion);\n    const orgElement = this.element.querySelector(this.options.selectorOrg);\n    const spaceElement = this.element.querySelector(this.options.selectorSpace);\n    const menuElement = this.element.querySelector(this.options.selectorMenu);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    const nameDropdownValue = this.element.querySelector(this.options.selectorAccountDropdown).textContent;\n    const regionDropdownValue = this.element.querySelector(this.options.selectorRegionDropdown).textContent;\n    const orgDropdownValue = this.element.querySelector(this.options.selectorOrgDropdown).textContent;\n    const spaceDropdownValue = this.element.querySelector(this.options.selectorSpaceDropdown).textContent;\n\n    let nameShort;\n    let orgShort;\n    let spaceShort;\n\n    if (isHovered && !isOpen) {\n      nameElement.textContent = nameDropdownValue;\n      orgElement.textContent = orgDropdownValue;\n      spaceElement.textContent = spaceDropdownValue;\n      regionElement.textContent = regionDropdownValue;\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    } else {\n      if (nameDropdownValue.length > 25) {\n        nameShort = nameDropdownValue.substr(0, 25) + '...';\n        nameElement.textContent = nameShort;\n      } else {\n        nameElement.textContent = nameDropdownValue;\n      }\n\n      if (orgDropdownValue.length > 25) {\n        orgShort = orgDropdownValue.slice(0, 12) + '...' + orgDropdownValue.slice(-13);\n        orgElement.textContent = orgShort;\n      } else {\n        orgElement.textContent = orgDropdownValue;\n      }\n\n      if (spaceDropdownValue.length > 25) {\n        spaceShort = spaceDropdownValue.substr(0, 25) + '...';\n        spaceElement.textContent = spaceShort;\n      } else {\n        spaceElement.textContent = spaceDropdownValue;\n      }\n\n      regionElement.textContent = regionDropdownValue;\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @property {string} selectorInit The CSS selector to find profile switchers.\n * @property {string} [selectorProfileSwitcher] The data attribute selector for the profile switcher.\n * @property {string} [selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n * @property {string} [selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n * @property {string} [selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n * @property {string} [selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n * @property {string} [selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n * @property {string} [selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n */\nProfileSwitcher.options = {\n  selectorInit: '[data-profile-switcher]',\n  // Data Attribute selectors\n  selectorProfileSwitcher: '[data-profile-switcher]',\n  selectorToggle: '[data-profile-switcher-toggle]',\n  selectorMenu: '[data-switcher-menu]',\n  selectorAccount: '[data-switcher-account]',\n  selectorRegion: '[data-switcher-region]',\n  selectorOrg: '[data-switcher-org]',\n  selectorSpace: '[data-switcher-space]',\n  selectorDropdown: '[data-dropdown]',\n  selectorAccountDropdown: '[data-dropdown-account]',\n  selectorRegionDropdown: '[data-dropdown-region]',\n  selectorOrgDropdown: '[data-dropdown-org]',\n  selectorSpaceDropdown: '[data-dropdown-space]',\n  classSwitcherOpen: 'bx--account-switcher--open',\n};\n\n/**\n * The map associating DOM element and profile switcher instance.\n * @type {WeakMap}\n */\nProfileSwitcher.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/profile-switcher.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class SearchWithOptions {\n  /**\n   * Search with Options.\n   * @implements Component\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorToggleLayoutBtn] The data attribute selector for the button that toggles between the layouts.\n   * @param {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.\n   * @param {string} [options.classHiddenContainer] The class selector for a hidden container.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.querySelector(this.options.selectorToggleLayoutBtn).addEventListener('click', (evt) => this.toggleLayout(evt));\n  }\n\n  /**\n   * Instantiates a search component of the given element.\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a search component in the given node.\n   * If the given element indicates that it's a search component (having `data-search-with-options` attribute), instantiates it.\n   * Otherwise, instantiates the search component by searching for the search component in the given node.\n   * @param {Node} target The DOM node to instantiate the search component in. Should be a document or an element..\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find unified headers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Toggles between the grid and list layout.\n   * @param {Event} event The event triggering this method.\n   */\n  toggleLayout(evt) {\n    const btn = evt.currentTarget;\n    const iconContainers = [... btn.querySelectorAll(this.options.selectorIconContainer)];\n    iconContainers.forEach(container => {\n      const isHidden = container.classList.contains(this.options.classHiddenContainer);\n      toggleClass(container, this.options.classHiddenContainer, !isHidden);\n    });\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\nSearchWithOptions.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode SearchWithOptions.create .create()}, or {@linkcode SearchWithOptions.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode SearchWithOptions.init .init()} works.\n * @property {string} selectorInit The CSS selector to find search UIs with options.\n */\nSearchWithOptions.options = {\n  selectorInit: '[data-search-with-options]',\n  selectorToggleLayoutBtn: '[data-search-toggle-btn]',\n  selectorIconContainer: '[data-search-toggle-layout]',\n  classHiddenContainer: 'bx--search__toggle-layout__container--hidden',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/search-with-options.js\n **/"],"sourceRoot":""}