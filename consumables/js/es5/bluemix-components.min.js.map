{"version":3,"sources":["webpack:///bluemix-components.min.js","webpack:///webpack/bootstrap fbbe8262fb4197b1c94a","webpack:///./consumables/js/es2015/index.js","webpack:///./~/svgxuse/svgxuse.js","webpack:///./consumables/js/es2015/file-uploader.js","webpack:///./consumables/js/es2015/fab.js","webpack:///./consumables/js/polyfills/event-matches.js","webpack:///./consumables/js/misc/on.js","webpack:///./consumables/js/es2015/content-switcher.js","webpack:///./consumables/js/polyfills/array-from.js","webpack:///./consumables/js/polyfills/object-assign.js","webpack:///./consumables/js/polyfills/toggle-class.js","webpack:///./consumables/js/es2015/tabs.js","webpack:///./consumables/js/polyfills/math-sign.js","webpack:///./consumables/js/es2015/overflow-menu.js","webpack:///./consumables/js/es2015/modals.js","webpack:///./consumables/js/polyfills/custom-event.js","webpack:///./consumables/js/es2015/header.js","webpack:///./consumables/js/es2015/toolbars.js","webpack:///./consumables/js/es2015/loading.js","webpack:///./consumables/js/es2015/dropdown.js","webpack:///./consumables/js/es2015/card.js","webpack:///./consumables/js/es2015/number-input.js","webpack:///./consumables/js/es2015/table.js","webpack:///./consumables/js/es2015/detail-page-header.js","webpack:///./~/lodash.debounce/index.js","webpack:///./consumables/js/es2015/left-nav.js","webpack:///./consumables/js/es2015/unified-header.js","webpack:///./consumables/js/es2015/inline-left-nav.js","webpack:///./consumables/js/es2015/profile-switcher.js","webpack:///./consumables/js/es2015/search-with-options.js"],"names":["BluemixComponents","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","ProfileSwitcher","DetailPageHeader","Table","NumberInput","Card","Dropdown","Loading","Toolbars","LeftNav","HeaderNav","Modal","OverflowMenu","Tab","ContentSwitcher","FileUploader","FabButton","settings","undefined","_fileUploader","_fileUploader2","_fab","_fab2","_contentSwitcher","_contentSwitcher2","_tabs","_tabs2","_overflowMenu","_overflowMenu2","_modals","_modals2","_header","_header2","_toolbars","_toolbars2","_loading","_loading2","_dropdown","_dropdown2","_card","_card2","_numberInput","_numberInput2","_table","_table2","_detailPageHeader","_detailPageHeader2","_leftNav","_leftNav2","_unifiedHeader","_unifiedHeader2","_inlineLeftNav","_inlineLeftNav2","_profileSwitcher","_profileSwitcher2","_searchWithOptions","_searchWithOptions2","init","disableAutoInit","document","readyState","addEventListener","setTimeout","window","checkUseElems","tid","cache","create","debouncedCheck","clearTimeout","unobserveChanges","observeChanges","observer","MutationObserver","observe","documentElement","childList","subtree","attributes","disconnect","removeEventListener","ignore","xlinkNS","observeIfDone","inProgressCount","attrUpdateFunc","spec","base","useEl","setAttributeNS","hash","onloadFunc","xhr","svg","body","x","createElement","onload","innerHTML","responseText","getElementsByTagName","setAttribute","style","position","width","height","overflow","insertBefore","firstChild","onErrorTimeout","onerror","ontimeout","bcr","i","Request","isHidden","url","uses","fallback","XMLHttpRequest","withCredentials","XDomainRequest","length","getBoundingClientRect","getAttributeNS","split","left","right","top","bottom","getElementById","open","send","abort","winLoad","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","element","_this","this","options","arguments","nodeType","Node","ELEMENT_NODE","labelSelector","dataset","label","labelNode","parentNode","querySelector","nextElementSibling","constructor","components","set","event","updateLabel","fileName","files","multipleCaption","replace","pop","textContent","get","_this2","DOCUMENT_NODE","Error","fileInput","concat","querySelectorAll","forEach","WeakMap","_eventMatches","_eventMatches2","_on","_on2","toggle","tagName","preventDefault","state","fab","has","eventMatches","selector","matchesFuncName","traverse","currentTarget","filter","name","on","_len","args","_key","apply","release","_toggleClass","_toggleClass2","assign","selectorButton","selectorButtonSelected","classActive","eventBeforeSelected","eventAfterSelected","handleClick","input","checked","_changeActive","button","setActive","item","itemLink","selectorLink","link","selectorButtons","ownerDocument","removeAttribute","callback","eventStart","CustomEvent","bubbles","cancelable","detail","dispatchEvent","error","canceled","_this3","contentSwitcher","a","slice","inDst","dst","src","keys","prop","toggleClass","add","classList","contains","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_ContentSwitcher","selectorMenu","selectorTrigger","selectorTriggerText","classHidden","handleKeyDown","selected","updateTriggerText","trigger","updateMenuState","triggerNode","offsetParent","direction","Left","Right","ArrowLeft","ArrowRight","keyIdentifier","buttons","nextIndex","Math","max","indexOf","nextIndexLooped","sign","focus","tabs","n","abs","hDocumentClick","handleDocumentClick","hDocumentKeyPress","handleKeyPress","isOfSelf","shouldBeOpen","which","overflowMenu","getTransitionDuration","computedStyle","defaultView","getComputedStyle","durations","transitionDuration","map","parseFloat","duration","isNaN","classVisible","classNoScroll","eventBeforeShown","eventAfterShown","eventBeforeHidden","eventAfterHidden","hookCloseActions","hide","keydownHandler","visible","finished","finishedTransition","launchingElementOrEvent","launchingElementOrEventOmitted","launchingElement","delegateTarget","launchingEvent","type","_changeState","_this4","_this5","modal","modalElements","modalTarget","show","shownAlready","offsetWidth","offsetHeight","console","warn","missingNativeCustomEvent","createEvent","initEvent","_typeof","Symbol","iterator","selectorTriggerLabel","selectorItem","selectorItemLink","selectorLabel","menuNode","toggleNav","e","select","isActive","defaultNotPrevented","triggerLabelNode","activatedElement","initiatingEvent","itemElement","remove","nav","_ret","handler","headerElements","navTarget","v","searchFieldNode","listIconsSearchActionTarget","handleActionClick","searchActionNode","active","ie","ActiveXObject","loading","selectorItemSelected","classSelected","dropdown","parentElement","option","firstElementChild","selectorCard","cardKeyPress","card","activeElement","cards","cardList","numberInput","stepUp","stepDown","numberinput","selectorTitle","selectorRow","selectorCheckbox","classSortState","classCheckState","eventBeforeSortToggled","eventAfterSortToggled","eventBeforeCheckToggled","eventAfterCheckToggled","title","row","checkbox","toggleState","newState","table","_lodash","_lodash2","slideUp","debouncedScroll","handleScroll","bind","scrollY","detailPageHeader","debounce","func","wait","invokeFunc","time","lastArgs","thisArg","lastThis","lastInvokeTime","result","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","flush","debounced","isInvoking","FUNC_ERROR_TEXT","toNumber","isObject","nativeMax","isFunction","tag","objectToString","funcTag","genTag","isObjectLike","isSymbol","symbolTag","NAN","other","valueOf","reTrim","isBinary","reIsBinary","test","reIsOctal","freeParseInt","reIsBadHex","parseInt","objectProto","toString","min","Date","selectorLeftNav","selectorLeftNavList","selectorLeftNavNestedList","selectorLeftNavToggleOpen","selectorLeftNavToggleClose","selectorLeftNavListItem","selectorLeftNavListItemLink","selectorLeftNavNestedListItem","selectorLeftNavArrowIcon","selectorLeftNavFlyoutMenu","selectorLeftNavFlyoutItem","selectorLeftNavSection","selectorLeftNavCurrentSection","selectorLeftNavListItemHasChildren","selectorLeftNavListItemHasFlyout","selectorLeftNavAllListItems","classActiveLeftNav","classActiveLeftNavListItem","classActiveTrigger","classExpandedLeftNavListItem","classFlyoutDisplayed","classItemHasChildren","hookOpenActions","hookListItemsEvents","animateInNav","evt","counter","animationDelay","openBtn","closeBtn","tabIndex","toggleMenu","closeMenu","leftNavList","leftNavItem","childItem","hasChildren","flyoutItem","addActiveListItem","flyoutMenu","handleNestedListClick","flyouts","flyout","offsetTop","scrollTop","offsetLeft","round","flyoutMenus","menu","_this6","currentItem","hideAllFlyoutMenus","clickTarget","isToggleBtn","isOpen","isUnifiedHeader","shouldClose","flyoutOpen","listItem","_this7","listItems","_this8","UnifiedHeader","InlineLeftNav","leftNavItemWithChildren","list","selectorProfileSwitcher","selectorToggle","selectorAccount","selectorOrg","selectorSpace","selectorAccountDropdown","selectorOrgDropdown","selectorSpaceDropdown","classSwitcherOpen","determineSwitcherValues","isToggle","isHovered","nameElement","orgElement","spaceElement","menuElement","nameDropdownValue","orgDropdownValue","spaceDropdownValue","nameShort","orgShort","spaceShort","substr","SearchWithOptions","selectorToggleLayoutBtn","selectorIconContainer","classHiddenContainer","toggleLayout","btn","iconContainers","container"],"mappings":"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","file":"bluemix-components.min.js","sourcesContent":["var BluemixComponents =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ProfileSwitcher = exports.DetailPageHeader = exports.Table = exports.NumberInput = exports.Card = exports.Dropdown = exports.Loading = exports.Toolbars = exports.LeftNav = exports.HeaderNav = exports.Modal = exports.OverflowMenu = exports.Tab = exports.ContentSwitcher = exports.FileUploader = exports.FabButton = exports.settings = undefined;\n\t\n\t__webpack_require__(1);\n\t\n\tvar _fileUploader = __webpack_require__(2);\n\t\n\tvar _fileUploader2 = _interopRequireDefault(_fileUploader);\n\t\n\tvar _fab = __webpack_require__(3);\n\t\n\tvar _fab2 = _interopRequireDefault(_fab);\n\t\n\tvar _contentSwitcher = __webpack_require__(6);\n\t\n\tvar _contentSwitcher2 = _interopRequireDefault(_contentSwitcher);\n\t\n\tvar _tabs = __webpack_require__(10);\n\t\n\tvar _tabs2 = _interopRequireDefault(_tabs);\n\t\n\tvar _overflowMenu = __webpack_require__(12);\n\t\n\tvar _overflowMenu2 = _interopRequireDefault(_overflowMenu);\n\t\n\tvar _modals = __webpack_require__(13);\n\t\n\tvar _modals2 = _interopRequireDefault(_modals);\n\t\n\tvar _header = __webpack_require__(15);\n\t\n\tvar _header2 = _interopRequireDefault(_header);\n\t\n\tvar _toolbars = __webpack_require__(16);\n\t\n\tvar _toolbars2 = _interopRequireDefault(_toolbars);\n\t\n\tvar _loading = __webpack_require__(17);\n\t\n\tvar _loading2 = _interopRequireDefault(_loading);\n\t\n\tvar _dropdown = __webpack_require__(18);\n\t\n\tvar _dropdown2 = _interopRequireDefault(_dropdown);\n\t\n\tvar _card = __webpack_require__(19);\n\t\n\tvar _card2 = _interopRequireDefault(_card);\n\t\n\tvar _numberInput = __webpack_require__(20);\n\t\n\tvar _numberInput2 = _interopRequireDefault(_numberInput);\n\t\n\tvar _table = __webpack_require__(21);\n\t\n\tvar _table2 = _interopRequireDefault(_table);\n\t\n\tvar _detailPageHeader = __webpack_require__(22);\n\t\n\tvar _detailPageHeader2 = _interopRequireDefault(_detailPageHeader);\n\t\n\tvar _leftNav = __webpack_require__(24);\n\t\n\tvar _leftNav2 = _interopRequireDefault(_leftNav);\n\t\n\tvar _unifiedHeader = __webpack_require__(25);\n\t\n\tvar _unifiedHeader2 = _interopRequireDefault(_unifiedHeader);\n\t\n\tvar _inlineLeftNav = __webpack_require__(26);\n\t\n\tvar _inlineLeftNav2 = _interopRequireDefault(_inlineLeftNav);\n\t\n\tvar _profileSwitcher = __webpack_require__(27);\n\t\n\tvar _profileSwitcher2 = _interopRequireDefault(_profileSwitcher);\n\t\n\tvar _searchWithOptions = __webpack_require__(28);\n\t\n\tvar _searchWithOptions2 = _interopRequireDefault(_searchWithOptions);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// ====================//\n\t// Imports and Exports //\n\t// ====================//\n\t\n\t// Polyfills\n\t// -------------\n\t\n\t\n\tvar settings = {};\n\t\n\t/**\n\t * This module is used for the following purposes:\n\t * 1. Export ES2015 classes as modules (used with base-elements and components)\n\t * 2. Build an ES5-compatible files for prototyping.\n\t *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n\t * @exports BluemixComponents\n\t * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n\t * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n\t */\n\t\n\t\n\t// Base Elements & Components\n\t// -------------\n\t// - JavaScript classes for use with components and base-elements.\n\t// - The following statements import classes from actual locations to\n\t//   be consumed from this file instead of their actual locations.\n\texports.\n\t/**\n\t * Settings.\n\t * @type Object\n\t * @property {boolean} [disableAutoInit]\n\t *   Disables automatic instantiation of components.\n\t *   By default (`BluemixComponents.disableAutoInit` is `false`),\n\t *   bluemix-components attempts to instantiate components automatically\n\t *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n\t *   or upon DOM events (e.g. clicking) on such elements.\n\t *   See each components' static `.init()` methods for details.\n\t */\n\tsettings = settings;\n\texports.\n\t\n\t/**\n\t * Floating action button.\n\t * @type FabButton\n\t */\n\tFabButton = _fab2.default;\n\texports.\n\t\n\t/**\n\t * File uploader.\n\t * @type FileUploader\n\t */\n\tFileUploader = _fileUploader2.default;\n\texports.\n\t\n\t/**\n\t * Content switcher.\n\t * @type ContentSwitcher\n\t */\n\tContentSwitcher = _contentSwitcher2.default;\n\texports.\n\t\n\t/**\n\t * Container of tabs.\n\t * @type Tab\n\t */\n\tTab = _tabs2.default;\n\texports.\n\t\n\t/**\n\t * Overflow menu.\n\t * @type OverflowMenu\n\t */\n\tOverflowMenu = _overflowMenu2.default;\n\texports.\n\t\n\t/**\n\t * Modal dialog.\n\t * @type Modal\n\t */\n\tModal = _modals2.default;\n\texports.\n\t\n\t/**\n\t * Header with taxonomy menu.\n\t * @type HeaderNav\n\t */\n\tHeaderNav = _header2.default;\n\texports.\n\t\n\t/**\n\t * Left Navigation Menu\n\t * @type LeftNav\n\t */\n\tLeftNav = _leftNav2.default;\n\texports.\n\t\n\t/**\n\t * Search button in tool bar.\n\t * @type Toolbars\n\t */\n\tToolbars = _toolbars2.default;\n\texports.\n\t\n\t/**\n\t * Spinner indicating loading state.\n\t * @type Loading\n\t */\n\tLoading = _loading2.default;\n\texports.\n\t\n\t/**\n\t * A selector with drop downs.\n\t * @type Dropdown\n\t */\n\tDropdown = _dropdown2.default;\n\texports.\n\t\n\t/**\n\t * The container for cards.\n\t * @type Card\n\t */\n\tCard = _card2.default;\n\texports.\n\t\n\t/**\n\t * Number input UI.\n\t * @type NumberInput\n\t */\n\tNumberInput = _numberInput2.default;\n\texports.\n\t\n\t/**\n\t * Data table.\n\t * @type Table\n\t */\n\tTable = _table2.default;\n\texports.\n\t\n\t/**\n\t * Detail page header.\n\t * @type DetailPageHeader\n\t */\n\tDetailPageHeader = _detailPageHeader2.default;\n\texports.\n\t\n\t/**\n\t * Profile Switcher.\n\t * @type ProfileSwitcher\n\t */\n\tProfileSwitcher = _profileSwitcher2.default;\n\t\n\t/**\n\t * Instantiates components automatically\n\t * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n\t * or upon DOM events (e.g. clicking) on such elements.\n\t * See each components' static `.init()` methods for details.\n\t *\n\t * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n\t *\n\t * @private\n\t */\n\t\n\tvar init = function init() {\n\t  if (!settings.disableAutoInit) {\n\t    _fab2.default.init();\n\t    _fileUploader2.default.init();\n\t    _contentSwitcher2.default.init();\n\t    _tabs2.default.init();\n\t    _overflowMenu2.default.init();\n\t    _modals2.default.init();\n\t    _toolbars2.default.init();\n\t    _loading2.default.init();\n\t    _dropdown2.default.init();\n\t    _card2.default.init();\n\t    _numberInput2.default.init();\n\t    _table2.default.init();\n\t    _detailPageHeader2.default.init();\n\t    _leftNav2.default.init();\n\t    _unifiedHeader2.default.init();\n\t    _inlineLeftNav2.default.init();\n\t    _profileSwitcher2.default.init();\n\t    _searchWithOptions2.default.init();\n\t  }\n\t};\n\t\n\tif (document.readyState === 'loading') {\n\t  document.addEventListener('DOMContentLoaded', init);\n\t} else {\n\t  // DOMContentLoaded has been fired already\n\t  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n\t  setTimeout(init, 0);\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * @copyright Copyright (c) 2016 IcoMoon.io\n\t * @license   Licensed under MIT license\n\t *            See https://github.com/Keyamoon/svgxuse\n\t * @version   1.1.16\n\t */\n\t/*jslint browser: true */\n\t/*global XDomainRequest, MutationObserver, window */\n\t(function () {\n\t    'use strict';\n\t    if (window && window.addEventListener) {\n\t        var cache = Object.create(null); // holds xhr objects to prevent multiple requests\n\t        var checkUseElems,\n\t            tid; // timeout id\n\t        var debouncedCheck = function () {\n\t            clearTimeout(tid);\n\t            tid = setTimeout(checkUseElems, 100);\n\t        };\n\t        var unobserveChanges = function () {\n\t            return;\n\t        };\n\t        var observeChanges = function () {\n\t            var observer;\n\t            window.addEventListener('resize', debouncedCheck, false);\n\t            window.addEventListener('orientationchange', debouncedCheck, false);\n\t            if (window.MutationObserver) {\n\t                observer = new MutationObserver(debouncedCheck);\n\t                observer.observe(document.documentElement, {\n\t                    childList: true,\n\t                    subtree: true,\n\t                    attributes: true\n\t                });\n\t                unobserveChanges = function () {\n\t                    try {\n\t                        observer.disconnect();\n\t                        window.removeEventListener('resize', debouncedCheck, false);\n\t                        window.removeEventListener('orientationchange', debouncedCheck, false);\n\t                    } catch (ignore) {}\n\t                };\n\t            } else {\n\t                document.documentElement.addEventListener('DOMSubtreeModified', debouncedCheck, false);\n\t                unobserveChanges = function () {\n\t                    document.documentElement.removeEventListener('DOMSubtreeModified', debouncedCheck, false);\n\t                    window.removeEventListener('resize', debouncedCheck, false);\n\t                    window.removeEventListener('orientationchange', debouncedCheck, false);\n\t                };\n\t            }\n\t        };\n\t        var xlinkNS = 'http://www.w3.org/1999/xlink';\n\t        checkUseElems = function () {\n\t            var base,\n\t                bcr,\n\t                fallback = '', // optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n\t                hash,\n\t                i,\n\t                Request,\n\t                inProgressCount = 0,\n\t                isHidden,\n\t                url,\n\t                uses,\n\t                xhr;\n\t            if (window.XMLHttpRequest) {\n\t                Request = new XMLHttpRequest();\n\t                if (Request.withCredentials !== undefined) {\n\t                    Request = XMLHttpRequest;\n\t                } else {\n\t                    Request = XDomainRequest || undefined;\n\t                }\n\t            }\n\t            if (Request === undefined) {\n\t                return;\n\t            }\n\t            function observeIfDone() {\n\t                // If done with making changes, start watching for chagnes in DOM again\n\t                inProgressCount -= 1;\n\t                if (inProgressCount === 0) { // if all xhrs were resolved\n\t                    observeChanges(); // watch for changes to DOM\n\t                }\n\t            }\n\t            function attrUpdateFunc(spec) {\n\t                return function () {\n\t                    if (cache[spec.base] !== true) {\n\t                        spec.useEl.setAttributeNS(xlinkNS, 'xlink:href', '#' + spec.hash);\n\t                    }\n\t                };\n\t            }\n\t            function onloadFunc(xhr) {\n\t                return function () {\n\t                    var body = document.body;\n\t                    var x = document.createElement('x');\n\t                    var svg;\n\t                    xhr.onload = null;\n\t                    x.innerHTML = xhr.responseText;\n\t                    svg = x.getElementsByTagName('svg')[0];\n\t                    if (svg) {\n\t                        svg.setAttribute('aria-hidden', 'true');\n\t                        svg.style.position = 'absolute';\n\t                        svg.style.width = 0;\n\t                        svg.style.height = 0;\n\t                        svg.style.overflow = 'hidden';\n\t                        body.insertBefore(svg, body.firstChild);\n\t                    }\n\t                    observeIfDone();\n\t                };\n\t            }\n\t            function onErrorTimeout(xhr) {\n\t                return function () {\n\t                    xhr.onerror = null;\n\t                    xhr.ontimeout = null;\n\t                    observeIfDone();\n\t                };\n\t            }\n\t            unobserveChanges(); // stop watching for changes to DOM\n\t            // find all use elements\n\t            uses = document.getElementsByTagName('use');\n\t            for (i = 0; i < uses.length; i += 1) {\n\t                try {\n\t                    bcr = uses[i].getBoundingClientRect();\n\t                } catch (ignore) {\n\t                    // failed to get bounding rectangle of the use element\n\t                    bcr = false;\n\t                }\n\t                url = uses[i].getAttributeNS(xlinkNS, 'href').split('#');\n\t                base = url[0];\n\t                hash = url[1];\n\t                isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n\t                if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n\t                    // the use element is empty\n\t                    // if there is a reference to an external SVG, try to fetch it\n\t                    // use the optional fallback URL if there is no reference to an external SVG\n\t                    if (fallback && !base.length && hash && !document.getElementById(hash)) {\n\t                        base = fallback;\n\t                    }\n\t                    if (base.length) {\n\t                        // schedule updating xlink:href\n\t                        xhr = cache[base];\n\t                        if (xhr !== true) {\n\t                            // true signifies that prepending the SVG was not required\n\t                            setTimeout(attrUpdateFunc({\n\t                                useEl: uses[i],\n\t                                base: base,\n\t                                hash: hash\n\t                            }), 0);\n\t                        }\n\t                        if (xhr === undefined) {\n\t                            xhr = new Request();\n\t                            cache[base] = xhr;\n\t                            xhr.onload = onloadFunc(xhr);\n\t                            xhr.onerror = onErrorTimeout(xhr);\n\t                            xhr.ontimeout = onErrorTimeout(xhr);\n\t                            xhr.open('GET', base);\n\t                            xhr.send();\n\t                            inProgressCount += 1;\n\t                        }\n\t                    }\n\t                } else {\n\t                    if (!isHidden) {\n\t                        if (cache[base] === undefined) {\n\t                            // remember this URL if the use element was not empty and no request was sent\n\t                            cache[base] = true;\n\t                        } else if (cache[base].onload) {\n\t                            // if it turns out that prepending the SVG is not necessary,\n\t                            // abort the in-progress xhr.\n\t                            cache[base].abort();\n\t                            cache[base].onload = undefined;\n\t                            cache[base] = true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            uses = '';\n\t            inProgressCount += 1;\n\t            observeIfDone();\n\t        };\n\t        // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n\t        window.addEventListener('load', function winLoad() {\n\t            window.removeEventListener('load', winLoad, false); // to prevent memory leaks\n\t            tid = setTimeout(checkUseElems, 0);\n\t        }, false);\n\t    }\n\t}());\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FileUploader = function () {\n\t  /**\n\t   * File uploader.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a file uploader.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n\t   */\n\t\n\t  function FileUploader(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, FileUploader);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    var labelSelector = options.labelSelector || element.dataset.label;\n\t    this.labelNode = element.parentNode.querySelector(labelSelector) || element.nextElementSibling;\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    element.addEventListener('change', function (event) {\n\t      return _this.updateLabel(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates file uploader of the given element.\n\t   * @param {HTMLElement} element The element working as a file uploader.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n\t   */\n\t\n\t\n\t  _createClass(FileUploader, [{\n\t    key: 'updateLabel',\n\t\n\t\n\t    /**\n\t     * Updates the label for the file name upon file selection.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function updateLabel(event) {\n\t      var fileName = '';\n\t      var element = this.element;\n\t\n\t      if (element.files && element.files.length > 1) {\n\t        fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n\t      } else {\n\t        fileName = event.target.value.split('\\\\').pop();\n\t      }\n\t\n\t      if (fileName) {\n\t        this.labelNode.textContent = fileName;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates file uploader in the given node.\n\t     * If the given element indicates that it's an file uploader (having `data-file-uploader` attribute), instantiates it.\n\t     * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n\t     * @param {HTMLElement} element The element working as a file uploader.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fileInput !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-file-uploader]'))).forEach(function (element) {\n\t          return _this2.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return FileUploader;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} FileUploader#options\n\t * @property {string} [labelSelector] The CSS selector to find the label for the file name.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and file uploader instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = FileUploader;\n\tFileUploader.components = new WeakMap();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tvar _on = __webpack_require__(5);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FabButton = function () {\n\t  /**\n\t   * Floating action button.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a floting action button.\n\t   */\n\t\n\t  function FabButton(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, FabButton);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    element.addEventListener('click', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates floating action buttons in the given element.\n\t   * If the given element indicates that it's an floating action button (having `data-fab` attribute), instantiates it.\n\t   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n\t   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n\t   * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t   */\n\t\n\t\n\t  _createClass(FabButton, [{\n\t    key: 'toggle',\n\t\n\t\n\t    /**\n\t     * Toggles this floating action button.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function toggle(event) {\n\t      if (this.element.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      if (this.element.dataset.state === 'closed') {\n\t        this.element.dataset.state = 'open';\n\t      } else {\n\t        this.element.dataset.state = 'closed';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates floating action button of the given element.\n\t     * @param {HTMLElement} element The element.\n\t     */\n\t\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fab !== undefined) {\n\t        this.create(target);\n\t      } else {\n\t        return (0, _on2.default)(target, 'click', function (event) {\n\t          var element = (0, _eventMatches2.default)(event, '[data-fab]');\n\t          if (element && !_this2.components.has(element)) {\n\t            _this2.create(element).toggle(event);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t  }]);\n\t\n\t  return FabButton;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and floating action button instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = FabButton;\n\tFabButton.components = new WeakMap();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = eventMatches;\n\tvar matchesFuncName = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'].filter(function (name) {\n\t  return typeof document.documentElement[name] === 'function';\n\t})[0];\n\t\n\tfunction eventMatches(event, selector) {\n\t  // <svg> in IE does not have `Element#msMatchesSelector()`.\n\t  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n\t  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n\t  if (typeof event.target[matchesFuncName] === 'function') {\n\t    if (event.target[matchesFuncName](selector)) {\n\t      // If event target itself matches the given selector, return it\n\t      return event.target;\n\t    } else if (event.target[matchesFuncName](selector + ' *')) {\n\t      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n\t      for (var traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n\t        if (traverse[matchesFuncName](selector)) {\n\t          return traverse;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = on;\n\tfunction on(element) {\n\t  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    args[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  element.addEventListener.apply(element, args);\n\t  return {\n\t    release: function release() {\n\t      element.removeEventListener.apply(element, args);\n\t      return null;\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\tvar _toggleClass = __webpack_require__(9);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ContentSwitcher = function () {\n\t  /**\n\t   * Set of content switcher buttons.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a switcher button is selected.\n\t   *   Cancellation of this event stops selection of content switcher button.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t   */\n\t\n\t  function ContentSwitcher(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, ContentSwitcher);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorButton: 'input[type=\"radio\"], .bx--content-switcher__btn',\n\t      selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n\t      classActive: 'bx--content-switcher--selected',\n\t      eventBeforeSelected: 'content-switcher-beingselected',\n\t      eventAfterSelected: 'content-switcher-selected'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t\n\t    [].concat(_toConsumableArray(element.querySelectorAll('input'))).forEach(function (input) {\n\t      if (input.checked) _this._changeActive(input);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a set of content switcher buttons of the given element.\n\t   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a switcher button is selected.\n\t   *   Cancellation of this event stops selection of content switcher button.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t   */\n\t\n\t\n\t  _createClass(ContentSwitcher, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Handles click on content switcher button set.\n\t     * If the click is on a content switcher button, activates it.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var button = (0, _eventMatches2.default)(event, this.options.selectorButton);\n\t\n\t      if (button) {\n\t        this.setActive(button);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n\t     * @private\n\t     * @param {HTMLElement} item The button to be selected.\n\t     */\n\t\n\t  }, {\n\t    key: '_changeActive',\n\t    value: function _changeActive(item) {\n\t      var _this2 = this;\n\t\n\t      // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n\t      var itemLink = item.querySelector(this.options.selectorLink);\n\t      if (itemLink) {\n\t        [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLink))).forEach(function (link) {\n\t          if (link !== itemLink) {\n\t            link.setAttribute('aria-selected', 'false');\n\t          }\n\t        });\n\t        itemLink.setAttribute('aria-selected', 'true');\n\t      }\n\t\n\t      var selectorButtons = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorButton)));\n\t\n\t      selectorButtons.forEach(function (button) {\n\t        if (button !== item) {\n\t          (0, _toggleClass2.default)(button, _this2.options.classActive, false);\n\t          [].concat(_toConsumableArray(button.ownerDocument.querySelectorAll(button.dataset.target))).forEach(function (element) {\n\t            return element.setAttribute('hidden', '');\n\t          });\n\t        }\n\t      });\n\t\n\t      (0, _toggleClass2.default)(item, this.options.classActive, true);\n\t      [].concat(_toConsumableArray(item.ownerDocument.querySelectorAll(item.dataset.target))).forEach(function (element) {\n\t        return element.removeAttribute('hidden');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n\t     * @typedef {Object} ContentSwitcher~cancelError\n\t     * @property {boolean} canceled `true` always.\n\t     * @property {boolean} item The content switcher button that was about to be selected.\n\t     */\n\t\n\t    /**\n\t     * The callback called once switching is finished or is canceled.\n\t     * @callback ContentSwitcher~setActiveCallback\n\t     * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n\t     * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n\t     */\n\t\n\t    /**\n\t     * Selects a content switcher button.\n\t     * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n\t     * DOM elements associated with unselected buttons in the same way will be hidden.\n\t     * @param {HTMLElement} item The button to be selected.\n\t     * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'setActive',\n\t    value: function setActive(item, callback) {\n\t      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { item: item }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeActive(item);\n\t        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { item: item }\n\t        }));\n\t        if (callback) {\n\t          callback(null, item);\n\t        }\n\t      } else {\n\t        var error = new Error('Switching active item has been canceled.');\n\t        error.canceled = true;\n\t        error.item = item;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates content switcher button sets in the given node.\n\t     * If the given element indicates that it's an content switcher button set (having `data-content-switcher` attribute), instantiates it.\n\t     * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n\t     * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t     * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t     * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a switcher button is selected.\n\t     *   Cancellation of this event stops selection of content switcher button.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.contentSwitcher !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(document.querySelectorAll('[data-content-switcher]'))).forEach(function (element) {\n\t          return _this3.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ContentSwitcher;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} ContentSwitcher#options\n\t * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n\t * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t * @property {string} [classActive] The CSS class for switcher button's selected state.\n\t * @property {string} [eventBeforeSelected]\n\t *   The name of the custom event fired before a switcher button is selected.\n\t *   Cancellation of this event stops selection of content switcher button.\n\t * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and content switcher set instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = ContentSwitcher;\n\tContentSwitcher.components = new WeakMap();\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tArray.from = Array.from || function fromArray(a) {\n\t  return Array.prototype.slice.call(a);\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.assign = Object.assign || function assignObject(inDst) {\n\t  if (inDst == null) {\n\t    // eslint-disable-line eqeqeq\n\t    // Throw if the given destination is null or undefined\n\t    throw new TypeError('Can\\'t convert to object: ${dst}');\n\t  }\n\t\n\t  var dst = Object(inDst);\n\t\n\t  [].concat(Array.prototype.slice.call(arguments)).slice(1).forEach(function (src) {\n\t    Object.keys(src).forEach(function (prop) {\n\t      dst[prop] = src[prop];\n\t    });\n\t  });\n\t\n\t  return dst;\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = toggleClass;\n\tfunction toggleClass(element, name, add) {\n\t  if (element.classList.contains(name) === !add) {\n\t    element.classList[add ? 'add' : 'remove'](name);\n\t  }\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(11);\n\t\n\t__webpack_require__(8);\n\t\n\tvar _contentSwitcher = __webpack_require__(6);\n\t\n\tvar _contentSwitcher2 = _interopRequireDefault(_contentSwitcher);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Tab = function (_ContentSwitcher) {\n\t  _inherits(Tab, _ContentSwitcher);\n\t\n\t  /**\n\t   * Container of tabs.\n\t   * @extends ContentSwitcher\n\t   * @param {HTMLElement} element The element working as a container of tabs.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n\t   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n\t   * @param {string} [options.classActive] The CSS class for tab's selected state.\n\t   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a tab is selected.\n\t   *   Cancellation of this event stops selection of tab.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t   */\n\t\n\t  function Tab(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Tab);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Tab).call(this, element, Object.assign({\n\t      selectorMenu: '.bx--tabs__nav',\n\t      selectorTrigger: '.bx--tabs__trigger',\n\t      selectorTriggerText: '.bx--tabs__trigger-text',\n\t      selectorButton: '.bx--tabs__nav-item',\n\t      selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n\t      selectorLink: '.bx--tabs__nav-link',\n\t      classActive: 'bx--tabs--selected',\n\t      classHidden: 'bx--tabs--hidden',\n\t      eventBeforeSelected: 'tab-beingselected',\n\t      eventAfterSelected: 'tab-selected'\n\t    }, options)));\n\t\n\t    _this.element.addEventListener('keydown', function (event) {\n\t      return _this.handleKeyDown(event);\n\t    });\n\t\n\t    var selected = _this.element.querySelector(_this.options.selectorButtonSelected);\n\t    if (selected) {\n\t      _this.updateTriggerText(selected);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Instantiates tab containers in the given node.\n\t   * If the given element indicates that it's an tab container (having `data-tabs` attribute), instantiates it.\n\t   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n\t   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n\t   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n\t   * @param {string} [options.classActive] The CSS class for tab's selected state.\n\t   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a tab is selected.\n\t   *   Cancellation of this event stops selection of tab.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t   */\n\t\n\t\n\t  _createClass(Tab, [{\n\t    key: '_changeActive',\n\t    value: function _changeActive(item) {\n\t      _get(Object.getPrototypeOf(Tab.prototype), '_changeActive', this).call(this, item);\n\t      this.updateTriggerText(item);\n\t    }\n\t\n\t    /**\n\t     * Handles click on tab container.\n\t     * * If the click is on a tab, activates it.\n\t     * * If the click is on the button to open the drop down menu, does so.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleClick',\n\t    value: function handleClick(event) {\n\t      _get(Object.getPrototypeOf(Tab.prototype), 'handleClick', this).call(this, event);\n\t      var button = (0, _eventMatches2.default)(event, this.options.selectorButton);\n\t      var trigger = (0, _eventMatches2.default)(event, this.options.selectorTrigger);\n\t      if (button) {\n\t        _get(Object.getPrototypeOf(Tab.prototype), 'handleClick', this).call(this, event);\n\t        this.updateMenuState();\n\t      }\n\t      if (trigger) {\n\t        this.updateMenuState();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles arrow keys on tab container.\n\t     * * Up/Left keys are used to go to previous tab.\n\t     * * Down/Right keys are used to go to next tab.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleKeyDown',\n\t    value: function handleKeyDown(event) {\n\t      var _this2 = this;\n\t\n\t      var triggerNode = this.element.querySelector(this.options.selectorTrigger);\n\t      if (triggerNode && triggerNode.offsetParent) {\n\t        return;\n\t      }\n\t\n\t      var direction = {\n\t        Left: -1,\n\t        Right: 1,\n\t        ArrowLeft: -1,\n\t        ArrowRight: 1\n\t      }[event.key || event.keyIdentifier];\n\t\n\t      if (direction) {\n\t        var buttons = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorButton)));\n\t        var button = this.element.querySelector(this.options.selectorButtonSelected);\n\t        var nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n\t        var nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex : nextIndex - Math.sign(nextIndex) * buttons.length;\n\t        this.setActive(buttons[nextIndexLooped], function (error, item) {\n\t          if (item) {\n\t            var link = item.querySelector(_this2.options.selectorLink);\n\t            if (link) {\n\t              link.focus();\n\t            }\n\t          }\n\t        });\n\t        event.preventDefault();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Shows/hides the drop down menu used in narrow mode.\n\t     */\n\t\n\t  }, {\n\t    key: 'updateMenuState',\n\t    value: function updateMenuState() {\n\t      this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n\t    }\n\t\n\t    /**\n\t     * Updates the text indicating the currently selected tab item.\n\t     * @param {HTMLElement} target The newly selected tab item.\n\t     */\n\t\n\t  }, {\n\t    key: 'updateTriggerText',\n\t    value: function updateTriggerText(target) {\n\t      this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n\t    }\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-tabs]'))).forEach(function (element) {\n\t          return _this3.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Tab;\n\t}(_contentSwitcher2.default);\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Tab#options\n\t * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t * @property {string} [selectorButton] The CSS selector to find tab containers.\n\t * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n\t * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n\t * @property {string} [classActive] The CSS class for tab's selected state.\n\t * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t * @property {string} [eventBeforeSelected]\n\t *   The name of the custom event fired before a tab is selected.\n\t *   Cancellation of this event stops selection of tab.\n\t * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and tab container instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Tab;\n\tTab.components = new WeakMap();\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tMath.sign = Math.sign || function sign(x) {\n\t  var n = +x;\n\t  return n === 0 ? n : n / Math.abs(n);\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\tvar _toggleClass = __webpack_require__(9);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _on = __webpack_require__(5);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OverflowMenu = function () {\n\t  function OverflowMenu(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, OverflowMenu);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    /**\n\t     * The handle to release click event listener on document object.\n\t     * @member {Handle}\n\t     */\n\t    this.hDocumentClick = (0, _on2.default)(this.element.ownerDocument, 'click', function (event) {\n\t      return _this.handleDocumentClick(event);\n\t    });\n\t\n\t    /**\n\t     * The handle to release keypress event listener on document object.\n\t     * @member {Handle}\n\t     */\n\t    this.hDocumentKeyPress = (0, _on2.default)(this.element.ownerDocument, 'keypress', function (event) {\n\t      return _this.handleKeyPress(event);\n\t    });\n\t  }\n\t\n\t  _createClass(OverflowMenu, [{\n\t    key: 'handleDocumentClick',\n\t    value: function handleDocumentClick(event) {\n\t      var isOfSelf = this.element.contains(event.target);\n\t      var shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\t\n\t      if (isOfSelf && this.element.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      (0, _toggleClass2.default)(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n\t    }\n\t  }, {\n\t    key: 'handleKeyPress',\n\t    value: function handleKeyPress(event) {\n\t      var key = event.key || event.which;\n\t      if (key === 'Enter' || key === 13) {\n\t        var isOfSelf = this.element.contains(event.target);\n\t        var shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\t\n\t        if (isOfSelf && this.element.tagName === 'A') {\n\t          event.preventDefault();\n\t        }\n\t\n\t        (0, _toggleClass2.default)(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.hDocumentClick) {\n\t        this.hDocumentClick = this.hDocumentClick.release();\n\t      }\n\t      if (this.hDocumentKeyPress) {\n\t        this.hDocumentKeyPress = this.hDocumentKeyPress.release();\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.overflowMenu !== undefined) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-overflow-menu]'))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return OverflowMenu;\n\t}();\n\t\n\texports.default = OverflowMenu;\n\t\n\t\n\tOverflowMenu.components = new WeakMap();\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(14);\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tvar _toggleClass = __webpack_require__(9);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _on = __webpack_require__(5);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * @param {Element} element The element to obtain transition duration from.\n\t * @returns {number} The transition duration of the given property set in the given element.\n\t */\n\tfunction getTransitionDuration(element) {\n\t  var computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n\t  var durations = computedStyle.transitionDuration.split(/,\\s*/).map(function (transitionDuration) {\n\t    return parseFloat(transitionDuration);\n\t  }).filter(function (duration) {\n\t    return !isNaN(duration);\n\t  });\n\t  return durations.length > 0 ? Math.max.apply(Math, _toConsumableArray(durations)) : 0;\n\t}\n\t\n\tvar Modal = function () {\n\t  /**\n\t   * Modal dialog.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a modal dialog.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.classVisible] The CSS class for the visible state.\n\t   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this modal is shown.\n\t   *   Cancellation of this event stops showing the modal.\n\t   * @param {string} [options.eventAfterShown]\n\t   *   The name of the custom event telling that modal is sure shown\n\t   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this modal is hidden.\n\t   *   Cancellation of this event stops hiding the modal.\n\t   * @param {string} [options.eventAfterHidden]\n\t   *   The name of the custom event telling that modal is sure hidden\n\t   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n\t   */\n\t\n\t  function Modal(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Modal);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      classVisible: 'is-visible',\n\t      classNoScroll: 'bx--noscroll',\n\t      eventBeforeShown: 'modal-beingshown',\n\t      eventAfterShown: 'modal-shown',\n\t      eventBeforeHidden: 'modal-beinghidden',\n\t      eventAfterHidden: 'modal-hidden'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.hookCloseActions();\n\t  }\n\t\n\t  /**\n\t   * Instantiates modal dialog of the given element.\n\t   * @param {HTMLElement} element The element working as a modal dialog.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.classVisible] The CSS class for the visible state.\n\t   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this modal is shown.\n\t   *   Cancellation of this event stops showing the modal.\n\t   * @param {string} [options.eventAfterShown]\n\t   *   The name of the custom event telling that modal is sure shown\n\t   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this modal is hidden.\n\t   *   Cancellation of this event stops hiding the modal.\n\t   * @param {string} [options.eventAfterHidden]\n\t   *   The name of the custom event telling that modal is sure hidden\n\t   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n\t   */\n\t\n\t\n\t  _createClass(Modal, [{\n\t    key: 'hookCloseActions',\n\t\n\t\n\t    /**\n\t     * Adds event listeners for closing this dialog.\n\t     */\n\t    value: function hookCloseActions() {\n\t      var _this = this;\n\t\n\t      this.element.addEventListener('click', function (event) {\n\t        if (event.currentTarget === event.target) _this.hide(event);\n\t      });\n\t\n\t      if (this.keydownHandler) {\n\t        this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n\t        this.keydownHandler = null;\n\t      }\n\t\n\t      this.keydownHandler = function (event) {\n\t        if (event.which === 27) {\n\t          _this.hide(event);\n\t        }\n\t      };\n\t\n\t      this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\t\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll('[data-modal-close]'))).forEach(function (element) {\n\t        element.addEventListener('click', function (event) {\n\t          _this.hide(event);\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n\t     * @private\n\t     * @param {boolean} visible `true` to make this modal dialog visible.\n\t     * @param {Function} callback Callback called when change in state completes.\n\t     */\n\t\n\t  }, {\n\t    key: '_changeState',\n\t    value: function _changeState(visible, callback) {\n\t      var _this2 = this;\n\t\n\t      var finished = void 0;\n\t      var finishedTransition = function finishedTransition() {\n\t        if (!finished) {\n\t          finished = true;\n\t          _this2.element.removeEventListener('transitionend', finishedTransition);\n\t          callback();\n\t        }\n\t      };\n\t\n\t      this.element.addEventListener('transitionend', finishedTransition);\n\t      var transitionDuration = getTransitionDuration(this.element);\n\t      (0, _toggleClass2.default)(this.element, this.options.classVisible, visible);\n\t      (0, _toggleClass2.default)(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n\t      if (transitionDuration === 0) {\n\t        finishedTransition();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The callback called once showing/hiding this dialog is finished or is canceled.\n\t     * @callback Modal~stateChangeCallback\n\t     * @param {Error} error\n\t     *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n\t     *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n\t     *   calls `.preventDefault()` against the event.\n\t     * @param {boolean} newState The new toggle state.\n\t     */\n\t\n\t    /**\n\t     * Shows this modal dialog.\n\t     * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n\t     * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'show',\n\t    value: function show(launchingElementOrEvent, callback) {\n\t      var _this3 = this;\n\t\n\t      var launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n\t      if (launchingElementOrEventOmitted) {\n\t        callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n\t      }\n\t\n\t      var launchingElement = launchingElementOrEventOmitted ? null : launchingElementOrEvent.delegateTarget || launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\t\n\t      var launchingEvent = launchingElementOrEventOmitted ? null : launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\t\n\t      if (launchingElement && !launchingElement.nodeType) {\n\t        throw new TypeError('DOM Node should be given for launching element.');\n\t      }\n\t\n\t      if (launchingEvent && !launchingEvent.type) {\n\t        throw new TypeError('DOM event should be given for launching event.');\n\t      }\n\t\n\t      if (this.element.classList.contains(this.options.classVisible)) {\n\t        if (callback) {\n\t          callback(null, true);\n\t        }\n\t        return;\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options.eventBeforeShown, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: {\n\t          launchingElement: launchingElement,\n\t          launchingEvent: launchingEvent\n\t        }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeState(true, function () {\n\t          _this3.element.dispatchEvent(new CustomEvent(_this3.options.eventAfterShown, {\n\t            bubbles: true,\n\t            cancelable: true,\n\t            detail: {\n\t              launchingElement: launchingElement,\n\t              launchingEvent: launchingEvent\n\t            }\n\t          }));\n\t          if (callback) {\n\t            callback();\n\t          }\n\t        });\n\t      } else {\n\t        var error = new Error('Showing dialog has been canceled.');\n\t        error.canceled = true;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Hides this modal dialog.\n\t     * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'hide',\n\t    value: function hide(launchingElementOrEvent, callback) {\n\t      var _this4 = this;\n\t\n\t      var launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n\t      if (launchingElementOrEventOmitted) {\n\t        callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n\t      }\n\t\n\t      var launchingElement = launchingElementOrEventOmitted ? null : launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\t\n\t      var launchingEvent = launchingElementOrEventOmitted ? null : launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\t\n\t      if (launchingElement && !launchingElement.nodeType) {\n\t        throw new TypeError('DOM Node should be given for launching element.');\n\t      }\n\t\n\t      if (launchingEvent && !launchingEvent.type) {\n\t        throw new TypeError('DOM event should be given for launching event.');\n\t      }\n\t\n\t      if (!this.element.classList.contains(this.options.classVisible)) {\n\t        if (callback) {\n\t          callback(null, true);\n\t        }\n\t        return;\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: {\n\t          launchingElement: launchingElement,\n\t          launchingEvent: launchingEvent\n\t        }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeState(false, function () {\n\t          _this4.element.dispatchEvent(new CustomEvent(_this4.options.eventAfterHidden, {\n\t            bubbles: true,\n\t            cancelable: true,\n\t            detail: {\n\t              launchingElement: launchingElement,\n\t              launchingEvent: launchingEvent\n\t            }\n\t          }));\n\t          if (callback) {\n\t            callback();\n\t          }\n\t        });\n\t      } else {\n\t        var error = new Error('Hiding dialog has been canceled.');\n\t        error.canceled = true;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.keydownHandler) {\n\t        this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n\t        this.keydownHandler = null;\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * @deprecated\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates modal dialogs in the given element.\n\t     * If the given element indicates that it's an modal dialog (having `data-modal` attribute), instantiates it.\n\t     * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n\t     * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n\t     * @implements Component\n\t     * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.classVisible] The CSS class for the visible state.\n\t     * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t     * @param {string} [options.eventBeforeShown]\n\t     *   The name of the custom event fired before this modal is shown.\n\t     *   Cancellation of this event stops showing the modal.\n\t     * @param {string} [options.eventAfterShown]\n\t     *   The name of the custom event telling that modal is sure shown\n\t     *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n\t     * @param {string} [options.eventBeforeHidden]\n\t     *   The name of the custom event fired before this modal is hidden.\n\t     *   Cancellation of this event stops hiding the modal.\n\t     * @param {string} [options.eventAfterHidden]\n\t     *   The name of the custom event telling that modal is sure hidden\n\t     *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n\t     * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this5 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.modal !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        return (0, _on2.default)(target, 'click', function (event) {\n\t          var element = (0, _eventMatches2.default)(event, '[data-modal-target]');\n\t\n\t          if (element) {\n\t            event.delegateTarget = element;\n\t\n\t            var modalElements = [].concat(_toConsumableArray(element.ownerDocument.querySelectorAll(element.dataset.modalTarget)));\n\t            if (modalElements.length > 1) {\n\t              throw new Error('Target modal must be unique.');\n\t            }\n\t\n\t            if (modalElements.length === 1) {\n\t              (function () {\n\t                if (element.tagName === 'A') {\n\t                  event.preventDefault();\n\t                }\n\t\n\t                var modal = _this5.create(modalElements[0], options);\n\t                modal.show(event, function (error, shownAlready) {\n\t                  if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n\t                    modal.element.focus();\n\t                  }\n\t                });\n\t              })();\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'hook',\n\t    value: function hook() {\n\t      console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Modal#options\n\t * @property {string} [classVisible] The CSS class for the visible state.\n\t * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t * @property {string} [eventBeforeShown]\n\t *   The name of the custom event fired before this modal is shown.\n\t *   Cancellation of this event stops showing the modal.\n\t * @property {string} [eventAfterShown]\n\t *   The name of the custom event telling that modal is sure shown\n\t *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n\t * @property {string} [eventBeforeHidden]\n\t *   The name of the custom event fired before this modal is hidden.\n\t *   Cancellation of this event stops hiding the modal.\n\t * @property {string} [eventAfterHidden]\n\t *   The name of the custom event telling that modal is sure hidden\n\t *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n\t */\n\t\n\t/**\n\t * The map associating DOM element and modal instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Modal;\n\tModal.components = new WeakMap();\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar missingNativeCustomEvent = function () {\n\t  try {\n\t    new CustomEvent('test-event'); // eslint-disable-line no-new\n\t  } catch (error) {\n\t    return true;\n\t  }\n\t}();\n\tif (missingNativeCustomEvent) {\n\t  window.CustomEvent = function CustomEvent(type) {\n\t    var init = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    var event = document.createEvent('HTMLEvents');\n\t    event.initEvent(type, init.bubbles, init.cancelable);\n\t    if (init.detail) {\n\t      event.detail = init.detail;\n\t    }\n\t    return event;\n\t  };\n\t}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(14);\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HeaderNav = function () {\n\t  /**\n\t   * Header with taxonomy menu.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a taxonomy menu.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t   * @param {string} [options.classActive] The CSS class for the visible state.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this taxonomy menu is shown.\n\t   *   Cancellation of this event stops showing the taxonomy menu.\n\t   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this taxonomy menu is hidden.\n\t   *   Cancellation of this event stops hiding the taxonomy menu.\n\t   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a menu item is selected.\n\t   *   Cancellation of this event stops the selection.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t   */\n\t\n\t  function HeaderNav(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, HeaderNav);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorTriggerLabel: '.current-taxonomy',\n\t      classActive: 'taxonomy-nav--active',\n\t      selectorMenu: '.taxonomy-menu',\n\t      selectorItem: '.taxonomy-item',\n\t      selectorItemLink: '.taxonomy-item--taxonomy-menu',\n\t      selectorLabel: '.taxonomy-item__label',\n\t      eventBeforeShown: 'header-beingshown',\n\t      eventAfterShown: 'header-shown',\n\t      eventBeforeHidden: 'header-beinghidden',\n\t      eventAfterHidden: 'header-hidden',\n\t      eventBeforeSelected: 'header-beingselected',\n\t      eventAfterSelected: 'header-selected'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\t\n\t    this.element.addEventListener('keydown', function (event) {\n\t      return _this.toggleNav(event);\n\t    });\n\t\n\t    [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItemLink))).forEach(function (item) {\n\t      item.addEventListener('click', function (e) {\n\t        return _this.select(e);\n\t      });\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates taxonomy menus in the given element.\n\t   * If the given element indicates that it's an taxonomy menu (having `data-nav` attribute), instantiates it.\n\t   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n\t   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n\t   * @implements Component\n\t   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t   * @param {string} [options.classActive] The CSS class for the visible state.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this taxonomy menu is shown.\n\t   *   Cancellation of this event stops showing the taxonomy menu.\n\t   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this taxonomy menu is hidden.\n\t   *   Cancellation of this event stops hiding the taxonomy menu.\n\t   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a menu item is selected.\n\t   *   Cancellation of this event stops the selection.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t   * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t   */\n\t\n\t\n\t  _createClass(HeaderNav, [{\n\t    key: 'toggleNav',\n\t\n\t\n\t    /**\n\t     * Shows/hides this taxonomy menu.\n\t     * @param {Event} event The event triggering this function.\n\t     */\n\t    value: function toggleNav(event) {\n\t      var isActive = this.element.classList.contains(this.options.classActive);\n\t      var add = void 0;\n\t      if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n\t        // Toggle button or ESC key on nav\n\t        add = !isActive;\n\t      } else if (event.type === 'keydown' && event.which === 27) {\n\t        // Down arrow on launch button\n\t        add = false;\n\t      } else {\n\t        return;\n\t      }\n\t\n\t      var launchingElement = (0, _eventMatches2.default)(event, '[data-nav-target]') || event.currentTarget;\n\t      if (launchingElement.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { launchingElement: launchingElement }\n\t      });\n\t      var defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\t\n\t      if (add) {\n\t        this.triggerNode = launchingElement;\n\t        this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n\t      }\n\t\n\t      if (defaultNotPrevented) {\n\t        this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n\t        (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n\t        this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { launchingElement: launchingElement }\n\t        }));\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Selects a menu item.\n\t     * @param {Event} event The event triggering this function.\n\t     */\n\t\n\t  }, {\n\t    key: 'select',\n\t    value: function select(event) {\n\t      var activatedElement = event.currentTarget;\n\t      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: {\n\t          initiatingEvent: event,\n\t          itemElement: activatedElement\n\t        }\n\t      });\n\t\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItem))).forEach(function (element) {\n\t          if (element.contains(activatedElement)) {\n\t            element.classList.add('selected');\n\t          } else if (element.classList.contains('selected')) {\n\t            element.classList.remove('selected');\n\t          }\n\t        });\n\t        activatedElement.classList.add('selected');\n\t        if (this.triggerLabelNode) {\n\t          this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n\t        }\n\t        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { itemElement: activatedElement }\n\t        }));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * @deprecated\n\t     */\n\t\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.nav !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        var _ret = function () {\n\t          var handler = function handler(event) {\n\t            var element = (0, _eventMatches2.default)(event, '[data-nav-target]');\n\t\n\t            if (element) {\n\t              var headerElements = [].concat(_toConsumableArray(element.ownerDocument.querySelectorAll(element.dataset.navTarget)));\n\t              if (headerElements.length > 1) {\n\t                throw new Error('Target header must be unique.');\n\t              }\n\t\n\t              if (headerElements.length === 1) {\n\t                if (element.tagName === 'A') {\n\t                  event.preventDefault();\n\t                }\n\t                _this2.create(headerElements[0], options).toggleNav(event);\n\t              }\n\t            }\n\t          };\n\t\n\t          target.addEventListener('click', handler);\n\t          target.addEventListener('keydown', handler);\n\t\n\t          return {\n\t            v: {\n\t              release: function release() {\n\t                target.removeEventListener('keydown', handler);\n\t                target.removeEventListener('click', handler);\n\t              }\n\t            }\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Instantiates taxonomy menu of the given element.\n\t     * @param {HTMLElement} element The element working as a taxonomy menu.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t     * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t     * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t     * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t     * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t     * @param {string} [options.classActive] The CSS class for the visible state.\n\t     * @param {string} [options.eventBeforeShown]\n\t     *   The name of the custom event fired before this taxonomy menu is shown.\n\t     *   Cancellation of this event stops showing the taxonomy menu.\n\t     * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t     * @param {string} [options.eventBeforeHidden]\n\t     *   The name of the custom event fired before this taxonomy menu is hidden.\n\t     *   Cancellation of this event stops hiding the taxonomy menu.\n\t     * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a menu item is selected.\n\t     *   Cancellation of this event stops the selection.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t  }, {\n\t    key: 'hook',\n\t    value: function hook() {\n\t      console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n\t    }\n\t  }]);\n\t\n\t  return HeaderNav;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} HeaderNav#options\n\t * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n\t * @property {string} [selectorItem] The CSS selector to find the menu items.\n\t * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n\t * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n\t * @property {string} [classActive] The CSS class for the visible state.\n\t * @property {string} [eventBeforeShown]\n\t *   The name of the custom event fired before this taxonomy menu is shown.\n\t *   Cancellation of this event stops showing the taxonomy menu.\n\t * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t * @property {string} [eventBeforeHidden]\n\t *   The name of the custom event fired before this taxonomy menu is hidden.\n\t *   Cancellation of this event stops hiding the taxonomy menu.\n\t * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t * @property {string} [eventBeforeSelected]\n\t *   The name of the custom event fired before a menu item is selected.\n\t *   Cancellation of this event stops the selection.\n\t * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and taxonomy menu instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = HeaderNav;\n\tHeaderNav.components = new WeakMap();\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Toolbars = function () {\n\t  /**\n\t   * Search button in tool bar.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as an search button.\n\t   */\n\t\n\t  function Toolbars(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Toolbars);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleActionClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a search button of the given element.\n\t   * @param {HTMLElement} element The element working as a search button.\n\t   */\n\t\n\t\n\t  _createClass(Toolbars, [{\n\t    key: 'handleActionClick',\n\t\n\t\n\t    /**\n\t     * Show/hide search box.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleActionClick(event) {\n\t      var searchActionNode = event.currentTarget;\n\t\n\t      if (searchActionNode.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      this.element.classList.toggle('show-search');\n\t      if (this.searchFieldNode) {\n\t        this.searchFieldNode.classList.toggle('show-search');\n\t        this.searchFieldNode.value = '';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates search buttons in the given node.\n\t     * If the given element indicates that it's an search button (having `data-list-icons-search-action-target` attribute), instantiates it.\n\t     * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n\t     * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.listIconsSearchActionTarget !== undefined) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-list-icons-search-action-target]'))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Toolbars;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and search button instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Toolbars;\n\tToolbars.components = new WeakMap();\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _toggleClass = __webpack_require__(9);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Loading = function () {\n\t  /**\n\t   * Spinner indicating loading state.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a spinner.\n\t   * @param {Object} options The component options.\n\t   * @param {boolean} options.active `true` if this spinner should roll.\n\t   */\n\t\n\t  function Loading(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? { active: true } : arguments[1];\n\t\n\t    _classCallCheck(this, Loading);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.active = 'active' in options ? options.active : true;\n\t    this.ie = false;\n\t\n\t    // Check if browser is Internet Explorer\n\t    if (options.ie || window.ActiveXObject || 'ActiveXObject' in window) {\n\t      this.ie = true;\n\t      this.element.classList.add('bx--loading--ie');\n\t    }\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    // Initialize spinner\n\t    this.set(this.active);\n\t  }\n\t\n\t  /**\n\t   * Instantiates spinner of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(Loading, [{\n\t    key: 'set',\n\t\n\t\n\t    /**\n\t     * Sets active/inactive state.\n\t     * @param {boolean} active `true` if this spinner should roll.\n\t     */\n\t    value: function set(active) {\n\t      if (typeof active !== 'boolean') {\n\t        throw new TypeError('set expects a boolean.');\n\t      }\n\t\n\t      this.active = active;\n\t\n\t      if (this.ie) {\n\t        (0, _toggleClass2.default)(this.element, 'bx--loading--stop--ie', !this.active);\n\t      }\n\t      (0, _toggleClass2.default)(this.element, 'bx--loading--stop', !this.active);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Toggles active/inactive state.\n\t     * @param {boolean} active `true` if this spinner should roll.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      return this.set(!this.active);\n\t    }\n\t\n\t    /**\n\t     * @returns {boolean} `true` if this spinner is rolling roll.\n\t     */\n\t\n\t  }, {\n\t    key: 'isActive',\n\t    value: function isActive() {\n\t      return this.active;\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates spinner in the given node.\n\t     * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n\t     * Otherwise, instantiates spinners by searching for spinners in the given node.\n\t     * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-loading]'))).forEach(function (element) {\n\t          return _this.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Loading;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and spinner instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Loading;\n\tLoading.components = new WeakMap();\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(14);\n\t\n\tvar _on = __webpack_require__(5);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Dropdown = function () {\n\t  /**\n\t   * A selector with drop downs.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a selector.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a drop down item is selected.\n\t   *   Cancellation of this event stops selection of drop down item.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t   */\n\t\n\t  function Dropdown(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Dropdown);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorItem: '[data-option] > .bx--dropdown__link',\n\t      selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n\t      classSelected: 'bx--dropdown--selected',\n\t      eventBeforeSelected: 'dropdown-beingselected',\n\t      eventAfterSelected: 'dropdown-selected'\n\t    }, options);\n\t\n\t    if (this.element.dataset.dropdown !== 'navigation') {\n\t      this.element.dataset.dropdown = '';\n\t    }\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    /**\n\t     * The handle to release click event listener on document object.\n\t     * @member {Handle}\n\t     */\n\t    this.hDocumentClick = (0, _on2.default)(this.element.ownerDocument, 'click', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t\n\t    this.element.addEventListener('keypress', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.selected(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates selector of the given element.\n\t   * @param {HTMLElement} element The element working as a selector.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a drop down item is selected.\n\t   *   Cancellation of this event stops selection of drop down item.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t   */\n\t\n\t\n\t  _createClass(Dropdown, [{\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.hDocumentClick) {\n\t        this.hDocumentClick = this.hDocumentClick.release();\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * Opens and closes the dropdown menu.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle(event) {\n\t      if (event.which === 13 || event.type === 'click') {\n\t        var isOfSelf = this.element.contains(event.target);\n\t\n\t        if (isOfSelf) {\n\t          this.element.classList.toggle('bx--dropdown--open');\n\t        } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n\t          this.element.classList.remove('bx--dropdown--open');\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles clicking on the dropdown options, doing the following:\n\t     * * Change Dropdown text to selected option.\n\t     * * Remove selected option from options when selected.\n\t     * * Emit custom events.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'selected',\n\t    value: function selected(event) {\n\t      var _this2 = this;\n\t\n\t      var activatedElement = event.target;\n\t      if (activatedElement.parentElement.dataset.option !== undefined) {\n\t        var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { item: activatedElement }\n\t        });\n\t\n\t        if (this.element.dispatchEvent(eventStart)) {\n\t          if (this.element.dataset.dropdown !== 'navigation') {\n\t            this.element.firstElementChild.textContent = activatedElement.textContent;\n\t            activatedElement.classList.add(this.options.classSelected);\n\t          }\n\t          this.element.dataset.value = activatedElement.parentElement.dataset.value;\n\t          [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItemSelected))).forEach(function (item) {\n\t            if (activatedElement !== item) {\n\t              item.classList.remove(_this2.options.classSelected);\n\t            }\n\t          });\n\t\n\t          this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t            bubbles: true,\n\t            cancelable: true,\n\t            detail: { item: activatedElement }\n\t          }));\n\t        }\n\t      }\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates selectors in the given node.\n\t     * If the given element indicates that it's an selector (having `data-dropdown` attribute), instantiates it.\n\t     * Otherwise, instantiates selectors by searching for selectors in the given node.\n\t     * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t     * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t     * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a drop down item is selected.\n\t     *   Cancellation of this event stops selection of drop down item.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-dropdown]'))).forEach(function (element) {\n\t          return _this3.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Dropdown;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Dropdown#options\n\t * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t * @property {string} [classSelected] The CSS class for the selected dropdown item.\n\t * @property {string} [eventBeforeSelected]\n\t *   The name of the custom event fired before a drop down item is selected.\n\t *   Cancellation of this event stops selection of drop down item.\n\t * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and selector instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Dropdown;\n\tDropdown.components = new WeakMap();\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Card = function () {\n\t  /**\n\t   * The container for cards.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a container.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t   */\n\t\n\t  function Card(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Card);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t    this.options = Object.assign({\n\t      selectorCard: '.bx--card'\n\t    }, options);\n\t    this.constructor.components.set(this.element, this);\n\t    this.element.addEventListener('keydown', function (event) {\n\t      return _this.cardKeyPress(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates card container of the given element.\n\t   * @param {HTMLElement} element The element working as a container.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t   */\n\t\n\t\n\t  _createClass(Card, [{\n\t    key: 'cardKeyPress',\n\t\n\t\n\t    /**\n\t     * Goes back/forward among cards,\n\t     * right arrow key for going forward, left arrow key for going backward.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function cardKeyPress(event) {\n\t      var direction = {\n\t        Left: -1,\n\t        Right: 1,\n\t        ArrowLeft: -1,\n\t        ArrowRight: 1\n\t      }[event.key || event.keyIdentifier];\n\t      var card = (0, _eventMatches2.default)(event, this.options.selectorCard);\n\t\n\t      if (direction && card && card === document.activeElement) {\n\t        var cards = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorCard)));\n\t        var nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n\t        var nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex : nextIndex - Math.sign(nextIndex) * cards.length;\n\t        cards[nextIndexLooped].focus();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates card container in the given node.\n\t     * If the given element indicates that it's an card container (having `data-card-list` attribute), instantiates it.\n\t     * Otherwise, instantiates card containers by searching for card containers in the given node.\n\t     * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.cardList !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-card-list]'))).forEach(function (element) {\n\t          return _this2.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Card;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Card#options\n\t * @property {string} [selectorCard] The CSS selector to find cards.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and card list instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Card;\n\tCard.components = new WeakMap();\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(14);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar NumberInput = function () {\n\t  /**\n\t   * Number input UI.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a number input UI.\n\t   */\n\t\n\t  function NumberInput(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, NumberInput);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.options = options;\n\t    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\t\n\t    this.element = element;\n\t    this.constructor.components.set(this.element, this);\n\t    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n\t    // Also <svg> does not seems to have `Element.classList`.\n\t    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates number input UI of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(NumberInput, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Increase/decrease number by clicking on up/down icons.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var state = event.currentTarget.classList;\n\t      var numberInput = this.element.querySelector('.bx--number__input');\n\t\n\t      if (state.contains('bx--number__arrow--icon-up')) {\n\t        if (this.options.ie) {\n\t          ++numberInput.value;\n\t        } else {\n\t          numberInput.stepUp();\n\t        }\n\t      } else if (state.contains('bx--number__arrow--icon-down')) {\n\t        if (this.options.ie) {\n\t          if (numberInput.value > 0) {\n\t            --numberInput.value;\n\t          }\n\t        } else {\n\t          numberInput.stepDown();\n\t        }\n\t      } else {\n\t        return;\n\t      }\n\t\n\t      // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n\t      numberInput.dispatchEvent(new CustomEvent('change', {\n\t        bubbles: true,\n\t        cancelable: false\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates number input UI in the given node.\n\t     * If the given element indicates that it's an number input UI (having `data-numberinput` attribute), instantiates it.\n\t     * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n\t     * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.numberinput !== undefined) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-numberinput]'))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return NumberInput;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and number input UI instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = NumberInput;\n\tNumberInput.components = new WeakMap();\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(8);\n\t\n\tvar _toggleClass = __webpack_require__(9);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _on = __webpack_require__(5);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Table = function () {\n\t  /**\n\t   * Data table.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a data table.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t   * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t   * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t   * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t   */\n\t\n\t  function Table(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Table);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorTitle: '.bx--table__column-title',\n\t      selectorRow: '.bx--table__row',\n\t      selectorCheckbox: '.bx--checkbox',\n\t      classSortState: 'bx--table__column-title--rotated',\n\t      classCheckState: 'bx--table__row--checked',\n\t      eventBeforeSortToggled: 'table-sort-beingtoggled',\n\t      eventAfterSortToggled: 'table-sort-toggled',\n\t      eventBeforeCheckToggled: 'table-check-beingtoggled',\n\t      eventAfterCheckToggled: 'table-check-toggled'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a data table of the given element.\n\t   * @param {HTMLElement} element The element working as a data table.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t   * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t   * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t   * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t   */\n\t\n\t\n\t  _createClass(Table, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Handles click on data table.\n\t     * * If the click is on a column title, toggles its sorting state.\n\t     * * If the click is on a check box, toggles the check box.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var title = (0, _eventMatches2.default)(event, this.options.selectorTitle);\n\t      var row = (0, _eventMatches2.default)(event, this.options.selectorRow);\n\t      var checkbox = (0, _eventMatches2.default)(event, this.options.selectorCheckbox);\n\t      if (title) {\n\t        this.toggleState('Sort', title);\n\t      }\n\t      if (row && checkbox) {\n\t        this.toggleState('Check', row);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The callback called once toggling is finished or is canceled.\n\t     * @callback Table~toggleStateCallback\n\t     * @param {Error} error\n\t     *   An error object with `true` in its `canceled` property if the toggling is canceled.\n\t     *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n\t     *   calls `.preventDefault()` against the event.\n\t     * @param {HTMLElement} element The toggled element.\n\t     * @param {boolean} newState The new toggle state.\n\t     */\n\t\n\t    /**\n\t     * Toggles a sorting state or a check box's state.\n\t     * @param {string} type\n\t     *   Specifies what state to toggle:\n\t     *   * `\"Sort\"` for toggling a sorting state.\n\t     *   * `\"Check\"` for toggling a check box's state.\n\t     * @param {HTMLElement} element The DOM element to toggle its state.\n\t     * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggleState',\n\t    value: function toggleState(type, element, callback) {\n\t      var newState = !element.classList.contains(this.options['class' + type + 'State']);\n\t      var eventStart = new CustomEvent(this.options['eventBefore' + type + 'Toggled'], {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { newState: newState }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (element.dispatchEvent(eventStart)) {\n\t        (0, _toggleClass2.default)(element, this.options['class' + type + 'State'], newState);\n\t        // this._changeActive(item);\n\t        element.dispatchEvent(new CustomEvent(this.options['eventAfter' + type + 'Toggled'], {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { newState: newState }\n\t        }));\n\t        if (callback) {\n\t          callback(null, element, newState);\n\t        }\n\t      } else {\n\t        var error = new Error('Toggling on table has been canceled.');\n\t        error.canceled = true;\n\t        error.element = element;\n\t        error.newState = newState;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Sets up the given node to instantiate data tables in.\n\t     * If the given element indicates that it's an data table (having `data-table` attribute), instantiates it.\n\t     * Otherwise, lazily instantiates data table when it's clicked on.\n\t     * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t     * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t     * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t     * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t     * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t     * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t     * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t     * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t     * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t     * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.table !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        return (0, _on2.default)(target, 'click', function (event) {\n\t          var element = (0, _eventMatches2.default)(event, '[data-table]');\n\t          if (element && !_this2.components.has(element)) {\n\t            _this2.create(element, options).handleClick(event);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Table;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Table#options\n\t * @property {string} [selectorTitle] The CSS selector to find column titles.\n\t * @property {string} [selectorRow] The CSS selector to find rows.\n\t * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n\t * @property {string} [classSortState] The CSS class for the sorting state.\n\t * @property {string} [classCheckState] The CSS class for the checked state.\n\t * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and data table instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Table;\n\tTable.components = new WeakMap();\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _lodash = __webpack_require__(23);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DetailPageHeader = function () {\n\t\n\t  /**\n\t   * The Detail Page Header.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a page header.\n\t   * @param {Object} [options] The component options.\n\t   */\n\t\n\t  function DetailPageHeader(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, DetailPageHeader);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    // Debounce scroll event calls to handleScroll\n\t    var debouncedScroll = (0, _lodash2.default)(this.handleScroll.bind(this), 50);\n\t\n\t    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n\t  }\n\t\n\t  /**\n\t   * Instantiates detail page header of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   * @param {Object} [options] The component options.\n\t   */\n\t\n\t\n\t  _createClass(DetailPageHeader, [{\n\t    key: 'handleScroll',\n\t\n\t\n\t    /**\n\t     * Adds class to header based on users position on the page\n\t     */\n\t    value: function handleScroll() {\n\t      if (this.element.ownerDocument.defaultView.scrollY > 101) {\n\t        this.element.classList.add(this.options.slideUp);\n\t      } else {\n\t        this.element.classList.remove(this.options.slideUp);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates the detail page header in the given element.\n\t     * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n\t     * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n\t     * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.detailPageHeader !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-detail-page-header]'))).forEach(function (element) {\n\t          return _this.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return DetailPageHeader;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and detail page header instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = DetailPageHeader;\n\tDetailPageHeader.components = new WeakMap();\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t/**\n\t * lodash 4.0.6 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar NAN = 0 / 0;\n\t\n\t/** `Object#toString` result references. */\n\tvar funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    symbolTag = '[object Symbol]';\n\t\n\t/** Used to match leading and trailing whitespace. */\n\tvar reTrim = /^\\s+|\\s+$/g;\n\t\n\t/** Used to detect bad signed hexadecimal string values. */\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t/** Used to detect binary string values. */\n\tvar reIsBinary = /^0b[01]+$/i;\n\t\n\t/** Used to detect octal string values. */\n\tvar reIsOctal = /^0o[0-7]+$/i;\n\t\n\t/** Built-in method references without a dependency on `root`. */\n\tvar freeParseInt = parseInt;\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max,\n\t    nativeMin = Math.min;\n\t\n\t/**\n\t * Gets the timestamp of the number of milliseconds that have elapsed since\n\t * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @type {Function}\n\t * @category Date\n\t * @returns {number} Returns the timestamp.\n\t * @example\n\t *\n\t * _.defer(function(stamp) {\n\t *   console.log(_.now() - stamp);\n\t * }, _.now());\n\t * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n\t */\n\tvar now = Date.now;\n\t\n\t/**\n\t * Creates a debounced function that delays invoking `func` until after `wait`\n\t * milliseconds have elapsed since the last time the debounced function was\n\t * invoked. The debounced function comes with a `cancel` method to cancel\n\t * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t * Provide an options object to indicate whether `func` should be invoked on\n\t * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t * with the last arguments provided to the debounced function. Subsequent calls\n\t * to the debounced function return the result of the last `func` invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t * on the trailing edge of the timeout only if the debounced function is\n\t * invoked more than once during the `wait` timeout.\n\t *\n\t * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t * for details over the differences between `_.debounce` and `_.throttle`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to debounce.\n\t * @param {number} [wait=0] The number of milliseconds to delay.\n\t * @param {Object} [options={}] The options object.\n\t * @param {boolean} [options.leading=false]\n\t *  Specify invoking on the leading edge of the timeout.\n\t * @param {number} [options.maxWait]\n\t *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t * @param {boolean} [options.trailing=true]\n\t *  Specify invoking on the trailing edge of the timeout.\n\t * @returns {Function} Returns the new debounced function.\n\t * @example\n\t *\n\t * // Avoid costly calculations while the window size is in flux.\n\t * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t *\n\t * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t *   'leading': true,\n\t *   'trailing': false\n\t * }));\n\t *\n\t * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t * var source = new EventSource('/stream');\n\t * jQuery(source).on('message', debounced);\n\t *\n\t * // Cancel the trailing debounced invocation.\n\t * jQuery(window).on('popstate', debounced.cancel);\n\t */\n\tfunction debounce(func, wait, options) {\n\t  var lastArgs,\n\t      lastThis,\n\t      maxWait,\n\t      result,\n\t      timerId,\n\t      lastCallTime = 0,\n\t      lastInvokeTime = 0,\n\t      leading = false,\n\t      maxing = false,\n\t      trailing = true;\n\t\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  wait = toNumber(wait) || 0;\n\t  if (isObject(options)) {\n\t    leading = !!options.leading;\n\t    maxing = 'maxWait' in options;\n\t    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\t\n\t  function invokeFunc(time) {\n\t    var args = lastArgs,\n\t        thisArg = lastThis;\n\t\n\t    lastArgs = lastThis = undefined;\n\t    lastInvokeTime = time;\n\t    result = func.apply(thisArg, args);\n\t    return result;\n\t  }\n\t\n\t  function leadingEdge(time) {\n\t    // Reset any `maxWait` timer.\n\t    lastInvokeTime = time;\n\t    // Start the timer for the trailing edge.\n\t    timerId = setTimeout(timerExpired, wait);\n\t    // Invoke the leading edge.\n\t    return leading ? invokeFunc(time) : result;\n\t  }\n\t\n\t  function remainingWait(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime,\n\t        result = wait - timeSinceLastCall;\n\t\n\t    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t  }\n\t\n\t  function shouldInvoke(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t    // Either this is the first call, activity has stopped and we're at the\n\t    // trailing edge, the system time has gone backwards and we're treating\n\t    // it as the trailing edge, or we've hit the `maxWait` limit.\n\t    return (!lastCallTime || (timeSinceLastCall >= wait) ||\n\t      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t  }\n\t\n\t  function timerExpired() {\n\t    var time = now();\n\t    if (shouldInvoke(time)) {\n\t      return trailingEdge(time);\n\t    }\n\t    // Restart the timer.\n\t    timerId = setTimeout(timerExpired, remainingWait(time));\n\t  }\n\t\n\t  function trailingEdge(time) {\n\t    clearTimeout(timerId);\n\t    timerId = undefined;\n\t\n\t    // Only invoke if we have `lastArgs` which means `func` has been\n\t    // debounced at least once.\n\t    if (trailing && lastArgs) {\n\t      return invokeFunc(time);\n\t    }\n\t    lastArgs = lastThis = undefined;\n\t    return result;\n\t  }\n\t\n\t  function cancel() {\n\t    if (timerId !== undefined) {\n\t      clearTimeout(timerId);\n\t    }\n\t    lastCallTime = lastInvokeTime = 0;\n\t    lastArgs = lastThis = timerId = undefined;\n\t  }\n\t\n\t  function flush() {\n\t    return timerId === undefined ? result : trailingEdge(now());\n\t  }\n\t\n\t  function debounced() {\n\t    var time = now(),\n\t        isInvoking = shouldInvoke(time);\n\t\n\t    lastArgs = arguments;\n\t    lastThis = this;\n\t    lastCallTime = time;\n\t\n\t    if (isInvoking) {\n\t      if (timerId === undefined) {\n\t        return leadingEdge(lastCallTime);\n\t      }\n\t      if (maxing) {\n\t        // Handle invocations in a tight loop.\n\t        clearTimeout(timerId);\n\t        timerId = setTimeout(timerExpired, wait);\n\t        return invokeFunc(lastCallTime);\n\t      }\n\t    }\n\t    if (timerId === undefined) {\n\t      timerId = setTimeout(timerExpired, wait);\n\t    }\n\t    return result;\n\t  }\n\t  debounced.cancel = cancel;\n\t  debounced.flush = flush;\n\t  return debounced;\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t  var tag = isObject(value) ? objectToString.call(value) : '';\n\t  return tag == funcTag || tag == genTag;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Symbol` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isSymbol(Symbol.iterator);\n\t * // => true\n\t *\n\t * _.isSymbol('abc');\n\t * // => false\n\t */\n\tfunction isSymbol(value) {\n\t  return typeof value == 'symbol' ||\n\t    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t}\n\t\n\t/**\n\t * Converts `value` to a number.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to process.\n\t * @returns {number} Returns the number.\n\t * @example\n\t *\n\t * _.toNumber(3);\n\t * // => 3\n\t *\n\t * _.toNumber(Number.MIN_VALUE);\n\t * // => 5e-324\n\t *\n\t * _.toNumber(Infinity);\n\t * // => Infinity\n\t *\n\t * _.toNumber('3');\n\t * // => 3\n\t */\n\tfunction toNumber(value) {\n\t  if (typeof value == 'number') {\n\t    return value;\n\t  }\n\t  if (isSymbol(value)) {\n\t    return NAN;\n\t  }\n\t  if (isObject(value)) {\n\t    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t    value = isObject(other) ? (other + '') : other;\n\t  }\n\t  if (typeof value != 'string') {\n\t    return value === 0 ? value : +value;\n\t  }\n\t  value = value.replace(reTrim, '');\n\t  var isBinary = reIsBinary.test(value);\n\t  return (isBinary || reIsOctal.test(value))\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t    : (reIsBadHex.test(value) ? NAN : +value);\n\t}\n\t\n\tmodule.exports = debounce;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(14);\n\t\n\tvar _toggleClass = __webpack_require__(9);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tvar _on = __webpack_require__(5);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar LeftNav = function () {\n\t  /**\n\t   * Left Navigation.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a left navigation.\n\t   * @param {Object} [options] The component options\n\t   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n\t   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n\t   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n\t   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n\t   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n\t   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n\t   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n\t   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n\t   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n\t   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n\t   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n\t   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n\t   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n\t   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n\t   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n\t   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n\t   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n\t   */\n\t\n\t  function LeftNav(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, LeftNav);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      // Data Attribute selectors\n\t      selectorLeftNav: '[data-left-nav]',\n\t      selectorLeftNavList: '[data-left-nav-list]',\n\t      selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n\t      selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n\t      selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n\t      selectorLeftNavListItem: '[data-left-nav-item]',\n\t      selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n\t      selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n\t      selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n\t      selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n\t      selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n\t      selectorLeftNavSection: '[data-left-nav-section]',\n\t      selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n\t      selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n\t      selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n\t      selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n\t      // CSS Class Selectors\n\t      classActiveLeftNav: 'bx--left-nav--active',\n\t      classActiveLeftNavListItem: 'bx--left-nav-list__item--active',\n\t      classActiveTrigger: 'bx--left-nav__trigger--active',\n\t      classExpandedLeftNavListItem: 'bx--left-nav-list__item--expanded',\n\t      classFlyoutDisplayed: 'bx--left-nav-list--flyout--displayed',\n\t      classItemHasChildren: 'bx--left-nav-list__item--has-children'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.hookOpenActions();\n\t    this.hookListItemsEvents();\n\t    this.animateInNav();\n\t    this.hDocumentClick = (0, _on2.default)(this.element.ownerDocument, 'click', function (evt) {\n\t      return _this.handleDocumentClick(evt);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a left navigation of the given element.\n\t   * @param {HTMLElement} element The element working as the left navigation.\n\t   * @param {Object} [options] The component options\n\t   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n\t   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n\t   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n\t   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n\t   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n\t   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n\t   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n\t   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n\t   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n\t   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n\t   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n\t   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n\t   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n\t   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n\t   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n\t   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n\t   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n\t   */\n\t\n\t\n\t  _createClass(LeftNav, [{\n\t    key: 'closeMenu',\n\t\n\t\n\t    /**\n\t     * Closes the menu.\n\t     */\n\t    value: function closeMenu() {\n\t      this.element.classList.remove(this.options.classActiveLeftNav);\n\t      this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.remove(this.options.classActiveTrigger);\n\t    }\n\t\n\t    /**\n\t     * Toggles the menu to open and close.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggleMenu',\n\t    value: function toggleMenu() {\n\t      this.element.classList.toggle(this.options.classActiveLeftNav);\n\t      this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.toggle(this.options.classActiveTrigger);\n\t    }\n\t\n\t    /**\n\t     * Adds a animation delay to the list items as they appear on page load.\n\t     */\n\t\n\t  }, {\n\t    key: 'animateInNav',\n\t    value: function animateInNav() {\n\t      var _this2 = this;\n\t\n\t      var counter = 0.1;\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavListItem))).forEach(function (item) {\n\t        item.classList.add('animate');\n\t        item.style.animationDelay = counter + 's';\n\t        counter += 0.05;\n\t      });\n\t      setTimeout(function () {\n\t        [].concat(_toConsumableArray(_this2.element.querySelectorAll(_this2.options.selectorLeftNavListItem))).forEach(function (item) {\n\t          item.classList.remove('animate');\n\t        });\n\t      }, 1000);\n\t    }\n\t\n\t    /**\n\t     * Adds event listeners for showing and hiding the left navigation\n\t     */\n\t\n\t  }, {\n\t    key: 'hookOpenActions',\n\t    value: function hookOpenActions() {\n\t      var _this3 = this;\n\t\n\t      var openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n\t      var closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n\t\n\t      openBtn.addEventListener('click', function () {\n\t        _this3.element.tabIndex = '0';\n\t        _this3.toggleMenu();\n\t      });\n\t\n\t      openBtn.addEventListener('keydown', function (evt) {\n\t        if (evt.which === 13) {\n\t          _this3.element.tabIndex = '0';\n\t          _this3.toggleMenu();\n\t        }\n\t      });\n\t\n\t      closeBtn.addEventListener('click', function () {\n\t        _this3.element.tabIndex = '-1';\n\t        _this3.closeMenu();\n\t      });\n\t\n\t      closeBtn.addEventListener('keydown', function (evt) {\n\t        if (evt.which === 13) {\n\t          _this3.element.tabIndex = '-1';\n\t          _this3.closeMenu();\n\t        }\n\t      });\n\t\n\t      this.element.ownerDocument.addEventListener('keydown', function (evt) {\n\t        if (evt.which === 27 && _this3.element.classList.contains(_this3.options.classActiveLeftNav)) {\n\t          _this3.closeMenu();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds event listeners to list items\n\t     */\n\t\n\t  }, {\n\t    key: 'hookListItemsEvents',\n\t    value: function hookListItemsEvents() {\n\t      var _this4 = this;\n\t\n\t      var leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n\t      leftNavList.addEventListener('click', function (evt) {\n\t        var leftNavItem = (0, _eventMatches2.default)(evt, _this4.options.selectorLeftNavListItem);\n\t        if (leftNavItem) {\n\t          var childItem = (0, _eventMatches2.default)(evt, _this4.options.selectorLeftNavNestedListItem);\n\t          var hasChildren = (0, _eventMatches2.default)(evt, _this4.options.selectorLeftNavListItemHasChildren);\n\t          var flyoutItem = (0, _eventMatches2.default)(evt, _this4.options.selectorLeftNavFlyoutItem);\n\t          if (flyoutItem) {\n\t            _this4.addActiveListItem(flyoutItem);\n\t          } else if (childItem) {\n\t            if (childItem.querySelector(_this4.options.selectorLeftNavFlyoutMenu)) {\n\t              var flyoutMenu = childItem.querySelector(_this4.options.selectorLeftNavFlyoutMenu);\n\t              flyoutMenu.classList.toggle(_this4.options.classFlyoutDisplayed);\n\t            } else {\n\t              _this4.addActiveListItem(childItem);\n\t            }\n\t          } else if (hasChildren) {\n\t            _this4.handleNestedListClick(leftNavItem);\n\t          } else {\n\t            _this4.addActiveListItem(leftNavItem);\n\t          }\n\t        }\n\t      });\n\t      leftNavList.addEventListener('keydown', function (evt) {\n\t        if (evt.which === 13) {\n\t          var leftNavItem = (0, _eventMatches2.default)(evt, _this4.options.selectorLeftNavListItem);\n\t          if (leftNavItem) {\n\t            var childItem = (0, _eventMatches2.default)(evt, _this4.options.selectorLeftNavNestedListItem);\n\t            var hasChildren = (0, _eventMatches2.default)(evt, _this4.options.selectorLeftNavListItemHasChildren);\n\t            var flyoutItem = (0, _eventMatches2.default)(evt, _this4.options.selectorLeftNavFlyoutItem);\n\t            if (flyoutItem) {\n\t              _this4.addActiveListItem(flyoutItem);\n\t            } else if (childItem) {\n\t              if (!childItem.querySelector(_this4.options.selectorLeftNavFlyoutMenu)) {\n\t                _this4.addActiveListItem(childItem);\n\t              }\n\t            } else if (hasChildren) {\n\t              _this4.handleNestedListClick(leftNavItem);\n\t            } else {\n\t              _this4.addActiveListItem(leftNavItem);\n\t            }\n\t          }\n\t        }\n\t      });\n\t      var flyouts = [].concat(_toConsumableArray(this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout)));\n\t      flyouts.forEach(function (flyout) {\n\t        flyout.addEventListener('mouseenter', function () {\n\t          flyout.querySelector(_this4.options.selectorLeftNavFlyoutMenu).style.top = flyout.offsetTop - _this4.element.querySelector(_this4.options.selectorLeftNav).scrollTop + 'px';\n\t          flyout.querySelector(_this4.options.selectorLeftNavFlyoutMenu).style.left = flyout.offsetLeft + Math.round(flyout.offsetWidth) + 'px';\n\t          flyout.querySelector(_this4.options.selectorLeftNavFlyoutMenu).classList.add(_this4.options.classFlyoutDisplayed);\n\t        });\n\t        flyout.addEventListener('mouseleave', function () {\n\t          flyout.querySelector(_this4.options.selectorLeftNavFlyoutMenu).classList.remove(_this4.options.classFlyoutDisplayed);\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Hides all flyout menus.\n\t     */\n\t\n\t  }, {\n\t    key: 'hideAllFlyoutMenus',\n\t    value: function hideAllFlyoutMenus() {\n\t      var _this5 = this;\n\t\n\t      var flyoutMenus = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu)));\n\t      flyoutMenus.forEach(function (menu) {\n\t        menu.classList.remove(_this5.options.classFlyoutDisplayed);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Sets a list item as active.\n\t     * @param {Object} item The active list item.\n\t     */\n\t\n\t  }, {\n\t    key: 'addActiveListItem',\n\t    value: function addActiveListItem(item) {\n\t      var _this6 = this;\n\t\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavAllListItems))).forEach(function (currentItem) {\n\t        if (!(item === currentItem)) {\n\t          if (!currentItem.contains(item)) {\n\t            currentItem.classList.remove(_this6.options.classActiveLeftNavListItem);\n\t          } else {\n\t            currentItem.classList.add(_this6.options.classActiveLeftNavListItem);\n\t          }\n\t        }\n\t      });\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem))).forEach(function (currentItem) {\n\t        if (!(item === currentItem)) {\n\t          currentItem.classList.remove(_this6.options.classActiveLeftNavListItem);\n\t        }\n\t      });\n\t      item.classList.add(this.options.classActiveLeftNavListItem);\n\t      this.hideAllFlyoutMenus();\n\t      this.closeMenu();\n\t    }\n\t\n\t    /**\n\t     * Handles click on the document.\n\t     * Closes the left navigation when document is clicked outside the left navigation.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleDocumentClick',\n\t    value: function handleDocumentClick(evt) {\n\t      var clickTarget = evt.target;\n\t      var isOfSelf = this.element.contains(clickTarget);\n\t      var isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n\t      var isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n\t      var isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n\t      var shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n\t      var flyoutOpen = void 0;\n\t      if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n\t        flyoutOpen = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.contains(this.options.classFlyoutDisplayed);\n\t      }\n\t      if (isOfSelf && this.element.tagName === 'A') {\n\t        evt.preventDefault();\n\t      }\n\t      if (shouldClose) {\n\t        this.closeMenu();\n\t      }\n\t      if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n\t        if (flyoutOpen && !isOfSelf && isOpen) {\n\t          this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles click on a list item that contains a nested list in the left navigation.\n\t     * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n\t     * @param {HTMLElement} listItem The list item that was clicked.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleNestedListClick',\n\t    value: function handleNestedListClick(listItem) {\n\t      var _this7 = this;\n\t\n\t      var isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n\t      this.hideAllFlyoutMenus();\n\t      (0, _toggleClass2.default)(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n\t      var listItems = [].concat(_toConsumableArray(listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem)));\n\t      listItems.forEach(function (item) {\n\t        if (isOpen) {\n\t          item.querySelector(_this7.options.selectorLeftNavListItemLink).tabIndex = -1;\n\t        } else {\n\t          item.querySelector(_this7.options.selectorLeftNavListItemLink).tabIndex = 0;\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.hDocumentClick) {\n\t        this.hDocumentClick = this.hDocumentClick.release();\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates a left navigation in the given node.\n\t     * If the given element indicates that it's a left navigation (having `data-left-nav-container` attribute), instantiates it.\n\t     * Otherwise, instantiates left navigation by searching for left navigation in the given node.\n\t     * @param {Node} target The DOM node to instantiate left navigation in. Should be a document or an element.\n\t     * @param {Object} [options] The component options\n\t     * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n\t     * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n\t     * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n\t     * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n\t     * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n\t     * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n\t     * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n\t     * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n\t     * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n\t     * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n\t     * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n\t     * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n\t     * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n\t     * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n\t     * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n\t     * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n\t     * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this8 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-left-nav-container]'))).forEach(function (element) {\n\t          return _this8.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return LeftNav;\n\t}();\n\t\n\t/**\n\t* The component options.\n\t * @member {Object} LeftNav#options\n\t * @property {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n\t * @property {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n\t * @property {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n\t * @property {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n\t * @property {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n\t * @property {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n\t * @property {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n\t * @property {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n\t * @property {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n\t * @property {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n\t * @property {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n\t * @property {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n\t * @property {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n\t * @property {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n\t * @property {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n\t * @property {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n\t * @property {string} [options.classItemHasChildren] The class name for when a list item has children.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and left navigation instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = LeftNav;\n\tLeftNav.components = new WeakMap();\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(14);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UnifiedHeader = function () {\n\t  function UnifiedHeader(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, UnifiedHeader);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      // Data Attribute selectors\n\t      // CSS Class Selectors\n\t    }, options);\n\t    this.constructor.components.set(this.element, this);\n\t  }\n\t\n\t  _createClass(UnifiedHeader, [{\n\t    key: 'release',\n\t    value: function release() {\n\t      var _this = this;\n\t\n\t      if (this.handleDocumentClick) {\n\t        this.element.ownerDocument.removeEventListener('click', function (evt) {\n\t          return _this.handleDocumentClick(evt);\n\t        });\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-unified-header]'))).forEach(function (element) {\n\t          return _this2.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return UnifiedHeader;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and left navigation instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = UnifiedHeader;\n\tUnifiedHeader.components = new WeakMap();\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(14);\n\t\n\tvar _toggleClass = __webpack_require__(9);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar InlineLeftNav = function () {\n\t  /**\n\t   * Spinner indicating loading state.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a spinner.\n\t   * @param {Object} options The component options.\n\t   */\n\t\n\t  function InlineLeftNav(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, InlineLeftNav);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.options = Object.assign({\n\t      // Data Attribute selectors\n\t      selectorLeftNavList: '[data-inline-left-nav-list]',\n\t      selectorLeftNavNestedList: '[data-inline-left-nav-nested-list]',\n\t      selectorLeftNavListItem: '[data-inline-left-nav-item]',\n\t      selectorLeftNavListItemLink: '[data-inline-left-nav-item-link]',\n\t      selectorLeftNavNestedListItem: '[data-inline-left-nav-nested-item]',\n\t      // CSS Class Selectors\n\t      classActiveLeftNavListItem: 'left-nav-list__item--active',\n\t      classExpandedLeftNavListItem: 'left-nav-list__item--expanded'\n\t    }, options);\n\t\n\t    this.element = element;\n\t\n\t    this.constructor.components.set(this.element, this);\n\t    this.hookListItemsEvents();\n\t  }\n\t\n\t  /**\n\t   * Instantiates spinner of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(InlineLeftNav, [{\n\t    key: 'hookListItemsEvents',\n\t    value: function hookListItemsEvents() {\n\t      var _this = this;\n\t\n\t      var leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n\t      leftNavList.addEventListener('click', function (evt) {\n\t        var leftNavItem = (0, _eventMatches2.default)(evt, _this.options.selectorLeftNavListItem);\n\t        if (leftNavItem) {\n\t          var childItem = (0, _eventMatches2.default)(evt, _this.options.selectorLeftNavNestedListItem);\n\t          var hasChildren = leftNavItem.classList.contains('left-nav-list__item--has-children');\n\t          if (childItem) {\n\t            _this.addActiveListItem(childItem);\n\t          } else if (hasChildren) {\n\t            _this.handleNestedListClick(leftNavItem, evt);\n\t          } else {\n\t            _this.addActiveListItem(leftNavItem);\n\t          }\n\t        }\n\t      });\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavListItem))).forEach(function (item) {\n\t        item.addEventListener('keydown', function (evt) {\n\t          var leftNavItemWithChildren = (0, _eventMatches2.default)(evt, _this.options.selectorLeftNavListItemHasChildren);\n\t          if (leftNavItemWithChildren && evt.which === 13) {\n\t            _this.handleNestedListClick(leftNavItemWithChildren);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addActiveListItem',\n\t    value: function addActiveListItem(item) {\n\t      var _this2 = this;\n\t\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavListItem))).forEach(function (currentItem) {\n\t        if (!(item === currentItem)) {\n\t          currentItem.classList.remove(_this2.options.classActiveLeftNavListItem);\n\t        }\n\t      });\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem))).forEach(function (currentItem) {\n\t        if (!(item === currentItem)) {\n\t          currentItem.classList.remove(_this2.options.classActiveLeftNavListItem);\n\t        }\n\t      });\n\t      item.classList.add(this.options.classActiveLeftNavListItem);\n\t    }\n\t\n\t    /**\n\t     * Handles click on a list item that contains a nested list in the left navigation.\n\t     * The nested list is expanded and the icon is rotated.\n\t     * @param {HTMLElement} listItem The list item that was clicked.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleNestedListClick',\n\t    value: function handleNestedListClick(listItem, evt) {\n\t      var _this3 = this;\n\t\n\t      var isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n\t      if (!('leftNavItemLink' in evt.target.dataset)) {\n\t        (0, _toggleClass2.default)(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n\t      }\n\t      var list = listItem.querySelector(this.options.selectorLeftNavNestedList);\n\t      var listItems = [].concat(_toConsumableArray(list.querySelectorAll(this.options.selectorLeftNavNestedListItem)));\n\t      listItems.forEach(function (item) {\n\t        if (isOpen) {\n\t          item.querySelector(_this3.options.selectorLeftNavListItemLink).tabIndex = -1;\n\t        } else {\n\t          item.querySelector(_this3.options.selectorLeftNavListItemLink).tabIndex = 0;\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates spinner in the given node.\n\t     * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n\t     * Otherwise, instantiates spinners by searching for spinners in the given node.\n\t     * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this4 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-inline-left-nav]'))).forEach(function (element) {\n\t          return _this4.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return InlineLeftNav;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and spinner instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = InlineLeftNav;\n\tInlineLeftNav.components = new WeakMap();\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(14);\n\t\n\tvar _on = __webpack_require__(5);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ProfileSwitcher = function () {\n\t  /**\n\t   * Profile Switcher.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a profile switcher.\n\t   * @param {Object} [options] The component options\n\t   * @param {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n\t   * @param {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n\t   * @param {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n\t   * @param {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n\t   * @param {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n\t   * @param {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n\t   * @param {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n\t   */\n\t\n\t  function ProfileSwitcher(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, ProfileSwitcher);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      // Data Attribute selectors\n\t      selectorProfileSwitcher: '[data-profile-switcher]',\n\t      selectorToggle: '[data-profile-switcher-toggle]',\n\t      selectorMenu: '[data-switcher-menu]',\n\t      selectorAccount: '[data-switcher-account]',\n\t      selectorOrg: '[data-switcher-org]',\n\t      selectorSpace: '[data-switcher-space]',\n\t      selectorAccountDropdown: '[data-dropdown-account]',\n\t      selectorOrgDropdown: '[data-dropdown-org]',\n\t      selectorSpaceDropdown: '[data-dropdown-space]',\n\t      classSwitcherOpen: 'bx--account-switcher--open'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.hDocumentClick = (0, _on2.default)(this.element.ownerDocument, 'click', function (evt) {\n\t      return _this.handleDocumentClick(evt);\n\t    });\n\t    this.element.querySelector(this.options.selectorToggle).addEventListener('keypress', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t\n\t    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseenter', function () {\n\t      return _this.determineSwitcherValues(true);\n\t    });\n\t\n\t    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseleave', function () {\n\t      return _this.determineSwitcherValues(false);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a profile switcher of the given element.\n\t   * @param {HTMLElement} element The element working as the profile switcher.\n\t   * @param {Object} [options] The component options\n\t   */\n\t\n\t\n\t  _createClass(ProfileSwitcher, [{\n\t    key: 'toggle',\n\t\n\t\n\t    /**\n\t     * Opens and closes the menu.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function toggle(event) {\n\t      if (event.which === 13) {\n\t        var isOfSelf = this.element.contains(event.target);\n\t        if (isOfSelf) {\n\t          this.element.classList.toggle(this.options.classSwitcherOpen);\n\t        } else if (!isOfSelf && this.element.classList.contains(this.options.classSwitcherOpen)) {\n\t          this.element.classList.remove(this.options.classSwitcherOpen);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles click on the document.\n\t     * Closes the profile switcherwhen document is clicked outside the left navigation or\n\t     * the user clicks the profile switcher while it is open.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleDocumentClick',\n\t    value: function handleDocumentClick(evt) {\n\t      var clickTarget = evt.target;\n\t      var isOfSelf = this.element.contains(clickTarget);\n\t      var isToggle = this.element.ownerDocument.querySelector(this.options.selectorToggle).contains(clickTarget);\n\t      var isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\t\n\t      if (isOfSelf) {\n\t        if (isToggle && isOpen) {\n\t          this.element.classList.remove(this.options.classSwitcherOpen);\n\t        } else if (isOpen) {\n\t          this.determineSwitcherValues();\n\t        } else {\n\t          this.element.classList.add(this.options.classSwitcherOpen);\n\t        }\n\t      } else {\n\t        this.element.classList.remove(this.options.classSwitcherOpen);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles logic to determine what text to display in profile switcher.\n\t     * If the text is over 25 characters long, truncate and add ellipses.\n\t     * Also adds logic to change the switcher width based on the width of the hovered\n\t     * profile switcher\n\t     * @param {boolean} isHovered boolean value passed by the event listener on bx--toggle.\n\t     */\n\t\n\t  }, {\n\t    key: 'determineSwitcherValues',\n\t    value: function determineSwitcherValues(isHovered) {\n\t      var nameElement = this.element.querySelector(this.options.selectorAccount);\n\t      var orgElement = this.element.querySelector(this.options.selectorOrg);\n\t      var spaceElement = this.element.querySelector(this.options.selectorSpace);\n\t      var menuElement = this.element.querySelector(this.options.selectorMenu);\n\t      var isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\t\n\t      var nameDropdownValue = this.element.querySelector(this.options.selectorAccountDropdown).textContent;\n\t      var orgDropdownValue = this.element.querySelector(this.options.selectorOrgDropdown).textContent;\n\t      var spaceDropdownValue = this.element.querySelector(this.options.selectorSpaceDropdown).textContent;\n\t      var nameShort = void 0;\n\t      var orgShort = void 0;\n\t      var spaceShort = void 0;\n\t\n\t      if (isHovered && !isOpen) {\n\t        nameElement.textContent = nameDropdownValue;\n\t        orgElement.textContent = orgDropdownValue;\n\t        spaceElement.textContent = spaceDropdownValue;\n\t        menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n\t      } else {\n\t        if (nameDropdownValue.length > 25) {\n\t          nameShort = nameDropdownValue.substr(0, 25) + '...';\n\t          nameElement.textContent = nameShort;\n\t        } else {\n\t          nameElement.textContent = nameDropdownValue;\n\t        }\n\t\n\t        if (orgDropdownValue.length > 25) {\n\t          orgShort = orgDropdownValue.slice(0, 12) + '...' + orgDropdownValue.slice(-13);\n\t          orgElement.textContent = orgShort;\n\t        } else {\n\t          orgElement.textContent = orgDropdownValue;\n\t        }\n\t\n\t        if (spaceDropdownValue.length > 25) {\n\t          spaceShort = spaceDropdownValue.substr(0, 25) + '...';\n\t          spaceElement.textContent = spaceShort;\n\t        } else {\n\t          spaceElement.textContent = spaceDropdownValue;\n\t        }\n\t\n\t        menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.hDocumentClick) {\n\t        this.hDocumentClick = this.hDocumentClick.release();\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates a profile switcher in the given node.\n\t     * If the given element indicates that it's a profile switcher (having `data-profile-switcher` attribute), instantiates it.\n\t     * Otherwise, instantiates profile switcher by searching for profile switcher in the given node.\n\t     * @param {Node} target The DOM node to instantiate profile switcher in. Should be a document or an element.\n\t     * @param {Object} [options] The component options\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-profile-switcher]'))).forEach(function (element) {\n\t          return _this2.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ProfileSwitcher;\n\t}();\n\t\n\t/**\n\t* The component options..\n\t * @member {Object} ProfileSwitcher#options\n\t * @property {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n\t * @property {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n\t * @property {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n\t * @property {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n\t * @property {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n\t * @property {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n\t * @property {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and profile switcher instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = ProfileSwitcher;\n\tProfileSwitcher.components = new WeakMap();\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(14);\n\t\n\tvar _toggleClass = __webpack_require__(9);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SearchWithOptions = function () {\n\t  /**\n\t   * Search with Options.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as the search component.\n\t   * @param {Object} [options] The component options\n\t   * @param {string} [options.selectorToggleLayoutBtn] The data attribute selector for the button that toggles between the layouts.\n\t   * @param {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.\n\t   * @param {string} [options.classHiddenContainer] The class selector for a hidden container.\n\t   */\n\t\n\t  function SearchWithOptions(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, SearchWithOptions);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorToggleLayoutBtn: '[data-search-toggle-btn]',\n\t      selectorIconContainer: '[data-search-toggle-layout]',\n\t      classHiddenContainer: 'bx--search__toggle-layout__container--hidden'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.querySelector(this.options.selectorToggleLayoutBtn).addEventListener('click', function (evt) {\n\t      return _this.toggleLayout(evt);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a search component of the given element.\n\t   * @param {HTMLElement} element The element working as the search component.\n\t   * @param {Object} [options] The component options\n\t   */\n\t\n\t\n\t  _createClass(SearchWithOptions, [{\n\t    key: 'toggleLayout',\n\t\n\t\n\t    /**\n\t     * Toggles between the grid and list layout.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function toggleLayout(evt) {\n\t      var _this2 = this;\n\t\n\t      var btn = evt.currentTarget;\n\t      var iconContainers = [].concat(_toConsumableArray(btn.querySelectorAll(this.options.selectorIconContainer)));\n\t      iconContainers.forEach(function (container) {\n\t        var isHidden = container.classList.contains(_this2.options.classHiddenContainer);\n\t        (0, _toggleClass2.default)(container, _this2.options.classHiddenContainer, !isHidden);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates a search component in the given node.\n\t     * If the given element indicates that it's a search component (having `data-search-with-options` attribute), instantiates it.\n\t     * Otherwise, instantiates the search component by searching for the search component in the given node.\n\t     * @param {Node} target The DOM node to instantiate the search component in. Should be a document or an element..\n\t     * @param {Object} [options] The component options\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-search-with-options]'))).forEach(function (element) {\n\t          return _this3.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return SearchWithOptions;\n\t}();\n\t\n\texports.default = SearchWithOptions;\n\t\n\t\n\tSearchWithOptions.components = new WeakMap();\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bluemix-components.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fbbe8262fb4197b1c94a\n **/","// ====================//\n// Imports and Exports //\n// ====================//\n\n\n// Polyfills\n// -------------\nimport 'svgxuse';\n\n// Base Elements & Components\n// -------------\n// - JavaScript classes for use with components and base-elements.\n// - The following statements import classes from actual locations to\n//   be consumed from this file instead of their actual locations.\nimport FileUploader from './file-uploader';\nimport FabButton from './fab';\nimport ContentSwitcher from './content-switcher';\nimport Tab from './tabs';\nimport OverflowMenu from './overflow-menu';\nimport Modal from './modals';\nimport HeaderNav from './header';\nimport Toolbars from './toolbars';\nimport Loading from './loading';\nimport Dropdown from './dropdown';\nimport Card from './card';\nimport NumberInput from './number-input';\nimport Table from './table';\nimport DetailPageHeader from './detail-page-header';\nimport LeftNav from './left-nav';\nimport UnifiedHeader from './unified-header';\nimport InlineLeftNav from './inline-left-nav';\nimport ProfileSwitcher from './profile-switcher';\nimport SearchWithOptions from './search-with-options';\n\nconst settings = {};\n\n/**\n * This module is used for the following purposes:\n * 1. Export ES2015 classes as modules (used with base-elements and components)\n * 2. Build an ES5-compatible files for prototyping.\n *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n * @exports BluemixComponents\n * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n */\nexport {\n  /**\n   * Settings.\n   * @type Object\n   * @property {boolean} [disableAutoInit]\n   *   Disables automatic instantiation of components.\n   *   By default (`BluemixComponents.disableAutoInit` is `false`),\n   *   bluemix-components attempts to instantiate components automatically\n   *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n   *   or upon DOM events (e.g. clicking) on such elements.\n   *   See each components' static `.init()` methods for details.\n   */\n  settings,\n\n  /**\n   * Floating action button.\n   * @type FabButton\n   */\n  FabButton,\n\n  /**\n   * File uploader.\n   * @type FileUploader\n   */\n  FileUploader,\n\n  /**\n   * Content switcher.\n   * @type ContentSwitcher\n   */\n  ContentSwitcher,\n\n  /**\n   * Container of tabs.\n   * @type Tab\n   */\n  Tab,\n\n  /**\n   * Overflow menu.\n   * @type OverflowMenu\n   */\n  OverflowMenu,\n\n  /**\n   * Modal dialog.\n   * @type Modal\n   */\n  Modal,\n\n  /**\n   * Header with taxonomy menu.\n   * @type HeaderNav\n   */\n  HeaderNav,\n\n  /**\n   * Left Navigation Menu\n   * @type LeftNav\n   */\n   LeftNav,\n\n  /**\n   * Search button in tool bar.\n   * @type Toolbars\n   */\n  Toolbars,\n\n  /**\n   * Spinner indicating loading state.\n   * @type Loading\n   */\n  Loading,\n\n  /**\n   * A selector with drop downs.\n   * @type Dropdown\n   */\n  Dropdown,\n\n  /**\n   * The container for cards.\n   * @type Card\n   */\n  Card,\n\n  /**\n   * Number input UI.\n   * @type NumberInput\n   */\n  NumberInput,\n\n  /**\n   * Data table.\n   * @type Table\n   */\n  Table,\n\n  /**\n   * Detail page header.\n   * @type DetailPageHeader\n   */\n  DetailPageHeader,\n\n  /**\n   * Profile Switcher.\n   * @type ProfileSwitcher\n   */\n  ProfileSwitcher,\n};\n\n/**\n * Instantiates components automatically\n * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n * or upon DOM events (e.g. clicking) on such elements.\n * See each components' static `.init()` methods for details.\n *\n * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n *\n * @private\n */\n\nconst init = () => {\n  if (!settings.disableAutoInit) {\n    FabButton.init();\n    FileUploader.init();\n    ContentSwitcher.init();\n    Tab.init();\n    OverflowMenu.init();\n    Modal.init();\n    Toolbars.init();\n    Loading.init();\n    Dropdown.init();\n    Card.init();\n    NumberInput.init();\n    Table.init();\n    DetailPageHeader.init();\n    LeftNav.init();\n    UnifiedHeader.init();\n    InlineLeftNav.init();\n    ProfileSwitcher.init();\n    SearchWithOptions.init();\n  }\n};\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  // DOMContentLoaded has been fired already\n  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n  setTimeout(init, 0);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/index.js\n **/","/*!\n * @copyright Copyright (c) 2016 IcoMoon.io\n * @license   Licensed under MIT license\n *            See https://github.com/Keyamoon/svgxuse\n * @version   1.1.16\n */\n/*jslint browser: true */\n/*global XDomainRequest, MutationObserver, window */\n(function () {\n    'use strict';\n    if (window && window.addEventListener) {\n        var cache = Object.create(null); // holds xhr objects to prevent multiple requests\n        var checkUseElems,\n            tid; // timeout id\n        var debouncedCheck = function () {\n            clearTimeout(tid);\n            tid = setTimeout(checkUseElems, 100);\n        };\n        var unobserveChanges = function () {\n            return;\n        };\n        var observeChanges = function () {\n            var observer;\n            window.addEventListener('resize', debouncedCheck, false);\n            window.addEventListener('orientationchange', debouncedCheck, false);\n            if (window.MutationObserver) {\n                observer = new MutationObserver(debouncedCheck);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true\n                });\n                unobserveChanges = function () {\n                    try {\n                        observer.disconnect();\n                        window.removeEventListener('resize', debouncedCheck, false);\n                        window.removeEventListener('orientationchange', debouncedCheck, false);\n                    } catch (ignore) {}\n                };\n            } else {\n                document.documentElement.addEventListener('DOMSubtreeModified', debouncedCheck, false);\n                unobserveChanges = function () {\n                    document.documentElement.removeEventListener('DOMSubtreeModified', debouncedCheck, false);\n                    window.removeEventListener('resize', debouncedCheck, false);\n                    window.removeEventListener('orientationchange', debouncedCheck, false);\n                };\n            }\n        };\n        var xlinkNS = 'http://www.w3.org/1999/xlink';\n        checkUseElems = function () {\n            var base,\n                bcr,\n                fallback = '', // optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n                hash,\n                i,\n                Request,\n                inProgressCount = 0,\n                isHidden,\n                url,\n                uses,\n                xhr;\n            if (window.XMLHttpRequest) {\n                Request = new XMLHttpRequest();\n                if (Request.withCredentials !== undefined) {\n                    Request = XMLHttpRequest;\n                } else {\n                    Request = XDomainRequest || undefined;\n                }\n            }\n            if (Request === undefined) {\n                return;\n            }\n            function observeIfDone() {\n                // If done with making changes, start watching for chagnes in DOM again\n                inProgressCount -= 1;\n                if (inProgressCount === 0) { // if all xhrs were resolved\n                    observeChanges(); // watch for changes to DOM\n                }\n            }\n            function attrUpdateFunc(spec) {\n                return function () {\n                    if (cache[spec.base] !== true) {\n                        spec.useEl.setAttributeNS(xlinkNS, 'xlink:href', '#' + spec.hash);\n                    }\n                };\n            }\n            function onloadFunc(xhr) {\n                return function () {\n                    var body = document.body;\n                    var x = document.createElement('x');\n                    var svg;\n                    xhr.onload = null;\n                    x.innerHTML = xhr.responseText;\n                    svg = x.getElementsByTagName('svg')[0];\n                    if (svg) {\n                        svg.setAttribute('aria-hidden', 'true');\n                        svg.style.position = 'absolute';\n                        svg.style.width = 0;\n                        svg.style.height = 0;\n                        svg.style.overflow = 'hidden';\n                        body.insertBefore(svg, body.firstChild);\n                    }\n                    observeIfDone();\n                };\n            }\n            function onErrorTimeout(xhr) {\n                return function () {\n                    xhr.onerror = null;\n                    xhr.ontimeout = null;\n                    observeIfDone();\n                };\n            }\n            unobserveChanges(); // stop watching for changes to DOM\n            // find all use elements\n            uses = document.getElementsByTagName('use');\n            for (i = 0; i < uses.length; i += 1) {\n                try {\n                    bcr = uses[i].getBoundingClientRect();\n                } catch (ignore) {\n                    // failed to get bounding rectangle of the use element\n                    bcr = false;\n                }\n                url = uses[i].getAttributeNS(xlinkNS, 'href').split('#');\n                base = url[0];\n                hash = url[1];\n                isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n                if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n                    // the use element is empty\n                    // if there is a reference to an external SVG, try to fetch it\n                    // use the optional fallback URL if there is no reference to an external SVG\n                    if (fallback && !base.length && hash && !document.getElementById(hash)) {\n                        base = fallback;\n                    }\n                    if (base.length) {\n                        // schedule updating xlink:href\n                        xhr = cache[base];\n                        if (xhr !== true) {\n                            // true signifies that prepending the SVG was not required\n                            setTimeout(attrUpdateFunc({\n                                useEl: uses[i],\n                                base: base,\n                                hash: hash\n                            }), 0);\n                        }\n                        if (xhr === undefined) {\n                            xhr = new Request();\n                            cache[base] = xhr;\n                            xhr.onload = onloadFunc(xhr);\n                            xhr.onerror = onErrorTimeout(xhr);\n                            xhr.ontimeout = onErrorTimeout(xhr);\n                            xhr.open('GET', base);\n                            xhr.send();\n                            inProgressCount += 1;\n                        }\n                    }\n                } else {\n                    if (!isHidden) {\n                        if (cache[base] === undefined) {\n                            // remember this URL if the use element was not empty and no request was sent\n                            cache[base] = true;\n                        } else if (cache[base].onload) {\n                            // if it turns out that prepending the SVG is not necessary,\n                            // abort the in-progress xhr.\n                            cache[base].abort();\n                            cache[base].onload = undefined;\n                            cache[base] = true;\n                        }\n                    }\n                }\n            }\n            uses = '';\n            inProgressCount += 1;\n            observeIfDone();\n        };\n        // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n        window.addEventListener('load', function winLoad() {\n            window.removeEventListener('load', winLoad, false); // to prevent memory leaks\n            tid = setTimeout(checkUseElems, 0);\n        }, false);\n    }\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svgxuse/svgxuse.js\n ** module id = 1\n ** module chunks = 0\n **/","export default class FileUploader {\n  /**\n   * File uploader.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    const labelSelector = options.labelSelector || element.dataset.label;\n    this.labelNode = element.parentNode.querySelector(labelSelector) || element.nextElementSibling;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('change', (event) => this.updateLabel(event));\n  }\n\n  /**\n   * Instantiates file uploader of the given element.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates file uploader in the given node.\n   * If the given element indicates that it's an file uploader (having `data-file-uploader` attribute), instantiates it.\n   * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fileInput !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-file-uploader]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Updates the label for the file name upon file selection.\n   * @param {Event} event The event triggering this method.\n   */\n  updateLabel(event) {\n    let fileName = '';\n    const element = this.element;\n\n    if (element.files && element.files.length > 1) {\n      fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n    } else {\n      fileName = event.target.value.split('\\\\').pop();\n    }\n\n    if (fileName) {\n      this.labelNode.textContent = fileName;\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} FileUploader#options\n * @property {string} [labelSelector] The CSS selector to find the label for the file name.\n */\n\n/**\n * The map associating DOM element and file uploader instance.\n * @type {WeakMap}\n */\nFileUploader.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/file-uploader.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class FabButton {\n  /**\n   * Floating action button.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a floting action button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('click', (event) => this.toggle(event));\n  }\n\n  /**\n   * Instantiates floating action buttons in the given element.\n   * If the given element indicates that it's an floating action button (having `data-fab` attribute), instantiates it.\n   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fab !== undefined) {\n      this.create(target);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, '[data-fab]');\n        if (element && !this.components.has(element)) {\n          this.create(element).toggle(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Toggles this floating action button.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    if (this.element.dataset.state === 'closed') {\n      this.element.dataset.state = 'open';\n    } else {\n      this.element.dataset.state = 'closed';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Instantiates floating action button of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n}\n\n/**\n * The map associating DOM element and floating action button instance.\n * @type {WeakMap}\n */\nFabButton.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/fab.js\n **/","const matchesFuncName = [\n  'matches',\n  'webkitMatchesSelector',\n  'msMatchesSelector',\n].filter((name) => typeof document.documentElement[name] === 'function')[0];\n\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()`.\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  if (typeof event.target[matchesFuncName] === 'function') {\n    if (event.target[matchesFuncName](selector)) {\n      // If event target itself matches the given selector, return it\n      return event.target;\n    } else if (event.target[matchesFuncName](selector + ' *')) {\n      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n      for (let traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n        if (traverse[matchesFuncName](selector)) {\n          return traverse;\n        }\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/event-matches.js\n **/","export default function on(element, ...args) {\n  element.addEventListener(...args);\n  return {\n    release() {\n      element.removeEventListener(...args);\n      return null;\n    },\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/misc/on.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class ContentSwitcher {\n  /**\n   * Set of content switcher buttons.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorButton: 'input[type=\"radio\"], .bx--content-switcher__btn',\n      selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n      classActive: 'bx--content-switcher--selected',\n      eventBeforeSelected: 'content-switcher-beingselected',\n      eventAfterSelected: 'content-switcher-selected',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n\n    [... element.querySelectorAll('input')].forEach((input) => {\n      if (input.checked) this._changeActive(input);\n    });\n  }\n\n  /**\n   * Instantiates a set of content switcher buttons of the given element.\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates content switcher button sets in the given node.\n   * If the given element indicates that it's an content switcher button set (having `data-content-switcher` attribute), instantiates it.\n   * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n   * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.contentSwitcher !== undefined) {\n      this.create(target, options);\n    } else {\n      [... document.querySelectorAll('[data-content-switcher]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Handles click on content switcher button set.\n   * If the click is on a content switcher button, activates it.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const button = eventMatches(event, this.options.selectorButton);\n\n    if (button) {\n      this.setActive(button);\n    }\n  }\n\n  /**\n   * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n   * @private\n   * @param {HTMLElement} item The button to be selected.\n   */\n  _changeActive(item) {\n    // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n    const itemLink = item.querySelector(this.options.selectorLink);\n    if (itemLink) {\n      [... this.element.querySelectorAll(this.options.selectorLink)].forEach((link) => {\n        if (link !== itemLink) {\n          link.setAttribute('aria-selected', 'false');\n        }\n      });\n      itemLink.setAttribute('aria-selected', 'true');\n    }\n\n    const selectorButtons = [... this.element.querySelectorAll(this.options.selectorButton)];\n\n    selectorButtons.forEach((button) => {\n      if (button !== item) {\n        toggleClass(button, this.options.classActive, false);\n        [... button.ownerDocument.querySelectorAll(button.dataset.target)].forEach(element => element.setAttribute('hidden', ''));\n      }\n    });\n\n    toggleClass(item, this.options.classActive, true);\n    [... item.ownerDocument.querySelectorAll(item.dataset.target)].forEach(element => element.removeAttribute('hidden'));\n  }\n\n  /**\n   * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @typedef {Object} ContentSwitcher~cancelError\n   * @property {boolean} canceled `true` always.\n   * @property {boolean} item The content switcher button that was about to be selected.\n   */\n\n  /**\n   * The callback called once switching is finished or is canceled.\n   * @callback ContentSwitcher~setActiveCallback\n   * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n   */\n\n  /**\n   * Selects a content switcher button.\n   * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n   * DOM elements associated with unselected buttons in the same way will be hidden.\n   * @param {HTMLElement} item The button to be selected.\n   * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n   */\n  setActive(item, callback) {\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: { item },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeActive(item);\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item },\n      }));\n      if (callback) {\n        callback(null, item);\n      }\n    } else {\n      const error = new Error('Switching active item has been canceled.');\n      error.canceled = true;\n      error.item = item;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} ContentSwitcher#options\n * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n * @property {string} [classActive] The CSS class for switcher button's selected state.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a switcher button is selected.\n *   Cancellation of this event stops selection of content switcher button.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n */\n\n/**\n * The map associating DOM element and content switcher set instance.\n * @type {WeakMap}\n */\nContentSwitcher.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/content-switcher.js\n **/","Array.from = Array.from || function fromArray(a) {\n  return Array.prototype.slice.call(a);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/array-from.js\n **/","Object.assign = Object.assign || function assignObject(inDst) {\n  if (inDst == null) { // eslint-disable-line eqeqeq\n    // Throw if the given destination is null or undefined\n    throw new TypeError('Can\\'t convert to object: ${dst}');\n  }\n\n  const dst = Object(inDst);\n\n  [... arguments].slice(1).forEach((src) => {\n    Object.keys(src).forEach((prop) => {\n      dst[prop] = src[prop];\n    });\n  });\n\n  return dst;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/object-assign.js\n **/","export default function toggleClass(element, name, add) {\n  if (element.classList.contains(name) === !add) {\n    element.classList[add ? 'add' : 'remove'](name);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/toggle-class.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/math-sign';\nimport '../polyfills/object-assign';\nimport ContentSwitcher from './content-switcher';\n\nexport default class Tab extends ContentSwitcher {\n  /**\n   * Container of tabs.\n   * @extends ContentSwitcher\n   * @param {HTMLElement} element The element working as a container of tabs.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  constructor(element, options = {}) {\n    super(element, Object.assign({\n      selectorMenu: '.bx--tabs__nav',\n      selectorTrigger: '.bx--tabs__trigger',\n      selectorTriggerText: '.bx--tabs__trigger-text',\n      selectorButton: '.bx--tabs__nav-item',\n      selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n      selectorLink: '.bx--tabs__nav-link',\n      classActive: 'bx--tabs--selected',\n      classHidden: 'bx--tabs--hidden',\n      eventBeforeSelected: 'tab-beingselected',\n      eventAfterSelected: 'tab-selected',\n    }, options));\n\n    this.element.addEventListener('keydown', (event) => this.handleKeyDown(event));\n\n    const selected = this.element.querySelector(this.options.selectorButtonSelected);\n    if (selected) {\n      this.updateTriggerText(selected);\n    }\n  }\n\n  /**\n   * Instantiates tab containers in the given node.\n   * If the given element indicates that it's an tab container (having `data-tabs` attribute), instantiates it.\n   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-tabs]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  _changeActive(item) {\n    super._changeActive(item);\n    this.updateTriggerText(item);\n  }\n\n  /**\n   * Handles click on tab container.\n   * * If the click is on a tab, activates it.\n   * * If the click is on the button to open the drop down menu, does so.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    super.handleClick(event);\n    const button = eventMatches(event, this.options.selectorButton);\n    const trigger = eventMatches(event, this.options.selectorTrigger);\n    if (button) {\n      super.handleClick(event);\n      this.updateMenuState();\n    }\n    if (trigger) {\n      this.updateMenuState();\n    }\n  }\n\n  /**\n   * Handles arrow keys on tab container.\n   * * Up/Left keys are used to go to previous tab.\n   * * Down/Right keys are used to go to next tab.\n   * @param {Event} event The event triggering this method.\n   */\n  handleKeyDown(event) {\n    const triggerNode = this.element.querySelector(this.options.selectorTrigger);\n    if (triggerNode && triggerNode.offsetParent) {\n      return;\n    }\n\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n\n    if (direction) {\n      const buttons = [... this.element.querySelectorAll(this.options.selectorButton)];\n      const button = this.element.querySelector(this.options.selectorButtonSelected);\n      const nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * buttons.length;\n      this.setActive(buttons[nextIndexLooped], (error, item) => {\n        if (item) {\n          const link = item.querySelector(this.options.selectorLink);\n          if (link) {\n            link.focus();\n          }\n        }\n      });\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Shows/hides the drop down menu used in narrow mode.\n   */\n  updateMenuState() {\n    this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n  }\n\n  /**\n   * Updates the text indicating the currently selected tab item.\n   * @param {HTMLElement} target The newly selected tab item.\n   */\n  updateTriggerText(target) {\n    this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Tab#options\n * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n * @property {string} [selectorButton] The CSS selector to find tab containers.\n * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n * @property {string} [classActive] The CSS class for tab's selected state.\n * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a tab is selected.\n *   Cancellation of this event stops selection of tab.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n */\n\n/**\n * The map associating DOM element and tab container instance.\n * @type {WeakMap}\n */\nTab.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/tabs.js\n **/","Math.sign = Math.sign || function sign(x) {\n  const n = +x;\n  return n === 0 ? n : n / Math.abs(n);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/math-sign.js\n **/","import '../polyfills/array-from';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class OverflowMenu {\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.handleDocumentClick(event));\n\n    /**\n     * The handle to release keypress event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentKeyPress = on(this.element.ownerDocument, 'keypress', (event) => this.handleKeyPress(event));\n  }\n\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.overflowMenu !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-overflow-menu]')].forEach(element => this.create(element));\n    }\n  }\n\n  handleDocumentClick(event) {\n    const isOfSelf = this.element.contains(event.target);\n    const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n    if (isOfSelf && this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n  }\n\n  handleKeyPress(event) {\n    const key = event.key || event.which;\n    if (key === 'Enter' || key === 13) {\n      const isOfSelf = this.element.contains(event.target);\n      const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n      if (isOfSelf && this.element.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    if (this.hDocumentKeyPress) {\n      this.hDocumentKeyPress = this.hDocumentKeyPress.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\nOverflowMenu.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/overflow-menu.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\n/**\n * @param {Element} element The element to obtain transition duration from.\n * @returns {number} The transition duration of the given property set in the given element.\n */\nfunction getTransitionDuration(element) {\n  const computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n  const durations = computedStyle.transitionDuration.split(/,\\s*/)\n    .map((transitionDuration) => parseFloat(transitionDuration))\n    .filter((duration) => !isNaN(duration));\n  return durations.length > 0 ? Math.max(...durations) : 0;\n}\n\nexport default class Modal {\n  /**\n   * Modal dialog.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      classVisible: 'is-visible',\n      classNoScroll: 'bx--noscroll',\n      eventBeforeShown: 'modal-beingshown',\n      eventAfterShown: 'modal-shown',\n      eventBeforeHidden: 'modal-beinghidden',\n      eventAfterHidden: 'modal-hidden',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookCloseActions();\n  }\n\n  /**\n   * Instantiates modal dialog of the given element.\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates modal dialogs in the given element.\n   * If the given element indicates that it's an modal dialog (having `data-modal` attribute), instantiates it.\n   * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n   * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.modal !== undefined) {\n      this.create(target, options);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, '[data-modal-target]');\n\n        if (element) {\n          event.delegateTarget = element;\n\n          const modalElements = [... element.ownerDocument.querySelectorAll(element.dataset.modalTarget)];\n          if (modalElements.length > 1) {\n            throw new Error('Target modal must be unique.');\n          }\n\n          if (modalElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n\n            const modal = this.create(modalElements[0], options);\n            modal.show(event, (error, shownAlready) => {\n              if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n                modal.element.focus();\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Adds event listeners for closing this dialog.\n   */\n  hookCloseActions() {\n    this.element.addEventListener('click', (event) => {\n      if (event.currentTarget === event.target) this.hide(event);\n    });\n\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n\n    this.keydownHandler = (event) => {\n      if (event.which === 27) {\n        this.hide(event);\n      }\n    };\n\n    this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\n    [... this.element.querySelectorAll('[data-modal-close]')].forEach((element) => {\n      element.addEventListener('click', (event) => {\n        this.hide(event);\n      });\n    });\n  }\n\n  /**\n   * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n   * @private\n   * @param {boolean} visible `true` to make this modal dialog visible.\n   * @param {Function} callback Callback called when change in state completes.\n   */\n  _changeState(visible, callback) {\n    let finished;\n    const finishedTransition = () => {\n      if (!finished) {\n        finished = true;\n        this.element.removeEventListener('transitionend', finishedTransition);\n        callback();\n      }\n    };\n\n    this.element.addEventListener('transitionend', finishedTransition);\n    const transitionDuration = getTransitionDuration(this.element);\n    toggleClass(this.element, this.options.classVisible, visible);\n    toggleClass(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n    if (transitionDuration === 0) {\n      finishedTransition();\n    }\n  }\n\n  /**\n   * The callback called once showing/hiding this dialog is finished or is canceled.\n   * @callback Modal~stateChangeCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Shows this modal dialog.\n   * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  show(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.delegateTarget || launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeShown, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(true, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterShown, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Showing dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  /**\n   * Hides this modal dialog.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  hide(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (!this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(false, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterHidden, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Hiding dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Modal#options\n * @property {string} [classVisible] The CSS class for the visible state.\n * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n * @property {string} [eventBeforeShown]\n *   The name of the custom event fired before this modal is shown.\n *   Cancellation of this event stops showing the modal.\n * @property {string} [eventAfterShown]\n *   The name of the custom event telling that modal is sure shown\n *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n * @property {string} [eventBeforeHidden]\n *   The name of the custom event fired before this modal is hidden.\n *   Cancellation of this event stops hiding the modal.\n * @property {string} [eventAfterHidden]\n *   The name of the custom event telling that modal is sure hidden\n *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n */\n\n/**\n * The map associating DOM element and modal instance.\n * @type {WeakMap}\n */\nModal.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/modals.js\n **/","const missingNativeCustomEvent = (() => {\n  try {\n    new CustomEvent('test-event'); // eslint-disable-line no-new\n  } catch (error) {\n    return true;\n  }\n})();\nif (missingNativeCustomEvent) {\n  window.CustomEvent = function CustomEvent(type, init = {}) {\n    const event = document.createEvent('HTMLEvents');\n    event.initEvent(type, init.bubbles, init.cancelable);\n    if (init.detail) {\n      event.detail = init.detail;\n    }\n    return event;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/custom-event.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class HeaderNav {\n  /**\n   * Header with taxonomy menu.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorTriggerLabel: '.current-taxonomy',\n      classActive: 'taxonomy-nav--active',\n      selectorMenu: '.taxonomy-menu',\n      selectorItem: '.taxonomy-item',\n      selectorItemLink: '.taxonomy-item--taxonomy-menu',\n      selectorLabel: '.taxonomy-item__label',\n      eventBeforeShown: 'header-beingshown',\n      eventAfterShown: 'header-shown',\n      eventBeforeHidden: 'header-beinghidden',\n      eventAfterHidden: 'header-hidden',\n      eventBeforeSelected: 'header-beingselected',\n      eventAfterSelected: 'header-selected',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\n    this.element.addEventListener('keydown', (event) => this.toggleNav(event));\n\n    [... this.element.querySelectorAll(this.options.selectorItemLink)].forEach((item) => {\n      item.addEventListener('click', (e) => this.select(e));\n    });\n  }\n\n  /**\n   * Instantiates taxonomy menus in the given element.\n   * If the given element indicates that it's an taxonomy menu (having `data-nav` attribute), instantiates it.\n   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.nav !== undefined) {\n      this.create(target, options);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, '[data-nav-target]');\n\n        if (element) {\n          const headerElements = [... element.ownerDocument.querySelectorAll(element.dataset.navTarget)];\n          if (headerElements.length > 1) {\n            throw new Error('Target header must be unique.');\n          }\n\n          if (headerElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n            this.create(headerElements[0], options).toggleNav(event);\n          }\n        }\n      };\n\n      target.addEventListener('click', handler);\n      target.addEventListener('keydown', handler);\n\n      return {\n        release: () => {\n          target.removeEventListener('keydown', handler);\n          target.removeEventListener('click', handler);\n        },\n      };\n    }\n  }\n\n  /**\n   * Instantiates taxonomy menu of the given element.\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Shows/hides this taxonomy menu.\n   * @param {Event} event The event triggering this function.\n   */\n  toggleNav(event) {\n    const isActive = this.element.classList.contains(this.options.classActive);\n    let add;\n    if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n      // Toggle button or ESC key on nav\n      add = !isActive;\n    } else if (event.type === 'keydown' && event.which === 27) {\n      // Down arrow on launch button\n      add = false;\n    } else {\n      return;\n    }\n\n    const launchingElement = eventMatches(event, '[data-nav-target]') || event.currentTarget;\n    if (launchingElement.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    const eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n      bubbles: true,\n      cancelable: true,\n      detail: { launchingElement: launchingElement },\n    });\n    const defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\n    if (add) {\n      this.triggerNode = launchingElement;\n      this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n    }\n\n    if (defaultNotPrevented) {\n      this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n      (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n      this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n        bubbles: true,\n        cancelable: true,\n        detail: { launchingElement: launchingElement },\n      }));\n    }\n  }\n\n  /**\n   * Selects a menu item.\n   * @param {Event} event The event triggering this function.\n   */\n  select(event) {\n    const activatedElement = event.currentTarget;\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        initiatingEvent: event,\n        itemElement: activatedElement,\n      },\n    });\n\n    if (this.element.dispatchEvent(eventStart)) {\n      [... this.element.querySelectorAll(this.options.selectorItem)].forEach((element) => {\n        if (element.contains(activatedElement)) {\n          element.classList.add('selected');\n        } else if (element.classList.contains('selected')) {\n          element.classList.remove('selected');\n        }\n      });\n      activatedElement.classList.add('selected');\n      if (this.triggerLabelNode) {\n        this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n      }\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { itemElement: activatedElement },\n      }));\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n  }\n}\n\n/**\n * The component options.\n * @member {Object} HeaderNav#options\n * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n * @property {string} [selectorItem] The CSS selector to find the menu items.\n * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n * @property {string} [classActive] The CSS class for the visible state.\n * @property {string} [eventBeforeShown]\n *   The name of the custom event fired before this taxonomy menu is shown.\n *   Cancellation of this event stops showing the taxonomy menu.\n * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n * @property {string} [eventBeforeHidden]\n *   The name of the custom event fired before this taxonomy menu is hidden.\n *   Cancellation of this event stops hiding the taxonomy menu.\n * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a menu item is selected.\n *   Cancellation of this event stops the selection.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n */\n\n/**\n * The map associating DOM element and taxonomy menu instance.\n * @type {WeakMap}\n */\nHeaderNav.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/header.js\n **/","export default class Toolbars {\n  /**\n   * Search button in tool bar.\n   * @implements Component\n   * @param {HTMLElement} element The element working as an search button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleActionClick(event));\n  }\n\n  /**\n   * Instantiates a search button of the given element.\n   * @param {HTMLElement} element The element working as a search button.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates search buttons in the given node.\n   * If the given element indicates that it's an search button (having `data-list-icons-search-action-target` attribute), instantiates it.\n   * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n   * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.listIconsSearchActionTarget !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-list-icons-search-action-target]')].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Show/hide search box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleActionClick(event) {\n    const searchActionNode = event.currentTarget;\n\n    if (searchActionNode.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    this.element.classList.toggle('show-search');\n    if (this.searchFieldNode) {\n      this.searchFieldNode.classList.toggle('show-search');\n      this.searchFieldNode.value = '';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and search button instance.\n * @type {WeakMap}\n */\nToolbars.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/toolbars.js\n **/","import toggleClass from '../polyfills/toggle-class';\n\nexport default class Loading {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} options The component options.\n   * @param {boolean} options.active `true` if this spinner should roll.\n   */\n  constructor(element, options = { active: true }) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.active = 'active' in options ? options.active : true;\n    this.ie = false;\n\n    // Check if browser is Internet Explorer\n    if (options.ie || window.ActiveXObject || 'ActiveXObject' in window) {\n      this.ie = true;\n      this.element.classList.add('bx--loading--ie');\n    }\n\n    this.constructor.components.set(this.element, this);\n\n    // Initialize spinner\n    this.set(this.active);\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-loading]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Sets active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  set(active) {\n    if (typeof active !== 'boolean') {\n      throw new TypeError('set expects a boolean.');\n    }\n\n    this.active = active;\n\n    if (this.ie) {\n      toggleClass(this.element, 'bx--loading--stop--ie', !this.active);\n    }\n    toggleClass(this.element, 'bx--loading--stop', !this.active);\n\n    return this;\n  }\n\n  /**\n   * Toggles active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  toggle() {\n    return this.set(!this.active);\n  }\n\n  /**\n   * @returns {boolean} `true` if this spinner is rolling roll.\n   */\n  isActive() {\n    return this.active;\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and spinner instance.\n * @type {WeakMap}\n */\nLoading.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/loading.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class Dropdown {\n  /**\n   * A selector with drop downs.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorItem: '[data-option] > .bx--dropdown__link',\n      selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n      classSelected: 'bx--dropdown--selected',\n      eventBeforeSelected: 'dropdown-beingselected',\n      eventAfterSelected: 'dropdown-selected',\n    }, options);\n\n    if (this.element.dataset.dropdown !== 'navigation') {\n      this.element.dataset.dropdown = '';\n    }\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.toggle(event));\n\n    this.element.addEventListener('keypress', (event) => this.toggle(event));\n    this.element.addEventListener('click', (event) => this.selected(event));\n  }\n\n  /**\n   * Instantiates selector of the given element.\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates selectors in the given node.\n   * If the given element indicates that it's an selector (having `data-dropdown` attribute), instantiates it.\n   * Otherwise, instantiates selectors by searching for selectors in the given node.\n   * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-dropdown]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Opens and closes the dropdown menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (event.which === 13 || event.type === 'click') {\n      const isOfSelf = this.element.contains(event.target);\n\n      if (isOfSelf) {\n        this.element.classList.toggle('bx--dropdown--open');\n      } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n        this.element.classList.remove('bx--dropdown--open');\n      }\n    }\n  }\n\n  /**\n   * Handles clicking on the dropdown options, doing the following:\n   * * Change Dropdown text to selected option.\n   * * Remove selected option from options when selected.\n   * * Emit custom events.\n   * @param {Event} event The event triggering this method.\n   */\n  selected(event) {\n    const activatedElement = event.target;\n    if (activatedElement.parentElement.dataset.option !== undefined) {\n      const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item: activatedElement },\n      });\n\n      if (this.element.dispatchEvent(eventStart)) {\n        if (this.element.dataset.dropdown !== 'navigation') {\n          this.element.firstElementChild.textContent = activatedElement.textContent;\n          activatedElement.classList.add(this.options.classSelected);\n        }\n        this.element.dataset.value = activatedElement.parentElement.dataset.value;\n        [... this.element.querySelectorAll(this.options.selectorItemSelected)].forEach((item) => {\n          if (activatedElement !== item) {\n            item.classList.remove(this.options.classSelected);\n          }\n        });\n\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n          bubbles: true,\n          cancelable: true,\n          detail: { item: activatedElement },\n        }));\n      }\n    }\n  }\n}\n\n\n/**\n * The component options.\n * @member {Object} Dropdown#options\n * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n * @property {string} [classSelected] The CSS class for the selected dropdown item.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a drop down item is selected.\n *   Cancellation of this event stops selection of drop down item.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n */\n\n/**\n * The map associating DOM element and selector instance.\n * @type {WeakMap}\n */\nDropdown.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/dropdown.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/math-sign';\n\nexport default class Card {\n  /**\n   * The container for cards.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n    this.options = Object.assign({\n      selectorCard: '.bx--card',\n    }, options);\n    this.constructor.components.set(this.element, this);\n    this.element.addEventListener('keydown', (event) => this.cardKeyPress(event));\n  }\n\n  /**\n   * Instantiates card container of the given element.\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates card container in the given node.\n   * If the given element indicates that it's an card container (having `data-card-list` attribute), instantiates it.\n   * Otherwise, instantiates card containers by searching for card containers in the given node.\n   * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.cardList !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-card-list]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Goes back/forward among cards,\n   * right arrow key for going forward, left arrow key for going backward.\n   * @param {Event} event The event triggering this method.\n   */\n  cardKeyPress(event) {\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n    const card = eventMatches(event, this.options.selectorCard);\n\n    if (direction && card && card === document.activeElement) {\n      const cards = [... this.element.querySelectorAll(this.options.selectorCard)];\n      const nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * cards.length;\n      cards[nextIndexLooped].focus();\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Card#options\n * @property {string} [selectorCard] The CSS selector to find cards.\n */\n\n/**\n * The map associating DOM element and card list instance.\n * @type {WeakMap}\n */\nCard.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/card.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\n\nexport default class NumberInput {\n  /**\n   * Number input UI.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a number input UI.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = options;\n    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n    // Also <svg> does not seems to have `Element.classList`.\n    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', (event) => this.handleClick(event));\n    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates number input UI of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates number input UI in the given node.\n   * If the given element indicates that it's an number input UI (having `data-numberinput` attribute), instantiates it.\n   * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n   * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.numberinput !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-numberinput]')].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const state = event.currentTarget.classList;\n    const numberInput = this.element.querySelector('.bx--number__input');\n\n    if (state.contains('bx--number__arrow--icon-up')) {\n      if (this.options.ie) {\n        ++numberInput.value;\n      } else {\n        numberInput.stepUp();\n      }\n    } else if (state.contains('bx--number__arrow--icon-down')) {\n      if (this.options.ie) {\n        if (numberInput.value > 0) {\n          --numberInput.value;\n        }\n      } else {\n        numberInput.stepDown();\n      }\n    } else {\n      return;\n    }\n\n    // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n    numberInput.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      cancelable: false,\n    }));\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and number input UI instance.\n * @type {WeakMap}\n */\nNumberInput.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/number-input.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class Table {\n  /**\n   * Data table.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorTitle: '.bx--table__column-title',\n      selectorRow: '.bx--table__row',\n      selectorCheckbox: '.bx--checkbox',\n      classSortState: 'bx--table__column-title--rotated',\n      classCheckState: 'bx--table__row--checked',\n      eventBeforeSortToggled: 'table-sort-beingtoggled',\n      eventAfterSortToggled: 'table-sort-toggled',\n      eventBeforeCheckToggled: 'table-check-beingtoggled',\n      eventAfterCheckToggled: 'table-check-toggled',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates a data table of the given element.\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Sets up the given node to instantiate data tables in.\n   * If the given element indicates that it's an data table (having `data-table` attribute), instantiates it.\n   * Otherwise, lazily instantiates data table when it's clicked on.\n   * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.table !== undefined) {\n      this.create(target, options);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, '[data-table]');\n        if (element && !this.components.has(element)) {\n          this.create(element, options).handleClick(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles click on data table.\n   * * If the click is on a column title, toggles its sorting state.\n   * * If the click is on a check box, toggles the check box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const title = eventMatches(event, this.options.selectorTitle);\n    const row = eventMatches(event, this.options.selectorRow);\n    const checkbox = eventMatches(event, this.options.selectorCheckbox);\n    if (title) {\n      this.toggleState('Sort', title);\n    }\n    if (row && checkbox) {\n      this.toggleState('Check', row);\n    }\n  }\n\n  /**\n   * The callback called once toggling is finished or is canceled.\n   * @callback Table~toggleStateCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the toggling is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {HTMLElement} element The toggled element.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Toggles a sorting state or a check box's state.\n   * @param {string} type\n   *   Specifies what state to toggle:\n   *   * `\"Sort\"` for toggling a sorting state.\n   *   * `\"Check\"` for toggling a check box's state.\n   * @param {HTMLElement} element The DOM element to toggle its state.\n   * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n   */\n  toggleState(type, element, callback) {\n    const newState = !element.classList.contains(this.options[`class${type}State`]);\n    const eventStart = new CustomEvent(this.options[`eventBefore${type}Toggled`], {\n      bubbles: true,\n      cancelable: true,\n      detail: { newState },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (element.dispatchEvent(eventStart)) {\n      toggleClass(element, this.options[`class${type}State`], newState);\n      // this._changeActive(item);\n      element.dispatchEvent(new CustomEvent(this.options[`eventAfter${type}Toggled`], {\n        bubbles: true,\n        cancelable: true,\n        detail: { newState },\n      }));\n      if (callback) {\n        callback(null, element, newState);\n      }\n    } else {\n      const error = new Error('Toggling on table has been canceled.');\n      error.canceled = true;\n      error.element = element;\n      error.newState = newState;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Table#options\n * @property {string} [selectorTitle] The CSS selector to find column titles.\n * @property {string} [selectorRow] The CSS selector to find rows.\n * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n * @property {string} [classSortState] The CSS class for the sorting state.\n * @property {string} [classCheckState] The CSS class for the checked state.\n * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n */\n\n/**\n * The map associating DOM element and data table instance.\n * @type {WeakMap}\n */\nTable.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/table.js\n **/","import debounce from 'lodash.debounce';\n\nexport default class DetailPageHeader {\n\n  /**\n   * The Detail Page Header.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a page header.\n   * @param {Object} [options] The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    // Debounce scroll event calls to handleScroll\n    const debouncedScroll = debounce(this.handleScroll.bind(this), 50);\n\n    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n  }\n\n  /**\n   * Instantiates detail page header of the given element.\n   * @param {HTMLElement} element The element.\n   * @param {Object} [options] The component options.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates the detail page header in the given element.\n   * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n   * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n   * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.detailPageHeader !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-detail-page-header]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Adds class to header based on users position on the page\n   */\n  handleScroll() {\n    if (this.element.ownerDocument.defaultView.scrollY > 101) {\n      this.element.classList.add(this.options.slideUp);\n    } else {\n      this.element.classList.remove(this.options.slideUp);\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and detail page header instance.\n * @type {WeakMap}\n */\nDetailPageHeader.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/detail-page-header.js\n **/","/**\n * lodash 4.0.6 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @type {Function}\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n */\nvar now = Date.now;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide an options object to indicate whether `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent calls\n * to the debounced function return the result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime = 0,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (!lastCallTime || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    clearTimeout(timerId);\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastCallTime = lastInvokeTime = 0;\n    lastArgs = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3);\n * // => 3\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3');\n * // => 3\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.debounce/index.js\n ** module id = 23\n ** module chunks = 0\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class LeftNav {\n  /**\n   * Left Navigation.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      selectorLeftNav: '[data-left-nav]',\n      selectorLeftNavList: '[data-left-nav-list]',\n      selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n      selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n      selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n      selectorLeftNavListItem: '[data-left-nav-item]',\n      selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n      selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n      selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n      selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n      selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n      selectorLeftNavSection: '[data-left-nav-section]',\n      selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n      selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n      selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n      selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n      // CSS Class Selectors\n      classActiveLeftNav: 'bx--left-nav--active',\n      classActiveLeftNavListItem: 'bx--left-nav-list__item--active',\n      classActiveTrigger: 'bx--left-nav__trigger--active',\n      classExpandedLeftNavListItem: 'bx--left-nav-list__item--expanded',\n      classFlyoutDisplayed: 'bx--left-nav-list--flyout--displayed',\n      classItemHasChildren: 'bx--left-nav-list__item--has-children',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookOpenActions();\n    this.hookListItemsEvents();\n    this.animateInNav();\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n  }\n\n  /**\n   * Instantiates a left navigation of the given element.\n   * @param {HTMLElement} element The element working as the left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a left navigation in the given node.\n   * If the given element indicates that it's a left navigation (having `data-left-nav-container` attribute), instantiates it.\n   * Otherwise, instantiates left navigation by searching for left navigation in the given node.\n   * @param {Node} target The DOM node to instantiate left navigation in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-left-nav-container]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Closes the menu.\n   */\n   closeMenu() {\n     this.element.classList.remove(this.options.classActiveLeftNav);\n     this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.remove(this.options.classActiveTrigger);\n   }\n\n   /**\n    * Toggles the menu to open and close.\n    */\n   toggleMenu() {\n     this.element.classList.toggle(this.options.classActiveLeftNav);\n     this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.toggle(this.options.classActiveTrigger);\n   }\n\n  /**\n   * Adds a animation delay to the list items as they appear on page load.\n   */\n  animateInNav() {\n    let counter = 0.1;\n    [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n      item.classList.add('animate');\n      item.style.animationDelay = `${counter}s`;\n      counter += 0.05;\n    });\n    setTimeout(() => {\n      [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n        item.classList.remove('animate');\n      });\n    }, 1000);\n  }\n\n  /**\n   * Adds event listeners for showing and hiding the left navigation\n   */\n  hookOpenActions() {\n    const openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n    const closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n\n    openBtn.addEventListener('click', () => {\n      this.element.tabIndex = '0';\n      this.toggleMenu();\n    });\n\n    openBtn.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.element.tabIndex = '0';\n        this.toggleMenu();\n      }\n    });\n\n    closeBtn.addEventListener('click', () => {\n      this.element.tabIndex = '-1';\n      this.closeMenu();\n    });\n\n    closeBtn.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.element.tabIndex = '-1';\n        this.closeMenu();\n      }\n    });\n\n    this.element.ownerDocument.addEventListener('keydown', (evt) => {\n      if ((evt.which === 27) && this.element.classList.contains(this.options.classActiveLeftNav)) {\n        this.closeMenu();\n      }\n    });\n  }\n\n  /**\n   * Adds event listeners to list items\n   */\n  hookListItemsEvents() {\n    const leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n    leftNavList.addEventListener('click', (evt) => {\n      const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n      if (leftNavItem) {\n        const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n        const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n        const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n        if (flyoutItem) {\n          this.addActiveListItem(flyoutItem);\n        } else if (childItem) {\n          if (childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n            const flyoutMenu = childItem.querySelector(this.options.selectorLeftNavFlyoutMenu);\n            flyoutMenu.classList.toggle(this.options.classFlyoutDisplayed);\n          } else {\n            this.addActiveListItem(childItem);\n          }\n        } else if (hasChildren) {\n          this.handleNestedListClick(leftNavItem);\n        } else {\n          this.addActiveListItem(leftNavItem);\n        }\n      }\n    });\n    leftNavList.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n        if (leftNavItem) {\n          const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n          const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n          const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n          if (flyoutItem) {\n            this.addActiveListItem(flyoutItem);\n          } else if (childItem) {\n            if (!childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n              this.addActiveListItem(childItem);\n            }\n          } else if (hasChildren) {\n            this.handleNestedListClick(leftNavItem);\n          } else {\n            this.addActiveListItem(leftNavItem);\n          }\n        }\n      }\n    });\n    const flyouts = [... this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout)];\n    flyouts.forEach(flyout => {\n      flyout.addEventListener('mouseenter', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${flyout.offsetTop - this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${flyout.offsetLeft + Math.round(flyout.offsetWidth)}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.add(this.options.classFlyoutDisplayed);\n      });\n      flyout.addEventListener('mouseleave', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      });\n    });\n  }\n\n  /**\n   * Hides all flyout menus.\n   */\n  hideAllFlyoutMenus() {\n    const flyoutMenus = [... this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu)];\n    flyoutMenus.forEach(menu => {\n      menu.classList.remove(this.options.classFlyoutDisplayed);\n    });\n  }\n\n  /**\n   * Sets a list item as active.\n   * @param {Object} item The active list item.\n   */\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavAllListItems)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        if (!currentItem.contains(item)) {\n          currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n        } else {\n          currentItem.classList.add(this.options.classActiveLeftNavListItem);\n        }\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n    this.hideAllFlyoutMenus();\n    this.closeMenu();\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the left navigation when document is clicked outside the left navigation.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n    const isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n    const shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n    let flyoutOpen;\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      flyoutOpen = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.contains(this.options.classFlyoutDisplayed);\n    }\n    if (isOfSelf && this.element.tagName === 'A') {\n      evt.preventDefault();\n    }\n    if (shouldClose) {\n      this.closeMenu();\n    }\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      if (flyoutOpen && !isOfSelf && isOpen) {\n        this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      }\n    }\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n  handleNestedListClick(listItem) {\n    const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n    this.hideAllFlyoutMenus();\n    toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n    const listItems = [... listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n    listItems.forEach(item => {\n      if (isOpen) {\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n      } else {\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n      }\n    });\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n* The component options.\n * @member {Object} LeftNav#options\n * @property {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n * @property {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n * @property {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n * @property {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n * @property {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n * @property {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n * @property {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n * @property {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n * @property {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n * @property {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n * @property {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n * @property {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n * @property {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n * @property {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n * @property {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n * @property {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n * @property {string} [options.classItemHasChildren] The class name for when a list item has children.\n */\n\n/**\n * The map associating DOM element and left navigation instance.\n * @type {WeakMap}\n */\nLeftNav.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\n\nexport default class UnifiedHeader {\n\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      // CSS Class Selectors\n    }, options);\n    this.constructor.components.set(this.element, this);\n  }\n\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-unified-header]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  release() {\n    if (this.handleDocumentClick) {\n      this.element.ownerDocument.removeEventListener('click', (evt) => this.handleDocumentClick(evt));\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and left navigation instance.\n * @type {WeakMap}\n */\nUnifiedHeader.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/unified-header.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class InlineLeftNav {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} options The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      selectorLeftNavList: '[data-inline-left-nav-list]',\n      selectorLeftNavNestedList: '[data-inline-left-nav-nested-list]',\n      selectorLeftNavListItem: '[data-inline-left-nav-item]',\n      selectorLeftNavListItemLink: '[data-inline-left-nav-item-link]',\n      selectorLeftNavNestedListItem: '[data-inline-left-nav-nested-item]',\n      // CSS Class Selectors\n      classActiveLeftNavListItem: 'left-nav-list__item--active',\n      classExpandedLeftNavListItem: 'left-nav-list__item--expanded',\n    }, options);\n\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n    this.hookListItemsEvents();\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-inline-left-nav]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  hookListItemsEvents() {\n    const leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n    leftNavList.addEventListener('click', (evt) => {\n      const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n      if (leftNavItem) {\n        const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n        const hasChildren = leftNavItem.classList.contains('left-nav-list__item--has-children');\n        if (childItem) {\n          this.addActiveListItem(childItem);\n        } else if (hasChildren) {\n          this.handleNestedListClick(leftNavItem, evt);\n        } else {\n          this.addActiveListItem(leftNavItem);\n        }\n      }\n    });\n    [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n      item.addEventListener('keydown', (evt) => {\n        const leftNavItemWithChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n        if (leftNavItemWithChildren && evt.which === 13) {\n          this.handleNestedListClick(leftNavItemWithChildren);\n        }\n      });\n    });\n  }\n\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * The nested list is expanded and the icon is rotated.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n   handleNestedListClick(listItem, evt) {\n     const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n     if (!('leftNavItemLink' in evt.target.dataset)) {\n       toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n     }\n     const list = listItem.querySelector(this.options.selectorLeftNavNestedList);\n     const listItems = [... list.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n     listItems.forEach(item => {\n       if (isOpen) {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n       } else {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n       }\n     });\n   }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and spinner instance.\n * @type {WeakMap}\n */\nInlineLeftNav.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/inline-left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class ProfileSwitcher {\n  /**\n   * Profile Switcher.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a profile switcher.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n   * @param {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n   * @param {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n   * @param {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n   * @param {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n   * @param {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n   * @param {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      // Data Attribute selectors\n      selectorProfileSwitcher: '[data-profile-switcher]',\n      selectorToggle: '[data-profile-switcher-toggle]',\n      selectorMenu: '[data-switcher-menu]',\n      selectorAccount: '[data-switcher-account]',\n      selectorOrg: '[data-switcher-org]',\n      selectorSpace: '[data-switcher-space]',\n      selectorAccountDropdown: '[data-dropdown-account]',\n      selectorOrgDropdown: '[data-dropdown-org]',\n      selectorSpaceDropdown: '[data-dropdown-space]',\n      classSwitcherOpen: 'bx--account-switcher--open',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n    this.element.querySelector(this.options.selectorToggle).addEventListener('keypress', (event) => this.toggle(event));\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseenter', () => this.determineSwitcherValues(true));\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseleave', () => this.determineSwitcherValues(false));\n  }\n\n  /**\n   * Instantiates a profile switcher of the given element.\n   * @param {HTMLElement} element The element working as the profile switcher.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a profile switcher in the given node.\n   * If the given element indicates that it's a profile switcher (having `data-profile-switcher` attribute), instantiates it.\n   * Otherwise, instantiates profile switcher by searching for profile switcher in the given node.\n   * @param {Node} target The DOM node to instantiate profile switcher in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-profile-switcher]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Opens and closes the menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (event.which === 13) {\n      const isOfSelf = this.element.contains(event.target);\n      if (isOfSelf) {\n        this.element.classList.toggle(this.options.classSwitcherOpen);\n      } else if (!isOfSelf && this.element.classList.contains(this.options.classSwitcherOpen)) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      }\n    }\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the profile switcherwhen document is clicked outside the left navigation or\n   * the user clicks the profile switcher while it is open.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggle = this.element.ownerDocument.querySelector(this.options.selectorToggle).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    if (isOfSelf) {\n      if (isToggle && isOpen) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      } else if (isOpen) {\n        this.determineSwitcherValues();\n      } else {\n        this.element.classList.add(this.options.classSwitcherOpen);\n      }\n    } else {\n      this.element.classList.remove(this.options.classSwitcherOpen);\n    }\n  }\n\n  /**\n   * Handles logic to determine what text to display in profile switcher.\n   * If the text is over 25 characters long, truncate and add ellipses.\n   * Also adds logic to change the switcher width based on the width of the hovered\n   * profile switcher\n   * @param {boolean} isHovered boolean value passed by the event listener on bx--toggle.\n   */\n  determineSwitcherValues(isHovered) {\n    const nameElement = this.element.querySelector(this.options.selectorAccount);\n    const orgElement = this.element.querySelector(this.options.selectorOrg);\n    const spaceElement = this.element.querySelector(this.options.selectorSpace);\n    const menuElement = this.element.querySelector(this.options.selectorMenu);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    const nameDropdownValue = this.element.querySelector(this.options.selectorAccountDropdown).textContent;\n    const orgDropdownValue = this.element.querySelector(this.options.selectorOrgDropdown).textContent;\n    const spaceDropdownValue = this.element.querySelector(this.options.selectorSpaceDropdown).textContent;\n    let nameShort;\n    let orgShort;\n    let spaceShort;\n\n    if (isHovered && !isOpen) {\n      nameElement.textContent = nameDropdownValue;\n      orgElement.textContent = orgDropdownValue;\n      spaceElement.textContent = spaceDropdownValue;\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    } else {\n      if (nameDropdownValue.length > 25) {\n        nameShort = nameDropdownValue.substr(0, 25) + '...';\n        nameElement.textContent = nameShort;\n      } else {\n        nameElement.textContent = nameDropdownValue;\n      }\n\n      if (orgDropdownValue.length > 25) {\n        orgShort = orgDropdownValue.slice(0, 12) + '...' + orgDropdownValue.slice(-13);\n        orgElement.textContent = orgShort;\n      } else {\n        orgElement.textContent = orgDropdownValue;\n      }\n\n      if (spaceDropdownValue.length > 25) {\n        spaceShort = spaceDropdownValue.substr(0, 25) + '...';\n        spaceElement.textContent = spaceShort;\n      } else {\n        spaceElement.textContent = spaceDropdownValue;\n      }\n\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n* The component options..\n * @member {Object} ProfileSwitcher#options\n * @property {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n * @property {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n * @property {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n * @property {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n * @property {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n * @property {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n * @property {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n */\n\n/**\n * The map associating DOM element and profile switcher instance.\n * @type {WeakMap}\n */\nProfileSwitcher.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/profile-switcher.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class SearchWithOptions {\n  /**\n   * Search with Options.\n   * @implements Component\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorToggleLayoutBtn] The data attribute selector for the button that toggles between the layouts.\n   * @param {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.\n   * @param {string} [options.classHiddenContainer] The class selector for a hidden container.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorToggleLayoutBtn: '[data-search-toggle-btn]',\n      selectorIconContainer: '[data-search-toggle-layout]',\n      classHiddenContainer: 'bx--search__toggle-layout__container--hidden',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.querySelector(this.options.selectorToggleLayoutBtn).addEventListener('click', (evt) => this.toggleLayout(evt));\n  }\n\n  /**\n   * Instantiates a search component of the given element.\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a search component in the given node.\n   * If the given element indicates that it's a search component (having `data-search-with-options` attribute), instantiates it.\n   * Otherwise, instantiates the search component by searching for the search component in the given node.\n   * @param {Node} target The DOM node to instantiate the search component in. Should be a document or an element..\n   * @param {Object} [options] The component options\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-search-with-options]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Toggles between the grid and list layout.\n   * @param {Event} event The event triggering this method.\n   */\n  toggleLayout(evt) {\n    const btn = evt.currentTarget;\n    const iconContainers = [... btn.querySelectorAll(this.options.selectorIconContainer)];\n    iconContainers.forEach(container => {\n      const isHidden = container.classList.contains(this.options.classHiddenContainer);\n      toggleClass(container, this.options.classHiddenContainer, !isHidden);\n    });\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\nSearchWithOptions.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/search-with-options.js\n **/"],"sourceRoot":""}