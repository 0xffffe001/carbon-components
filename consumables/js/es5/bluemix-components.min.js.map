{"version":3,"sources":["webpack:///bluemix-components.min.js","webpack:///webpack/bootstrap 9502a81f9cbfd2d39551","webpack:///./consumables/js/es2015/index.js","webpack:///./~/svgxuse/svgxuse.js","webpack:///./consumables/js/es2015/file-uploader.js","webpack:///./consumables/js/es2015/fab.js","webpack:///./consumables/js/polyfills/event-matches.js","webpack:///./consumables/js/es2015/content-switcher.js","webpack:///./consumables/js/polyfills/array-from.js","webpack:///./consumables/js/polyfills/object-assign.js","webpack:///./consumables/js/polyfills/toggle-class.js","webpack:///./consumables/js/es2015/tabs.js","webpack:///./consumables/js/polyfills/math-sign.js","webpack:///./consumables/js/es2015/overflow-menu.js","webpack:///./consumables/js/es2015/modals.js","webpack:///./consumables/js/polyfills/custom-event.js","webpack:///./consumables/js/es2015/header.js","webpack:///./consumables/js/es2015/toolbars.js","webpack:///./consumables/js/es2015/loading.js","webpack:///./consumables/js/es2015/dropdown.js","webpack:///./consumables/js/es2015/card.js","webpack:///./consumables/js/es2015/number-input.js","webpack:///./consumables/js/es2015/table.js","webpack:///./consumables/js/es2015/detail-page-header.js","webpack:///./~/lodash.debounce/index.js"],"names":["BluemixComponents","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","DetailPageHeader","Table","NumberInput","Card","Dropdown","Loading","Toolbars","HeaderNav","Modal","OverflowMenu","Tab","ContentSwitcher","FileUploader","FabButton","settings","undefined","_fileUploader","_fileUploader2","_fab","_fab2","_contentSwitcher","_contentSwitcher2","_tabs","_tabs2","_overflowMenu","_overflowMenu2","_modals","_modals2","_header","_header2","_toolbars","_toolbars2","_loading","_loading2","_dropdown","_dropdown2","_card","_card2","_numberInput","_numberInput2","_table","_table2","_detailPageHeader","_detailPageHeader2","init","disableAutoInit","document","readyState","addEventListener","setTimeout","window","checkUseElems","tid","cache","create","debouncedCheck","clearTimeout","unobserveChanges","observeChanges","observer","MutationObserver","observe","documentElement","childList","subtree","attributes","disconnect","removeEventListener","ignore","xlinkNS","observeIfDone","inProgressCount","attrUpdateFunc","spec","base","useEl","setAttributeNS","hash","onloadFunc","xhr","svg","body","x","createElement","onload","innerHTML","responseText","getElementsByTagName","setAttribute","style","position","width","height","overflow","insertBefore","firstChild","onErrorTimeout","onerror","ontimeout","bcr","i","Request","isHidden","url","uses","fallback","XMLHttpRequest","withCredentials","XDomainRequest","length","getBoundingClientRect","getAttributeNS","split","left","right","top","bottom","getElementById","open","send","abort","winLoad","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","element","_this","this","options","arguments","nodeType","Node","ELEMENT_NODE","labelSelector","dataset","label","labelNode","parentNode","querySelector","nextElementSibling","constructor","components","set","event","updateLabel","fileName","files","multipleCaption","replace","pop","textContent","get","_this2","DOCUMENT_NODE","Error","fileInput","concat","querySelectorAll","forEach","WeakMap","_typeof","Symbol","iterator","_eventMatches","_eventMatches2","toggle","tagName","preventDefault","state","fab","_ret","handler","has","v","release","eventMatches","selector","matchesFuncName","traverse","currentTarget","filter","name","_toggleClass","_toggleClass2","assign","selectorButton","selectorButtonSelected","classActive","eventBeforeSelected","eventAfterSelected","handleClick","input","checked","_changeActive","button","setActive","item","itemLink","selectorLink","link","selectorButtons","ownerDocument","removeAttribute","callback","eventStart","CustomEvent","bubbles","cancelable","detail","dispatchEvent","error","canceled","_this3","contentSwitcher","a","slice","inDst","dst","src","keys","prop","toggleClass","add","classList","contains","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_ContentSwitcher","selectorMenu","selectorTrigger","selectorTriggerText","classHidden","handleKeyDown","selected","updateTriggerText","trigger","updateMenuState","triggerNode","offsetParent","direction","Left","Right","ArrowLeft","ArrowRight","keyIdentifier","buttons","nextIndex","Math","max","indexOf","nextIndexLooped","sign","focus","tabs","n","abs","handleDocumentClick","handleKeyPress","isOfSelf","shouldBeOpen","which","overflowMenu","getTransitionDuration","computedStyle","defaultView","getComputedStyle","durations","transitionDuration","map","parseFloat","duration","isNaN","apply","classVisible","classNoScroll","eventBeforeShown","eventAfterShown","eventBeforeHidden","eventAfterHidden","hookCloseActions","hide","keydownHandler","visible","finished","finishedTransition","launchingElement","_changeState","_this4","_this5","modal","modalElements","modalTarget","show","shownAlready","offsetWidth","offsetHeight","console","warn","missingNativeCustomEvent","type","createEvent","initEvent","selectorTriggerLabel","selectorItem","selectorItemLink","selectorLabel","menuNode","toggleNav","e","select","isActive","defaultNotPrevented","triggerLabelNode","activatedElement","initiatingEvent","itemElement","remove","nav","headerElements","navTarget","searchFieldNode","listIconsSearchActionTarget","handleActionClick","searchActionNode","active","ie","ActiveXObject","loading","selectorItemSelected","classSelected","dropdown","parentElement","option","firstElementChild","selectorCard","cardKeyPress","card","activeElement","cards","cardList","numberInput","stepUp","stepDown","numberinput","selectorTitle","selectorRow","selectorCheckbox","classSortState","classCheckState","eventBeforeSortToggled","eventAfterSortToggled","eventBeforeCheckToggled","eventAfterCheckToggled","title","row","checkbox","toggleState","newState","table","_lodash","_lodash2","slideUp","debouncedScroll","handleScroll","bind","scrollY","detailPageHeader","debounce","func","wait","invokeFunc","time","args","lastArgs","thisArg","lastThis","lastInvokeTime","result","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","flush","debounced","isInvoking","FUNC_ERROR_TEXT","toNumber","isObject","nativeMax","isFunction","tag","objectToString","funcTag","genTag","isObjectLike","isSymbol","symbolTag","NAN","other","valueOf","reTrim","isBinary","reIsBinary","test","reIsOctal","freeParseInt","reIsBadHex","parseInt","objectProto","toString","min","Date"],"mappings":"AAAA,GAAIA,mBACK,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDOM,SAASI,EAAQD,EAASH,GAE/B,YAiEA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GA/DvFG,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,IAETd,EAAQe,iBAAmBf,EAAQgB,MAAQhB,EAAQiB,YAAcjB,EAAQkB,KAAOlB,EAAQmB,SAAWnB,EAAQoB,QAAUpB,EAAQqB,SAAWrB,EAAQsB,UAAYtB,EAAQuB,MAAQvB,EAAQwB,aAAexB,EAAQyB,IAAMzB,EAAQ0B,gBAAkB1B,EAAQ2B,aAAe3B,EAAQ4B,UAAY5B,EAAQ6B,SAAWC,OE7C1SjC,EAAA,EAOA,IAAAkC,GAAAlC,EAAA,GF4CKmC,EAAiBxB,EAAuBuB,GE3C7CE,EAAApC,EAAA,GF+CKqC,EAAQ1B,EAAuByB,GE9CpCE,EAAAtC,EAAA,GFkDKuC,EAAoB5B,EAAuB2B,GEjDhDE,EAAAxC,EAAA,GFqDKyC,EAAS9B,EAAuB6B,GEpDrCE,EAAA1C,EAAA,IFwDK2C,EAAiBhC,EAAuB+B,GEvD7CE,EAAA5C,EAAA,IF2DK6C,EAAWlC,EAAuBiC,GE1DvCE,EAAA9C,EAAA,IF8DK+C,EAAWpC,EAAuBmC,GE7DvCE,EAAAhD,EAAA,IFiEKiD,EAAatC,EAAuBqC,GEhEzCE,EAAAlD,EAAA,IFoEKmD,EAAYxC,EAAuBuC,GEnExCE,EAAApD,EAAA,IFuEKqD,EAAa1C,EAAuByC,GEtEzCE,EAAAtD,EAAA,IF0EKuD,EAAS5C,EAAuB2C,GEzErCE,EAAAxD,EAAA,IF6EKyD,EAAgB9C,EAAuB6C,GE5E5CE,EAAA1D,EAAA,IFgFK2D,EAAUhD,EAAuB+C,GE/EtCE,EAAA5D,EAAA,IFmFK6D,EAAqBlD,EAAuBiD,GEjF3C5B,IF6GL7B,GEtFC6B,WFmGD7B,EE7FC4B,UFmGWM,aACZlC,EE9FC2B,aFoGcK,aACfhC,EE/FC0B,gBFqGiBU,aAClBpC,EEhGCyB,IFsGKa,aACNtC,EEjGCwB,aFuGcgB,aACfxC,EElGCuB,MFwGOmB,aACR1C,EEnGCsB,UFyGWsB,aACZ5C,EEpGCqB,SF0GUyB,aACX9C,EErGCoB,QF2GS4B,aACVhD,EEtGCmB,SF4GU+B,aACXlD,EEvGCkB,KF6GMkC,aACPpD,EExGCiB,YF8GaqC,aACdtD,EEzGCgB,MF+GOwC,aACRxD,EE1GCe,iBFgHkB2C,YElGpB,IAAMC,GAAO,WACN9B,EAAS+B,kBACZ1B,aAAUyB,OACV3B,aAAa2B,OACbvB,aAAgBuB,OAChBrB,aAAIqB,OACJnB,aAAamB,OACbjB,aAAMiB,OACNb,aAASa,OACTX,aAAQW,OACRT,aAASS,OACTP,aAAKO,OACLL,aAAYK,OACZH,aAAMG,OACND,aAAiBC,QAIO,aAAxBE,SAASC,WACXD,SAASE,iBAAiB,mBAAoBJ,GAI9CK,WAAWL,EAAM,IFoHb,SAAS1D,EAAQD;;;;;;CGzRvB,WACA,YACA,IAAAiE,eAAAF,iBAAA,CACA,GACAG,GACAC,EAFAC,EAAAxD,OAAAyD,OAAA,MAGAC,EAAA,WACAC,aAAAJ,GACAA,EAAAH,WAAAE,EAAA,MAEAM,EAAA,aAGAC,EAAA,WACA,GAAAC,EACAT,QAAAF,iBAAA,SAAAO,GAAA,GACAL,OAAAF,iBAAA,oBAAAO,GAAA,GACAL,OAAAU,kBACAD,EAAA,GAAAC,kBAAAL,GACAI,EAAAE,QAAAf,SAAAgB,iBACAC,WAAA,EACAC,SAAA,EACAC,YAAA,IAEAR,EAAA,WACA,IACAE,EAAAO,aACAhB,OAAAiB,oBAAA,SAAAZ,GAAA,GACAL,OAAAiB,oBAAA,oBAAAZ,GAAA,GACqB,MAAAa,QAGrBtB,SAAAgB,gBAAAd,iBAAA,qBAAAO,GAAA,GACAE,EAAA,WACAX,SAAAgB,gBAAAK,oBAAA,qBAAAZ,GAAA,GACAL,OAAAiB,oBAAA,SAAAZ,GAAA,GACAL,OAAAiB,oBAAA,oBAAAZ,GAAA,MAIAc,EAAA,8BACAlB,GAAA,WAuBA,QAAAmB,KAEAC,GAAA,EACA,IAAAA,GACAb,IAGA,QAAAc,GAAAC,GACA,kBACApB,EAAAoB,EAAAC,SAAA,GACAD,EAAAE,MAAAC,eAAAP,EAAA,iBAAAI,EAAAI,OAIA,QAAAC,GAAAC,GACA,kBACA,GAEAC,GAFAC,EAAAnC,SAAAmC,KACAC,EAAApC,SAAAqC,cAAA,IAEAJ,GAAAK,OAAA,KACAF,EAAAG,UAAAN,EAAAO,aACAN,EAAAE,EAAAK,qBAAA,UACAP,IACAA,EAAAQ,aAAA,sBACAR,EAAAS,MAAAC,SAAA,WACAV,EAAAS,MAAAE,MAAA,EACAX,EAAAS,MAAAG,OAAA,EACAZ,EAAAS,MAAAI,SAAA,SACAZ,EAAAa,aAAAd,EAAAC,EAAAc,aAEAzB,KAGA,QAAA0B,GAAAjB,GACA,kBACAA,EAAAkB,QAAA,KACAlB,EAAAmB,UAAA,KACA5B,KA3DA,GAAAI,GACAyB,EAEAtB,EACAuB,EACAC,EAEAC,EACAC,EACAC,EACAzB,EARA0B,EAAA,GAIAlC,EAAA,CAaA,IARArB,OAAAwD,iBACAL,EAAA,GAAAK,gBAEAL,EADAtF,SAAAsF,EAAAM,gBACAD,eAEAE,gBAAA7F,QAGAA,SAAAsF,EAAA,CA8CA,IAHA5C,IAEA+C,EAAA1D,SAAAyC,qBAAA,OACAa,EAAA,EAAuBA,EAAAI,EAAAK,OAAiBT,GAAA,GACxC,IACAD,EAAAK,EAAAJ,GAAAU,wBACiB,MAAA1C,GAEjB+B,GAAA,EAEAI,EAAAC,EAAAJ,GAAAW,eAAA1C,EAAA,QAAA2C,MAAA,KACAtC,EAAA6B,EAAA,GACA1B,EAAA0B,EAAA,GACAD,EAAAH,GAAA,IAAAA,EAAAc,MAAA,IAAAd,EAAAe,OAAA,IAAAf,EAAAgB,KAAA,IAAAhB,EAAAiB,OACAjB,GAAA,IAAAA,EAAAR,OAAA,IAAAQ,EAAAP,SAAAU,GAIAG,IAAA/B,EAAAmC,QAAAhC,IAAA/B,SAAAuE,eAAAxC,KACAH,EAAA+B,GAEA/B,EAAAmC,SAEA9B,EAAA1B,EAAAqB,GACAK,KAAA,GAEA9B,WAAAuB,GACAG,MAAA6B,EAAAJ,GACA1B,OACAG,SAC6B,GAE7B9D,SAAAgE,IACAA,EAAA,GAAAsB,GACAhD,EAAAqB,GAAAK,EACAA,EAAAK,OAAAN,EAAAC,GACAA,EAAAkB,QAAAD,EAAAjB,GACAA,EAAAmB,UAAAF,EAAAjB,GACAA,EAAAuC,KAAA,MAAA5C,GACAK,EAAAwC,OACAhD,GAAA,KAIA+B,IACAvF,SAAAsC,EAAAqB,GAEArB,EAAAqB,IAAA,EACyBrB,EAAAqB,GAAAU,SAGzB/B,EAAAqB,GAAA8C,QACAnE,EAAAqB,GAAAU,OAAArE,OACAsC,EAAAqB,IAAA,IAKA8B,EAAA,GACAjC,GAAA,EACAD,MAGApB,OAAAF,iBAAA,eAAAyE,KACAvE,OAAAiB,oBAAA,OAAAsD,GAAA,GACArE,EAAAH,WAAAE,EAAA,KACS,QH0SH,SAASjE,EAAQD,GAEtB,YAQA,SAASyI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCARhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MIpe5gBtH,EJ0eD,WIlelB,QAAAA,GAAYoI,GAAuB,GAAAC,GAAAC,KAAdC,EAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAAtI,IAC5BoI,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,CAEf,IAAMQ,GAAgBL,EAAQK,eAAiBR,EAAQS,QAAQC,KAC/DR,MAAKS,UAAYX,EAAQY,WAAWC,cAAcL,IAAkBR,EAAQc,mBAE5EZ,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAE9CF,EAAQhG,iBAAiB,SAAU,SAACkH,GAAD,MAAWjB,GAAKkB,YAAYD,KJ6jBhE,MA/DA9B,GAAaxH,IACXgI,IAAK,cAOL7I,MAAO,SIleEmK,GACV,GAAIE,GAAW,GACTpB,EAAUE,KAAKF,OAGnBoB,GADEpB,EAAQqB,OAASrB,EAAQqB,MAAMxD,OAAS,GAC9BmC,EAAQS,QAAQa,iBAAmB,IAAIC,QAAQ,UAAWvB,EAAQqB,MAAMxD,QAEzEqD,EAAM5B,OAAOvI,MAAMiH,MAAM,MAAMwD,MAGxCJ,IACFlB,KAAKS,UAAUc,YAAcL,MJse9BxB,IAAK,UACL7I,MAAO,WIleRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,cJsevCJ,IAAK,SACL7I,MAAO,SIlhBIiJ,EAASG,GACrB,MAAOD,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,EAASG,MJ+hBxDP,IAAK,OACL7I,MAAO,WIrhB8B,GAAA4K,GAAAzB,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAA6CxI,SAA7BuH,EAAOmB,QAAQqB,UAC1D5B,KAAK5F,OAAOgF,EAAQa,MAEpB4B,OAAArD,EAAKY,EAAO0C,iBAAiB,0BAAyBC,QAAQ,SAAAjC,GAAA,MAAW2B,GAAKrH,OAAO0F,EAASG,SJiiB1FvI,IAeT3B,cIhmBoB2B,EAsFrBA,EAAaoJ,WAAa,GAAIkB,UJ+gBxB,SAAShM,EAAQD,EAASH,GAE/B,YAcA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASsI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAdhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIoL,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU3L,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX0L,SAAyB1L,EAAIqK,cAAgBqB,OAAS,eAAkB1L,IAEtO0I,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MK/mBjiBoD,EAAAxM,EAAA,GLmnBKyM,EAAiB9L,EAAuB6L,GKjnBxBzK,ELunBJ,WKjnBf,QAAAA,GAAYmI,GAAS,GAAAC,GAAAC,IACnB,IADmBlB,EAAAkB,KAAArI,IACdmI,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAEtBe,MAAKF,QAAUA,EAEfE,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAE9CF,EAAQhG,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAKuC,OAAOtB,KLgtB1D,MAtEA9B,GAAavH,IACX+H,IAAK,SAOL7I,MAAO,SKhnBHmK,GACwB,MAAzBhB,KAAKF,QAAQyC,SACfvB,EAAMwB,iBAG2B,WAA/BxC,KAAKF,QAAQS,QAAQkC,MACvBzC,KAAKF,QAAQS,QAAQkC,MAAQ,OAE7BzC,KAAKF,QAAQS,QAAQkC,MAAQ,YLonB9B/C,IAAK,UACL7I,MAAO,WKhnBRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,cL0nBvCJ,IAAK,OACL7I,MAAO,WKhqBqB,GAAA4K,GAAAzB,KAAnBZ,EAAmBc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAVtG,SAAUsG,UAAA,EAC7B,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAElB,IAAIvC,EAAOe,WAAaC,KAAKC,cAAuCxI,SAAvBuH,EAAOmB,QAAQmC,IAC1D1C,KAAK5F,OAAOgF,OACP,IAAAuD,GAAA,WACL,GAAMC,GAAU,SAAC5B,GACf,GAAMlB,IAAU,EAAAuC,cAAarB,EAAO,aAChClB,KAAY2B,EAAKX,WAAW+B,IAAI/C,IAClC2B,EAAKrH,OAAO0F,GAASwC,OAAOtB,GAIhC,OADA5B,GAAOtF,iBAAiB,QAAS8I,IACjCE,GACEC,QAAS,iBAAM3D,GAAOnE,oBAAoB,QAAS2H,QAThD,mCAAAD,GAAA,YAAAV,EAAAU,IAAA,MAAAA,GAAAG,ML0rBNpD,IAAK,SACL7I,MAAO,SKrpBIiJ,GACZ,MAAOE,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,OLypB1CnI,IAST5B,cKvuBoB4B,EA6ErBA,EAAUmJ,WAAa,GAAIkB,UL+pBrB,SAAShM,EAAQD,GAEtB,YM1uBc,SAASiN,GAAahC,EAAOiC,GAI1C,GAA6C,kBAAlCjC,GAAM5B,OAAO8D,GAAiC,CACvD,GAAIlC,EAAM5B,OAAO8D,GAAiBD,GAEhC,MAAOjC,GAAM5B,MACR,IAAI4B,EAAM5B,OAAO8D,GAAiBD,EAAW,MAElD,IAAK,GAAIE,GAAWnC,EAAM5B,OAAQ+D,GAAYA,IAAanC,EAAMoC,cAAeD,EAAWA,EAASzC,WAClG,GAAIyC,EAASD,GAAiBD,GAC5B,MAAOE,INguBhBxM,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,IAETd,aM/uBuBiN,CANxB,IAAME,IACJ,UACA,wBACA,qBACAG,OAAO,SAACC,GAAD,MAAoD,kBAAnC1J,UAASgB,gBAAgB0I,KAAsB,IN2wBnE,SAAStN,EAAQD,EAASH,GAE/B,YAoBA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASgI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAtBhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MOvxBjiBoD,EAAAxM,EAAA,GP2xBKyM,EAAiB9L,EAAuB6L,EO1xB7CxM,GAAA,GACAA,EAAA,EACA,IAAA2N,GAAA3N,EAAA,GPgyBK4N,EAAgBjN,EAAuBgN,GO9xBvB9L,EPsyBE,WOxxBrB,QAAAA,GAAYqI,GAAuB,GAAAC,GAAAC,KAAdC,EAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAAvI,IAC5BqI,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,EAEfE,KAAKC,QAAUtJ,OAAO8M,QACpBC,eAAgB,mDAChBC,uBAAwB,qDACxBC,YAAa,iCACbC,oBAAqB,iCACrBC,mBAAoB,6BACnB7D,GAEHD,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAE9CA,KAAKF,QAAQhG,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAKgE,YAAY/C,QAEnEa,OAAArD,EAAKsB,EAAQgC,iBAAiB,WAAUC,QAAQ,SAACiC,GAC3CA,EAAMC,SAASlE,EAAKmE,cAAcF,KP29BzC,MA1JA9E,GAAazH,IACXiI,IAAK,cAQL7I,MAAO,SOxxBEmK,GACV,GAAMmD,IAAS,EAAA9B,cAAarB,EAAOhB,KAAKC,QAAQyD,eAE5CS,IACFnE,KAAKoE,UAAUD,MPmyBhBzE,IAAK,gBACL7I,MAAO,SO3xBIwN,GAAM,GAAA5C,GAAAzB,KAEZsE,EAAWD,EAAK1D,cAAcX,KAAKC,QAAQsE,aAC7CD,QACFzC,OAAArD,EAAKwB,KAAKF,QAAQgC,iBAAiB9B,KAAKC,QAAQsE,gBAAexC,QAAQ,SAACyC,GAClEA,IAASF,GACXE,EAAKlI,aAAa,gBAAiB,WAGvCgI,EAAShI,aAAa,gBAAiB,QAGzC,IAAMmI,MAAA5C,OAAArD,EAAuBwB,KAAKF,QAAQgC,iBAAiB9B,KAAKC,QAAQyD,iBAExEe,GAAgB1C,QAAQ,SAACoC,GACnBA,IAAWE,KACb,EAAAb,cAAYW,EAAQ1C,EAAKxB,QAAQ2D,aAAa,MAC9C/B,OAAArD,EAAK2F,EAAOO,cAAc5C,iBAAiBqC,EAAO5D,QAAQnB,UAAS2C,QAAQ,SAAAjC,GAAA,MAAWA,GAAQxD,aAAa,SAAU,UAIzH,EAAAkH,cAAYa,EAAMrE,KAAKC,QAAQ2D,aAAa,MAC5C/B,OAAArD,EAAK6F,EAAKK,cAAc5C,iBAAiBuC,EAAK9D,QAAQnB,UAAS2C,QAAQ,SAAAjC,GAAA,MAAWA,GAAQ6E,gBAAgB,eP2zBzGjF,IAAK,YACL7I,MAAO,SOpyBAwN,EAAMO,GACd,GAAMC,GAAa,GAAIC,aAAY9E,KAAKC,QAAQ4D,qBAC9CkB,SAAS,EACTC,YAAY,EACZC,QAAUZ,SAIZ,IAAIrE,KAAKF,QAAQoF,cAAcL,GAC7B7E,KAAKkE,cAAcG,GACnBrE,KAAKF,QAAQoF,cAAc,GAAIJ,aAAY9E,KAAKC,QAAQ6D,oBACtDiB,SAAS,EACTC,YAAY,EACZC,QAAUZ,WAERO,GACFA,EAAS,KAAMP,OAEZ,CACL,GAAMc,GAAQ,GAAIxD,OAAM,2CACxBwD,GAAMC,UAAW,EACjBD,EAAMd,KAAOA,EACTO,GACFA,EAASO,OPyyBZzF,IAAK,UACL7I,MAAO,WOpyBRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,cPwyBvCJ,IAAK,SACL7I,MAAO,SOn6BIiJ,EAASG,GACrB,MAAOD,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,EAASG,MPs7BxDP,IAAK,OACL7I,MAAO,WOt6B8B,GAAAwO,GAAArF,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAAmDxI,SAAnCuH,EAAOmB,QAAQ+E,gBAC1DtF,KAAK5F,OAAOgF,EAAQa,MAEpB4B,OAAArD,EAAK5E,SAASkI,iBAAiB,6BAA4BC,QAAQ,SAAAjC,GAAA,MAAWuF,GAAKjL,OAAO0F,EAASG,SPk7B/FxI,IAqBT1B,cOlhCoB0B,EAgMrBA,EAAgBqJ,WAAa,GAAIkB,UPu1B3B,SAAShM,EAAQD,GAEtB,YQ9hCD2I,OAAMG,KAAOH,MAAMG,MAAQ,SAAmB0G,GAC5C,MAAO7G,OAAMmB,UAAU2F,MAAMrP,KAAKoP,KRqiC9B,SAASvP,EAAQD,GAEtB,YSxiCDY,QAAO8M,OAAS9M,OAAO8M,QAAU,SAAsBgC,GACrD,GAAa,MAATA,EAEF,KAAM,IAAIxG,WAAU,kCAGtB,IAAMyG,GAAM/O,OAAO8O,EAQnB,UANA5D,OAAAnD,MAAAmB,UAAA2F,MAAArP,KAAK+J,YAAWsF,MAAM,GAAGzD,QAAQ,SAAC4D,GAChChP,OAAOiP,KAAKD,GAAK5D,QAAQ,SAAC8D,GACxBH,EAAIG,GAAQF,EAAIE,OAIbH,ITgjCH,SAAS1P,EAAQD,GAEtB,YUhkCc,SAAS+P,GAAYhG,EAASwD,EAAMyC,GAC7CjG,EAAQkG,UAAUC,SAAS3C,MAAWyC,GACxCjG,EAAQkG,UAAUD,EAAM,MAAQ,UAAUzC,GVgkC7C3M,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,IAETd,aUrkCuB+P,GV8kClB,SAAS9P,EAAQD,EAASH,GAE/B,YAwBA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASgI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASiH,GAA2BC,EAAMhQ,GAAQ,IAAKgQ,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOjQ,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BgQ,EAAPhQ,EAElO,QAASkQ,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAItH,WAAU,iEAAoEsH,GAAeD,GAASzG,UAAYlJ,OAAOyD,OAAOmM,GAAcA,EAAW1G,WAAagB,aAAehK,MAAOyP,EAAU/G,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe+G,IAAY5P,OAAO6P,eAAiB7P,OAAO6P,eAAeF,EAAUC,GAAcD,EAASG,UAAYF,GA9Bje5P,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MAE5hB0H,EAAO,QAASlF,GAAImF,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAASjH,UAAW,IAAIkH,GAAOpQ,OAAOqQ,yBAAyBL,EAAQC,EAAW,IAAa/O,SAATkP,EAAoB,CAAE,GAAIE,GAAStQ,OAAOuQ,eAAeP,EAAS,OAAe,QAAXM,EAAmB,OAAkCzF,EAAIyF,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKlQ,KAAgB,IAAIsQ,GAASJ,EAAKvF,GAAK,IAAe3J,SAAXsP,EAA4C,MAAOA,GAAOhR,KAAK0Q,IWxlC7dzE,EAAAxM,EAAA,GX4lCKyM,EAAiB9L,EAAuB6L,EW3lC7CxM,GAAA,GACAA,EAAA,IACAA,EAAA,EACA,IAAAsC,GAAAtC,EAAA,GXkmCKuC,EAAoB5B,EAAuB2B,GWhmC3BV,EX4mCV,SAAU4P,GWzlCnB,QAAA5P,GAAYsI,GAAuB,GAAdG,GAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EAAApB,GAAAkB,KAAAxI,EAAA,IAAAuI,GAAAmG,EAAAlG,KAAArJ,OAAAuQ,eAAA1P,GAAArB,KAAA6J,KAC3BF,EAASnJ,OAAO8M,QACpB4D,aAAc,iBACdC,gBAAiB,qBACjBC,oBAAqB,0BACrB7D,eAAgB,sBAChBC,uBAAwB,yCACxBY,aAAc,sBACdX,YAAa,qBACb4D,YAAa,mBACb3D,oBAAqB,oBACrBC,mBAAoB,gBACnB7D,IAEHF,GAAKD,QAAQhG,iBAAiB,UAAW,SAACkH,GAAD,MAAWjB,GAAK0H,cAAczG,IAEvE,IAAM0G,GAAW3H,EAAKD,QAAQa,cAAcZ,EAAKE,QAAQ0D,uBAhBxB,OAiB7B+D,IACF3H,EAAK4H,kBAAkBD,GAlBQ3H,EXgxClC,MAtLAsG,GAAU7O,EAAK4P,GAuEflI,EAAa1H,IACXkI,IAAK,gBACL7I,MAAO,SW/mCIwN,GACZqC,EAAA/P,OAAAuQ,eAAA1P,EAAAqI,WAAA,gBAAAG,MAAA7J,KAAA6J,KAAoBqE,GACpBrE,KAAK2H,kBAAkBtD,MX0nCtB3E,IAAK,cACL7I,MAAO,SWlnCEmK,GACV0F,EAAA/P,OAAAuQ,eAAA1P,EAAAqI,WAAA,cAAAG,MAAA7J,KAAA6J,KAAkBgB,EAClB,IAAMmD,IAAS,EAAA9B,cAAarB,EAAOhB,KAAKC,QAAQyD,gBAC1CkE,GAAU,EAAAvF,cAAarB,EAAOhB,KAAKC,QAAQqH,gBAC7CnD,KACFuC,EAAA/P,OAAAuQ,eAAA1P,EAAAqI,WAAA,cAAAG,MAAA7J,KAAA6J,KAAkBgB,GAClBhB,KAAK6H,mBAEHD,GACF5H,KAAK6H,qBX8nCNnI,IAAK,gBACL7I,MAAO,SWrnCImK,GAAO,GAAAS,GAAAzB,KACb8H,EAAc9H,KAAKF,QAAQa,cAAcX,KAAKC,QAAQqH,gBAC5D,KAAIQ,IAAeA,EAAYC,aAA/B,CAIA,GAAMC,IACJC,KAAM,GACNC,MAAO,EACPC,UAAW,GACXC,WAAY,GACZpH,EAAMtB,KAAOsB,EAAMqH,cAErB,IAAIL,EAAW,CACb,GAAMM,MAAAzG,OAAArD,EAAewB,KAAKF,QAAQgC,iBAAiB9B,KAAKC,QAAQyD,kBAC1DS,EAASnE,KAAKF,QAAQa,cAAcX,KAAKC,QAAQ0D,wBACjD4E,EAAYC,KAAKC,IAAIH,EAAQI,QAAQvE,GAAU6D,EAAW,IAC1DW,EAAkBJ,GAAa,GAAKA,EAAYD,EAAQ3K,OAAS4K,EACrEA,EAAYC,KAAKI,KAAKL,GAAaD,EAAQ3K,MAC7CqC,MAAKoE,UAAUkE,EAAQK,GAAkB,SAACxD,EAAOd,GAC/C,GAAIA,EAAM,CACR,GAAMG,GAAOH,EAAK1D,cAAcc,EAAKxB,QAAQsE,aACzCC,IACFA,EAAKqE,WAIX7H,EAAMwB,sBX+nCP9C,IAAK,kBACL7I,MAAO,WWxnCRmJ,KAAKF,QAAQa,cAAcX,KAAKC,QAAQoH,cAAcrB,UAAU1D,OAAOtC,KAAKC,QAAQuH,gBXkoCnF9H,IAAK,oBACL7I,MAAO,SW5nCQuI,GAChBY,KAAKF,QAAQa,cAAcX,KAAKC,QAAQsH,qBAAqBhG,YAAcnC,EAAOmC,iBX+nCjF7B,IAAK,OACL7I,MAAO,WWptC8B,GAAAwO,GAAArF,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAAwCxI,SAAxBuH,EAAOmB,QAAQuI,KAC1D9I,KAAK5F,OAAOgF,EAAQa,MAEpB4B,OAAArD,EAAKY,EAAO0C,iBAAiB,iBAAgBC,QAAQ,SAAAjC,GAAA,MAAWuF,GAAKjL,OAAO0F,EAASG,SXguCjFzI,GACPW,aAyBFpC,cW7zCoByB,EAyKrBA,EAAIsJ,WAAa,GAAIkB,UXypCf,SAAShM,EAAQD,GAEtB,YY10CDyS,MAAKI,KAAOJ,KAAKI,MAAQ,SAAc5M,GACrC,GAAM+M,IAAK/M,CACX,OAAa,KAAN+M,EAAUA,EAAIA,EAAIP,KAAKQ,IAAID,KZi1C9B,SAAS/S,EAAQD,EAASH,GAE/B,YAcA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASgI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAhBhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,Ka31CjiBpJ,GAAA,EACA,IAAA2N,GAAA3N,EAAA,Gbg2CK4N,EAAgBjN,EAAuBgN,Ga91CvBhM,Ebs2CD,War2ClB,QAAAA,GAAYuI,GAAS,GAAAC,GAAAC,IACnB,IADmBlB,EAAAkB,KAAAzI,IACduI,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,EACfE,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAC9CA,KAAKF,QAAQ4E,cAAc5K,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAKkJ,oBAAoBjI,KACzFhB,KAAKF,QAAQ4E,cAAc5K,iBAAiB,WAAY,SAACkH,GAAD,MAAWjB,GAAKmJ,eAAelI,Kb06CxF,MAzDA9B,GAAa3H,IACXmI,IAAK,sBACL7I,MAAO,Saj2CUmK,GAClB,GAAMmI,GAAWnJ,KAAKF,QAAQmG,SAASjF,EAAM5B,QACvCgK,EAAeD,IAAanJ,KAAKF,QAAQkG,UAAUC,SAAS,0BAE9DkD,IAAqC,MAAzBnJ,KAAKF,QAAQyC,SAC3BvB,EAAMwB,kBAGR,EAAAgB,cAAYxD,KAAKF,QAAS,0BAA2BsJ,Mbo2CpD1J,IAAK,iBACL7I,MAAO,Sal2CKmK,GACb,GAAMtB,GAAMsB,EAAMtB,KAAOsB,EAAMqI,KAC/B,IAAY,UAAR3J,GAA2B,KAARA,EAAY,CACjC,GAAMyJ,GAAWnJ,KAAKF,QAAQmG,SAASjF,EAAM5B,QACvCgK,EAAeD,IAAanJ,KAAKF,QAAQkG,UAAUC,SAAS,0BAE9DkD,IAAqC,MAAzBnJ,KAAKF,QAAQyC,SAC3BvB,EAAMwB,kBAGR,EAAAgB,cAAYxD,KAAKF,QAAS,0BAA2BsJ,Obs2CtD1J,IAAK,UACL7I,MAAO,Wal2CRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,cbs2CvCJ,IAAK,SACL7I,MAAO,Sah5CIiJ,GACZ,MAAOE,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,Mbm5C/CJ,IAAK,OACL7I,MAAO,Waj5CqB,GAAA4K,GAAAzB,KAAnBZ,EAAmBc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAVtG,SAAUsG,UAAA,EAC7B,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAAgDxI,SAAhCuH,EAAOmB,QAAQ+I,aAC1DtJ,KAAK5F,OAAOgF,MAEZyC,OAAArD,EAAKY,EAAO0C,iBAAiB,0BAAyBC,QAAQ,SAAAjC,GAAA,MAAW2B,GAAKrH,OAAO0F,Sb45CjFvI,IAGTxB,cat7CoBwB,EAyDrBA,EAAauJ,WAAa,GAAIkB,Ubo4CxB,SAAShM,EAAQD,EAASH,GAE/B,YAwBA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASsI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAAST,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,Gcp9C3L,QAAS8K,GAAsBzJ,GAC7B,GAAM0J,GAAgB1J,EAAQ4E,cAAc+E,YAAYC,iBAAiB5J,GACnE6J,EAAYH,EAAcI,mBAAmB9L,MAAM,QACtD+L,IAAI,SAACD,GAAD,MAAwBE,YAAWF,KACvCvG,OAAO,SAAC0G,GAAD,OAAeC,MAAMD,IAC/B,OAAOJ,GAAUhM,OAAS,EAAI6K,KAAKC,IAALwB,MAAAzB,KAAAhK,EAAYmL,IAAa,Edq7CxDhT,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIoL,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU3L,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX0L,SAAyB1L,EAAIqK,cAAgBqB,OAAS,eAAkB1L,IAEtO0I,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,Kc18CjiBpJ,GAAA,GACAA,EAAA,GACAA,EAAA,GACA,IAAAwM,GAAAxM,EAAA,Gdi9CKyM,EAAiB9L,EAAuB6L,Gch9C7CmB,EAAA3N,EAAA,Gdo9CK4N,EAAgBjN,EAAuBgN,Gct8CvBjM,Ed49CR,Wc38CX,QAAAA,GAAYwI,GAAuB,GAAdG,GAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAA1I,IAC5BwI,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,EAEfE,KAAKC,QAAUtJ,OAAO8M,QACpByG,aAAc,aACdC,cAAe,eACfC,iBAAkB,mBAClBC,gBAAiB,cACjBC,kBAAmB,oBACnBC,iBAAkB,gBACjBtK,GAEHD,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAE9CA,KAAKwK,mBdmwDN,MA9QAtL,GAAa5H,IACXoI,IAAK,mBAML7I,MAAO,Wc16CS,GAAAkJ,GAAAC,IACjBA,MAAKF,QAAQhG,iBAAiB,QAAS,SAACkH,GAClCA,EAAMoC,gBAAkBpC,EAAM5B,QAAQW,EAAK0K,SAG7CzK,KAAK0K,iBACP1K,KAAKF,QAAQ4E,cAAc3I,KAAKd,oBAAoB,UAAW+E,KAAK0K,gBACpE1K,KAAK0K,eAAiB,MAGxB1K,KAAK0K,eAAiB,SAAC1J,GACD,KAAhBA,EAAMqI,OACRtJ,EAAK0K,QAITzK,KAAKF,QAAQ4E,cAAc3I,KAAKjC,iBAAiB,UAAWkG,KAAK0K,mBAEjE7I,OAAArD,EAAKwB,KAAKF,QAAQgC,iBAAiB,wBAAuBC,QAAQ,SAACjC,GACjEA,EAAQhG,iBAAiB,QAAS,WAChCiG,EAAK0K,cdy7CR/K,IAAK,eACL7I,MAAO,Sc/6CG8T,EAAS/F,GAAU,GAAAnD,GAAAzB,KAC1B4K,EAAA,OACEC,EAAqB,QAArBA,KACCD,IACHA,GAAW,EACXnJ,EAAK3B,QAAQ7E,oBAAoB,gBAAiB4P,GAClDjG,KAIJ5E,MAAKF,QAAQhG,iBAAiB,gBAAiB+Q,EAC/C,IAAMjB,GAAqBL,EAAsBvJ,KAAKF,UACtD,EAAA0D,cAAYxD,KAAKF,QAASE,KAAKC,QAAQiK,aAAcS,IACrD,EAAAnH,cAAYxD,KAAKF,QAAQ4E,cAAc3I,KAAMiE,KAAKC,QAAQkK,cAAeQ,GAC9C,IAAvBf,GACFiB,Ods8CDnL,IAAK,OACL7I,MAAO,Scp7CLiU,EAAkBlG,GAAU,GAAAS,GAAArF,IAM/B,IALgC,kBAArB8K,KACTlG,EAAWkG,EACXA,EAAmB,MAGjBA,IAAqBA,EAAiB3K,SACxC,KAAM,IAAIlB,WAAU,iDAGtB,IAAIe,KAAKF,QAAQkG,UAAUC,SAASjG,KAAKC,QAAQiK,cAI/C,YAHItF,GACFA,EAAS,MAAM,GAKnB,IAAMC,GAAa,GAAIC,aAAY9E,KAAKC,QAAQmK,kBAC9CrF,SAAS,EACTC,YAAY,EACZC,QAAU6F,iBAAkBA,IAI9B,IAAI9K,KAAKF,QAAQoF,cAAcL,GAC7B7E,KAAK+K,cAAa,EAAM,WACtB1F,EAAKvF,QAAQoF,cAAc,GAAIJ,aAAYO,EAAKpF,QAAQoK,iBACtDtF,SAAS,EACTC,YAAY,EACZC,QAAU6F,iBAAkBA,MAE1BlG,GACFA,UAGC,CACL,GAAMO,GAAQ,GAAIxD,OAAM,oCACxBwD,GAAMC,UAAW,EACbR,GACFA,EAASO,Odi8CZzF,IAAK,OACL7I,MAAO,Scz7CL+N,GAAU,GAAAoG,GAAAhL,IACb,KAAKA,KAAKF,QAAQkG,UAAUC,SAASjG,KAAKC,QAAQiK,cAIhD,YAHItF,GACFA,EAAS,MAAM,GAKnB,IAAMC,GAAa,GAAIC,aAAY9E,KAAKC,QAAQqK,mBAC9CvF,SAAS,EACTC,YAAY,GAId,IAAIhF,KAAKF,QAAQoF,cAAcL,GAC7B7E,KAAK+K,cAAa,EAAO,WACvBC,EAAKlL,QAAQoF,cAAc,GAAIJ,aAAYkG,EAAK/K,QAAQsK,kBACtDxF,SAAS,EACTC,YAAY,KAEVJ,GACFA,UAGC,CACL,GAAMO,GAAQ,GAAIxD,OAAM,mCACxBwD,GAAMC,UAAW,EACbR,GACFA,EAASO,Odg8CZzF,IAAK,UACL7I,MAAO,Wc37CJmJ,KAAK0K,iBACP1K,KAAKF,QAAQ4E,cAAc3I,KAAKd,oBAAoB,UAAW+E,KAAK0K,gBACpE1K,KAAK0K,eAAiB,MAExB1K,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,cdo8CvCJ,IAAK,SACL7I,MAAO,Sc5pDIiJ,EAASG,GACrB,MAAOD,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,EAASG,MdqrDxDP,IAAK,OACL7I,MAAO,Wc/pD8B,GAAAoU,GAAAjL,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAElB,IAAIvC,EAAOe,WAAaC,KAAKC,cAAyCxI,SAAzBuH,EAAOmB,QAAQ2K,MAC1DlL,KAAK5F,OAAOgF,EAAQa,OACf,IAAA0C,GAAA,WACL,GAAMC,GAAU,SAAC5B,GACf,GAAMlB,IAAU,EAAAuC,cAAarB,EAAO,sBAEpC,IAAIlB,EAAS,CACX,GAAMqL,MAAAtJ,OAAArD,EAAqBsB,EAAQ4E,cAAc5C,iBAAiBhC,EAAQS,QAAQ6K,cAClF,IAAID,EAAcxN,OAAS,EACzB,KAAM,IAAIgE,OAAM,+BAGW,KAAzBwJ,EAAcxN,SAAc,WACN,MAApBmC,EAAQyC,SACVvB,EAAMwB,gBAGR,IAAM0I,GAAQD,EAAK7Q,OAAO+Q,EAAc,GAAIlL,EAC5CiL,GAAMG,KAAKvL,EAAS,SAACqF,EAAOmG,IACrBnG,IAAUmG,GAAgBJ,EAAMpL,QAAQyL,YAAc,GAAKL,EAAMpL,QAAQ0L,aAAe,GAC3FN,EAAMpL,QAAQ+I,cAOxB,OADAzJ,GAAOtF,iBAAiB,QAAS8I,IACjCE,GACEC,QAAS,iBAAM3D,GAAOnE,oBAAoB,QAAS2H,QA1BhD,mCAAAD,GAAA,YAAAV,EAAAU,IAAA,MAAAA,GAAAG,Md6sDNpD,IAAK,OACL7I,MAAO,Wc9gDR4U,QAAQC,KAAK,+DdmhDPpU,IAwBTvB,cc9zDoBuB,EA0SrBA,EAAMwJ,WAAa,GAAIkB,UdyhDjB,SAAShM,EAAQD,GAEtB,Yev1DD,IAAM4V,GAA4B,WAChC,IACE,GAAI7G,aAAY,cAChB,MAAOK,GACP,OAAO,KAGPwG,KACF3R,OAAO8K,YAAc,SAAqB8G,GAAiB,GAAXlS,GAAWwG,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,GACnDc,EAAQpH,SAASiS,YAAY,aAKnC,OAJA7K,GAAM8K,UAAUF,EAAMlS,EAAKqL,QAASrL,EAAKsL,YACrCtL,EAAKuL,SACPjE,EAAMiE,OAASvL,EAAKuL,QAEfjE,Kfi2DL,SAAShL,EAAQD,EAASH,GAE/B,YAoBA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASgI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAtBhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIoL,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU3L,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX0L,SAAyB1L,EAAIqK,cAAgBqB,OAAS,eAAkB1L,IAEtO0I,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,KgBz3DjiBpJ,GAAA,GACAA,EAAA,GACAA,EAAA,GACA,IAAAwM,GAAAxM,EAAA,GhBg4DKyM,EAAiB9L,EAAuB6L,GgB93DxB/K,EhBs4DJ,WgB72Df,QAAAA,GAAYyI,GAAuB,GAAAC,GAAAC,KAAdC,EAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAA3I,IAC5ByI,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,EAEfE,KAAKC,QAAUtJ,OAAO8M,QACpBsI,qBAAsB,oBACtBnI,YAAa,uBACbyD,aAAc,iBACd2E,aAAc,iBACdC,iBAAkB,gCAClBC,cAAe,wBACf9B,iBAAkB,oBAClBC,gBAAiB,eACjBC,kBAAmB,qBACnBC,iBAAkB,gBAClB1G,oBAAqB,uBACrBC,mBAAoB,mBACnB7D,GAEHD,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAE9CA,KAAKmM,SAAWnM,KAAKF,QAAQa,cAAcX,KAAKC,QAAQoH,cAExDrH,KAAKF,QAAQhG,iBAAiB,UAAW,SAACkH,GAAD,MAAWjB,GAAKqM,UAAUpL,QAEnEa,OAAArD,EAAKwB,KAAKF,QAAQgC,iBAAiB9B,KAAKC,QAAQgM,oBAAmBlK,QAAQ,SAACsC,GAC1EA,EAAKvK,iBAAiB,QAAS,SAACuS,GAAD,MAAOtM,GAAKuM,OAAOD,OhBymErD,MAtLAnN,GAAa7H,IACXqI,IAAK,YAOL7I,MAAO,SgBv1DAmK,GACR,GAAMuL,GAAWvM,KAAKF,QAAQkG,UAAUC,SAASjG,KAAKC,QAAQ2D,aAC1DmC,EAAA,MACJ,IAAmB,UAAf/E,EAAM4K,MAAmC,YAAf5K,EAAM4K,MAAsC,KAAhB5K,EAAMqI,MAE9DtD,GAAOwG,MACF,IAAmB,YAAfvL,EAAM4K,MAAsC,KAAhB5K,EAAMqI,MAI3C,MAFAtD,IAAM,EAKR,GAAM+E,IAAmB,EAAAzI,cAAarB,EAAO,sBAAwBA,EAAMoC,aAC1C,OAA7B0H,EAAiBvI,SACnBvB,EAAMwB,gBAGR,IAAMqC,GAAa,GAAIC,aAAY9E,KAAKC,QAAQ8F,EAAM,mBAAqB,sBACzEhB,SAAS,EACTC,YAAY,EACZC,QAAU6F,iBAAkBA,KAExB0B,EAAsBxM,KAAKF,QAAQoF,cAAcL,EAEnDkB,KACF/F,KAAK8H,YAAcgD,EACnB9K,KAAKyM,iBAAmBzM,KAAK8H,YAAYnH,cAAcX,KAAKC,QAAQ8L,uBAGlES,IACFxM,KAAKF,QAAQkG,UAAUD,EAAM,MAAQ,UAAU/F,KAAKC,QAAQ2D,cAC3D5D,KAAKF,QAAQkG,UAAUC,SAASjG,KAAKC,QAAQ2D,aAAe5D,KAAKmM,SAAWnM,KAAK8H,aAAae,QAC/F7I,KAAKF,QAAQoF,cAAc,GAAIJ,aAAY9E,KAAKC,QAAQ8F,EAAM,kBAAoB,qBAChFhB,SAAS,EACTC,YAAY,EACZC,QAAU6F,iBAAkBA,UhBk2D/BpL,IAAK,SACL7I,MAAO,SgB11DHmK,GACL,GAAM0L,GAAmB1L,EAAMoC,cACzByB,EAAa,GAAIC,aAAY9E,KAAKC,QAAQ4D,qBAC9CkB,SAAS,EACTC,YAAY,EACZC,QACE0H,gBAAiB3L,EACjB4L,YAAaF,IAIb1M,MAAKF,QAAQoF,cAAcL,QAC7BhD,OAAArD,EAAKwB,KAAKF,QAAQgC,iBAAiB9B,KAAKC,QAAQ+L,gBAAejK,QAAQ,SAACjC,GAClEA,EAAQmG,SAASyG,GACnB5M,EAAQkG,UAAUD,IAAI,YACbjG,EAAQkG,UAAUC,SAAS,aACpCnG,EAAQkG,UAAU6G,OAAO,cAG7BH,EAAiB1G,UAAUD,IAAI,YAC3B/F,KAAKyM,mBACPzM,KAAKyM,iBAAiBlL,YAAcmL,EAAiB/L,cAAcX,KAAKC,QAAQiM,eAAe3K,aAEjGvB,KAAKF,QAAQoF,cAAc,GAAIJ,aAAY9E,KAAKC,QAAQ6D,oBACtDiB,SAAS,EACTC,YAAY,EACZC,QAAU2H,YAAaF,UhB+1D1BhN,IAAK,UACL7I,MAAO,WgB11DRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,chBm2DvCJ,IAAK,OACL7I,MAAO,WgBr/D8B,GAAA4K,GAAAzB,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAElB,IAAIvC,EAAOe,WAAaC,KAAKC,cAAuCxI,SAAvBuH,EAAOmB,QAAQuM,IAC1D9M,KAAK5F,OAAOgF,EAAQa,OACf,IAAA0C,GAAA,WACL,GAAMC,GAAU,SAAC5B,GACf,GAAMlB,IAAU,EAAAuC,cAAarB,EAAO,oBAEpC,IAAIlB,EAAS,CACX,GAAMiN,MAAAlL,OAAArD,EAAsBsB,EAAQ4E,cAAc5C,iBAAiBhC,EAAQS,QAAQyM,YACnF,IAAID,EAAepP,OAAS,EAC1B,KAAM,IAAIgE,OAAM,gCAGY,KAA1BoL,EAAepP,SACO,MAApBmC,EAAQyC,SACVvB,EAAMwB,iBAERf,EAAKrH,OAAO2S,EAAe,GAAI9M,GAASmM,UAAUpL,KAQxD,OAHA5B,GAAOtF,iBAAiB,QAAS8I,GACjCxD,EAAOtF,iBAAiB,UAAW8I,IAEnCE,GACEC,QAAS,WACP3D,EAAOnE,oBAAoB,UAAW2H,GACtCxD,EAAOnE,oBAAoB,QAAS2H,QAzBnC,mCAAAD,GAAA,YAAAV,EAAAU,IAAA,MAAAA,GAAAG,MhBwjENpD,IAAK,SACL7I,MAAO,SgBngEIiJ,EAASG,GACrB,MAAOD,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,EAASG,MhBsgExDP,IAAK,OACL7I,MAAO,WgB56DR4U,QAAQC,KAAK,qEhBi7DPrU,IAgCTtB,cgB/rEoBsB,EA6QrBA,EAAUyJ,WAAa,GAAIkB,UhBu7DrB,SAAShM,EAAQD,GAEtB,YAQA,SAASyI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCARhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MiBjtE5gB5H,EjButEL,WiBjtEd,QAAAA,GAAY0I,GAAS,GAAAC,GAAAC,IACnB,IADmBlB,EAAAkB,KAAA5I,IACd0I,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,EACfE,KAAKiN,gBAAkBjN,KAAKF,QAAQ4E,cAAc/D,cAAcX,KAAKF,QAAQS,QAAQ2M,6BAErFlN,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAE9CA,KAAKF,QAAQhG,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAKoN,kBAAkBnM,KjBkyE1E,MA3DA9B,GAAa9H,IACXsI,IAAK,oBAOL7I,MAAO,SiB/sEQmK,GAChB,GAAMoM,GAAmBpM,EAAMoC,aAEE,OAA7BgK,EAAiB7K,SACnBvB,EAAMwB,iBAGRxC,KAAKF,QAAQkG,UAAU1D,OAAO,eAC1BtC,KAAKiN,kBACPjN,KAAKiN,gBAAgBjH,UAAU1D,OAAO,eACtCtC,KAAKiN,gBAAgBpW,MAAQ,OjBmtE9B6I,IAAK,UACL7I,MAAO,WiB/sERmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,cjBmtEvCJ,IAAK,SACL7I,MAAO,SiB5vEIiJ,GACZ,MAAOE,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,MjBuwE/CJ,IAAK,OACL7I,MAAO,WiB/vEqB,GAAA4K,GAAAzB,KAAnBZ,EAAmBc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAVtG,SAAUsG,UAAA,EAC7B,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAA+DxI,SAA/CuH,EAAOmB,QAAQ2M,4BAC1DlN,KAAK5F,OAAOgF,MAEZyC,OAAArD,EAAKY,EAAO0C,iBAAiB,4CAA2CC,QAAQ,SAAAjC,GAAA,MAAW2B,GAAKrH,OAAO0F,SjB0wEnG1I,IASTrB,ciB3zEoBqB,EAuErBA,EAAS0J,WAAa,GAAIkB,UjByvEpB,SAAShM,EAAQD,EAASH,GAE/B,YAYA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASgI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAdhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MkBx0EjiBuE,EAAA3N,EAAA,GlB40EK4N,EAAgBjN,EAAuBgN,GkB10EvBpM,ElBk1EN,WkB10Eb,QAAAA,GAAY2I,GAAqC,GAA5BG,GAA4BC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,IAAhBmN,QAAQ,GAAQnN,UAAA,EAC/C,IAD+CpB,EAAAkB,KAAA7I,IAC1C2I,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,EACfE,KAAKqN,OAAS,UAAYpN,GAAUA,EAAQoN,QAAS,EACrDrN,KAAKsN,IAAK,GAGNrN,EAAQqN,IAAMtT,OAAOuT,eAAiB,iBAAmBvT,WAC3DgG,KAAKsN,IAAK,EACVtN,KAAKF,QAAQkG,UAAUD,IAAI,oBAG7B/F,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAG9CA,KAAKe,IAAIf,KAAKqN,QlBk7Ef,MAlFAnO,GAAa/H,IACXuI,IAAK,MAOL7I,MAAO,SkBx0ENwW,GACF,GAAsB,iBAAXA,GACT,KAAM,IAAIpO,WAAU,yBAUtB,OAPAe,MAAKqN,OAASA,EAEVrN,KAAKsN,KACP,EAAA9J,cAAYxD,KAAKF,QAAS,yBAA0BE,KAAKqN,SAE3D,EAAA7J,cAAYxD,KAAKF,QAAS,qBAAsBE,KAAKqN,QAE9CrN,QlBi1ENN,IAAK,SACL7I,MAAO,WkB10ER,MAAOmJ,MAAKe,KAAKf,KAAKqN,WlBm1ErB3N,IAAK,WACL7I,MAAO,WkB70ER,MAAOmJ,MAAKqN,UlBi1EX3N,IAAK,UACL7I,MAAO,WkB90ERmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,clBk1EvCJ,IAAK,SACL7I,MAAO,SkB34EIiJ,GACZ,MAAOE,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,MlBs5E/CJ,IAAK,OACL7I,MAAO,WkB94E8B,GAAAkJ,GAAAC,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAA2CxI,SAA3BuH,EAAOmB,QAAQiN,QAC1DxN,KAAK5F,OAAOgF,EAAQa,MAEpB4B,OAAArD,EAAKY,EAAO0C,iBAAiB,oBAAmBC,QAAQ,SAAAjC,GAAA,MAAWC,GAAK3F,OAAO0F,EAASG,SlB05EpF9I,IASTpB,ckBr9EoBoB,EAiGrBA,EAAQ2J,WAAa,GAAIkB,UlBy3EnB,SAAShM,EAAQD,EAASH,GAE/B,YAcA,SAAS4I,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAdhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,KmBp+EjiBpJ,GAAA,GACAA,EAAA,GACAA,EAAA,GnB8+EC,ImB5+EoBsB,GnB4+EL,WmB99Ed,QAAAA,GAAY4I,GAAuB,GAAAC,GAAAC,KAAdC,EAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAA9I,IAC5B4I,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,EAEfE,KAAKC,QAAUtJ,OAAO8M,QACpBuI,aAAc,sCACdyB,qBAAsB;AACtBC,cAAe,yBACf7J,oBAAqB,yBACrBC,mBAAoB,qBACnB7D,GAEHD,KAAKF,QAAQS,QAAQoN,SAAW,GAChC3N,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAE9CA,KAAKF,QAAQ4E,cAAc5K,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAKuC,OAAOtB,KAC5EhB,KAAKF,QAAQhG,iBAAiB,WAAY,SAACkH,GAAD,MAAWjB,GAAKuC,OAAOtB,KACjEhB,KAAKF,QAAQhG,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAK2H,SAAS1G,KnBonFjE,MA1GA9B,GAAahI,IACXwI,IAAK,UACL7I,MAAO,WmB/9ERmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,YnBy+EvCJ,IAAK,SACL7I,MAAO,SmBn+EHmK,GACL,GAAMmI,GAAWnJ,KAAKF,QAAQmG,SAASjF,EAAM5B,OAEzC+J,GACFnJ,KAAKF,QAAQkG,UAAU1D,OAAO,uBACpB6G,GAAYnJ,KAAKF,QAAQkG,UAAUC,SAAS,uBACtDjG,KAAKF,QAAQkG,UAAU6G,OAAO,yBnBg/E/BnN,IAAK,WACL7I,MAAO,SmBt+EDmK,GAAO,GAAAS,GAAAzB,KACR0M,EAAmB1L,EAAM5B,MAC/B,IAAsDvH,SAAlD6U,EAAiBkB,cAAcrN,QAAQsN,OAAsB,CAC/D,GAAMhJ,GAAa,GAAIC,aAAY9E,KAAKC,QAAQ4D,qBAC9CkB,SAAS,EACTC,YAAY,EACZC,QAAUZ,KAAMqI,IAGd1M,MAAKF,QAAQoF,cAAcL,KAC7B7E,KAAKF,QAAQgO,kBAAkBvM,YAAcmL,EAAiBnL,YAC9DvB,KAAKF,QAAQS,QAAQ1J,MAAQ6V,EAAiBkB,cAAcrN,QAAQ1J,SAEpEgL,OAAArD,EAAKwB,KAAKF,QAAQgC,iBAAiB9B,KAAKC,QAAQwN,wBAAuB1L,QAAQ,SAACsC,GAC1EqI,IAAqBrI,GACvBA,EAAK2B,UAAU6G,OAAOpL,EAAKxB,QAAQyN,iBAIvChB,EAAiB1G,UAAUD,IAAI/F,KAAKC,QAAQyN,eAE5C1N,KAAKF,QAAQoF,cAAc,GAAIJ,aAAY9E,KAAKC,QAAQ6D,oBACtDiB,SAAS,EACTC,YAAY,EACZC,QAAUZ,KAAMqI,anB8+ErBhN,IAAK,SACL7I,MAAO,SmB7jFIiJ,EAASG,GACrB,MAAOD,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,EAASG,MnBglFxDP,IAAK,OACL7I,MAAO,WmBhkF8B,GAAAwO,GAAArF,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAA2CxI,SAA3BuH,EAAOmB,QAAQiN,QAC1DxN,KAAK5F,OAAOgF,EAAQa,MAEpB4B,OAAArD,EAAKY,EAAO0C,iBAAiB,qBAAoBC,QAAQ,SAAAjC,GAAA,MAAWuF,GAAKjL,OAAO0F,EAASG,SnB4kFrF/I,IAqBTnB,cmB3qFoBmB,EAuJrBA,EAAS4J,WAAa,GAAIkB,UnByhFpB,SAAShM,EAAQD,EAASH,GAE/B,YAkBA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASgI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCApBhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MoB5rFjiBoD,EAAAxM,EAAA,GpBgsFKyM,EAAiB9L,EAAuB6L,EoB/rF7CxM,GAAA,GACAA,EAAA,GACAA,EAAA,GpB2sFC,IoBzsFoBqB,GpBysFT,WoBjsFV,QAAAA,GAAY6I,GAAuB,GAAAC,GAAAC,KAAdC,EAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAA/I,IAC5B6I,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAEtBe,MAAKF,QAAUA,EACfE,KAAKC,QAAUtJ,OAAO8M,QACpBsK,aAAc,aACb9N,GACHD,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAC9CA,KAAKF,QAAQhG,iBAAiB,UAAW,SAACkH,GAAD,MAAWjB,GAAKiO,aAAahN,KpB+xFvE,MAlEA9B,GAAajI,IACXyI,IAAK,eAQL7I,MAAO,SoBjsFGmK,GACX,GAAMgH,IACJC,KAAM,GACNC,MAAO,EACPC,UAAW,GACXC,WAAY,GACZpH,EAAMtB,KAAOsB,EAAMqH,eACf4F,GAAO,EAAA5L,cAAarB,EAAOhB,KAAKC,QAAQ8N,aAE9C,IAAI/F,GAAaiG,GAAQA,IAASrU,SAASsU,cAAe,CACxD,GAAMC,MAAAtM,OAAArD,EAAawB,KAAKF,QAAQgC,iBAAiB9B,KAAKC,QAAQ8N,gBACxDxF,EAAYC,KAAKC,IAAI0F,EAAMzF,QAAQuF,GAAQjG,EAAW,IACtDW,EAAkBJ,GAAa,GAAKA,EAAY4F,EAAMxQ,OAAS4K,EACnEA,EAAYC,KAAKI,KAAKL,GAAa4F,EAAMxQ,MAC3CwQ,GAAMxF,GAAiBE,YpBosFxBnJ,IAAK,UACL7I,MAAO,WoBhsFRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,cpBosFvCJ,IAAK,SACL7I,MAAO,SoBpvFIiJ,EAASG,GACrB,MAAOD,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,EAASG,MpBiwFxDP,IAAK,OACL7I,MAAO,WoBvvF8B,GAAA4K,GAAAzB,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAA4CxI,SAA5BuH,EAAOmB,QAAQ6N,SAC1DpO,KAAK5F,OAAOgF,EAAQa,MAEpB4B,OAAArD,EAAKY,EAAO0C,iBAAiB,sBAAqBC,QAAQ,SAAAjC,GAAA,MAAW2B,GAAKrH,OAAO0F,EAASG,SpBmwFtFhJ,IAeTlB,coB/zFoBkB,EAuFrBA,EAAK6J,WAAa,GAAIkB,UpB6uFhB,SAAShM,EAAQD,EAASH,GAE/B,YAUA,SAAS4I,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAVhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,KqBj1FjiBpJ,GAAA,ErBy1FC,IqBv1FoBoB,GrBu1FF,WqBj1FjB,QAAAA,GAAY8I,GAAuB,GAAAC,GAAAC,KAAdC,EAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAAhJ,IAC5B8I,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKC,QAAUA,EACfD,KAAKC,QAAQqN,GAAKtN,KAAKC,QAAQqN,IAAM,iBAAmBtT,QAExDgG,KAAKF,QAAUA,EACfE,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAG9CA,KAAKF,QAAQa,cAAc,0BAA0B7G,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAKgE,YAAY/C,KAC3GhB,KAAKF,QAAQa,cAAc,4BAA4B7G,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAKgE,YAAY/C,KrB66F9G,MAlEA9B,GAAalI,IACX0I,IAAK,cAOL7I,MAAO,SqBn1FEmK,GACV,GAAMyB,GAAQzB,EAAMoC,cAAc4C,UAC5BqI,EAAcrO,KAAKF,QAAQa,cAAc,qBAE3C8B,GAAMwD,SAAS,8BACbjG,KAAKC,QAAQqN,KACbe,EAAYxX,MAEdwX,EAAYC,SAEL7L,EAAMwD,SAAS,kCACpBjG,KAAKC,QAAQqN,GACXe,EAAYxX,MAAQ,KACpBwX,EAAYxX,MAGhBwX,EAAYE,erBw1Ff7O,IAAK,UACL7I,MAAO,WqBn1FRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,crBu1FvCJ,IAAK,SACL7I,MAAO,SqBv4FIiJ,GACZ,MAAOE,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,MrBk5F/CJ,IAAK,OACL7I,MAAO,WqB14FqB,GAAA4K,GAAAzB,KAAnBZ,EAAmBc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAVtG,SAAUsG,UAAA,EAC7B,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAA+CxI,SAA/BuH,EAAOmB,QAAQiO,YAC1DxO,KAAK5F,OAAOgF,MAEZyC,OAAArD,EAAKY,EAAO0C,iBAAiB,wBAAuBC,QAAQ,SAAAjC,GAAA,MAAW2B,GAAKrH,OAAO0F,SrBq5F/E9I,IASTjB,cqBz8FoBiB,EAiFrBA,EAAY8J,WAAa,GAAIkB,UrB63FvB,SAAShM,EAAQD,EAASH,GAE/B,YAoBA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASsI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCApBhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIoL,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU3L,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX0L,SAAyB1L,EAAIqK,cAAgBqB,OAAS,eAAkB1L,IAEtO0I,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MsB19FjiBoD,EAAAxM,EAAA,GtB89FKyM,EAAiB9L,EAAuB6L,EsB79F7CxM,GAAA,EACA,IAAA2N,GAAA3N,EAAA,GtBk+FK4N,EAAgBjN,EAAuBgN,GsBh+FvBxM,EtBs+FR,WsBt9FX,QAAAA,GAAY+I,GAAuB,GAAAC,GAAAC,KAAdC,EAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAAjJ,IAC5B+I,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAEtBe,MAAKF,QAAUA,EAEfE,KAAKC,QAAUtJ,OAAO8M,QACpBgL,cAAe,2BACfC,YAAa,kBACbC,iBAAkB,gBAClBC,eAAgB,mCAChBC,gBAAiB,0BACjBC,uBAAwB,0BACxBC,sBAAuB,qBACvBC,wBAAyB,2BACzBC,uBAAwB,uBACvBhP,GAEHD,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,MAE9CA,KAAKF,QAAQhG,iBAAiB,QAAS,SAACkH,GAAD,MAAWjB,GAAKgE,YAAY/C,KtB8oGpE,MA5IA9B,GAAanI,IACX2I,IAAK,cASL7I,MAAO,SsB58FEmK,GACV,GAAMkO,IAAQ,EAAA7M,cAAarB,EAAOhB,KAAKC,QAAQwO,eACzCU,GAAM,EAAA9M,cAAarB,EAAOhB,KAAKC,QAAQyO,aACvCU,GAAW,EAAA/M,cAAarB,EAAOhB,KAAKC,QAAQ0O,iBAC9CO,IACFlP,KAAKqP,YAAY,OAAQH,GAEvBC,GAAOC,GACTpP,KAAKqP,YAAY,QAASF,MtBs+F3BzP,IAAK,cACL7I,MAAO,SsB/8FE+U,EAAM9L,EAAS8E,GACzB,GAAM0K,IAAYxP,EAAQkG,UAAUC,SAASjG,KAAKC,QAAL,QAAqB2L,EAArB,UACvC/G,EAAa,GAAIC,aAAY9E,KAAKC,QAAL,cAA2B2L,EAA3B,YACjC7G,SAAS,EACTC,YAAY,EACZC,QAAUqK,aAIZ,IAAIxP,EAAQoF,cAAcL,IACxB,EAAArB,cAAY1D,EAASE,KAAKC,QAAL,QAAqB2L,EAArB,SAAmC0D,GAExDxP,EAAQoF,cAAc,GAAIJ,aAAY9E,KAAKC,QAAL,aAA0B2L,EAA1B,YACpC7G,SAAS,EACTC,YAAY,EACZC,QAAUqK,eAER1K,GACFA,EAAS,KAAM9E,EAASwP,OAErB,CACL,GAAMnK,GAAQ,GAAIxD,OAAM,uCACxBwD,GAAMC,UAAW,EACjBD,EAAMrF,QAAUA,EAChBqF,EAAMmK,SAAWA,EACb1K,GACFA,EAASO,OtBo9FZzF,IAAK,UACL7I,MAAO,WsB/8FRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,ctBm9FvCJ,IAAK,SACL7I,MAAO,SsBnkGIiJ,EAASG,GACrB,MAAOD,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,EAASG,MtBylGxDP,IAAK,OACL7I,MAAO,WsBtkG8B,GAAA4K,GAAAzB,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAElB,IAAIvC,EAAOe,WAAaC,KAAKC,cAAyCxI,SAAzBuH,EAAOmB,QAAQgP,MAC1DvP,KAAK5F,OAAOgF,EAAQa,OACf,IAAA0C,GAAA,WACL,GAAMC,GAAU,SAAC5B,GACf,GAAMlB,IAAU,EAAAuC,cAAarB,EAAO,eAChClB,KAAY2B,EAAKX,WAAW+B,IAAI/C,IAClC2B,EAAKrH,OAAO0F,EAASG,GAAS8D,YAAY/C,GAI9C,OADA5B,GAAOtF,iBAAiB,QAAS8I,IACjCE,GACEC,QAAS,iBAAM3D,GAAOnE,oBAAoB,QAAS2H,QAThD,mCAAAD,GAAA,YAAAV,EAAAU,IAAA,MAAAA,GAAAG,OtBkmGD/L,IAuBThB,csBzsGoBgB,EA0LrBA,EAAM+J,WAAa,GAAIkB,UtBohGjB,SAAShM,EAAQD,EAASH,GAE/B,YAYA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASgI,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAId,QAAST,EAAIuB,EAAId,OAAQT,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMG,KAAKJ,GAE1L,QAASK,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAdhHtI,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,GAGT,IAAIqI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInC,GAAI,EAAGA,EAAImC,EAAM1B,OAAQT,IAAK,CAAE,GAAIoC,GAAaD,EAAMnC,EAAIoC,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM9I,OAAOC,eAAewI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYa,UAAWF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MuB1tGjiBwQ,EAAA5Z,EAAA,IvB8tGK6Z,EAAWlZ,EAAuBiZ,GuB5tGlB1Y,EvBouGG,WuB5tGtB,QAAAA,GAAYgJ,GAAuB,GAAdG,GAAcC,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,MAAAA,UAAA,EACjC,IADiCpB,EAAAkB,KAAAlJ,IAC5BgJ,GAAWA,EAAQK,WAAaC,KAAKC,aACxC,KAAM,IAAIpB,WAAU,yDAGtBe,MAAKF,QAAUA,EAEfE,KAAKC,QAAUtJ,OAAO8M,QACpBiM,QAAS,wDACRzP,GAEHD,KAAKa,YAAYC,WAAWC,IAAIf,KAAKF,QAASE,KAG9C,IAAM2P,IAAkB,EAAAF,cAASzP,KAAK4P,aAAaC,KAAK7P,MAAO,GAE/DA,MAAKF,QAAQ4E,cAAc+E,YAAY3P,iBAAiB,SAAU6V,GvByyGnE,MAtDAzQ,GAAapI,IACX4I,IAAK,eAML7I,MAAO,WuBxtGJmJ,KAAKF,QAAQ4E,cAAc+E,YAAYqG,QAAU,IACnD9P,KAAKF,QAAQkG,UAAUD,IAAI/F,KAAKC,QAAQyP,SAExC1P,KAAKF,QAAQkG,UAAU6G,OAAO7M,KAAKC,QAAQyP,YvB6tG5ChQ,IAAK,UACL7I,MAAO,WuBztGRmJ,KAAKa,YAAYC,WAAjBd,UAAmCA,KAAKF,cvB6tGvCJ,IAAK,SACL7I,MAAO,SuBhwGIiJ,EAASG,GACrB,MAAOD,MAAKc,WAAWU,IAAI1B,IAAY,GAAIE,MAAKF,EAASG,MvB4wGxDP,IAAK,OACL7I,MAAO,WuBnwG8B,GAAAkJ,GAAAC,KAA5BZ,EAA4Bc,UAAAvC,QAAA,GAAA9F,SAAAqI,UAAA,GAAnBtG,SAAmBsG,UAAA,GAATD,EAASC,UAAA,EACtC,IAAId,EAAOe,WAAaC,KAAKC,cAAgBjB,EAAOe,WAAaC,KAAKsB,cACpE,KAAM,IAAIC,OAAM,wFAEdvC,GAAOe,WAAaC,KAAKC,cAAoDxI,SAApCuH,EAAOmB,QAAQwP,iBAC1D/P,KAAK5F,OAAOgF,EAAQa,MAEpB4B,OAAArD,EAAKY,EAAO0C,iBAAiB,+BAA8BC,QAAQ,SAAAjC,GAAA,MAAWC,GAAK3F,OAAO0F,EAASG,SvB+wG/FnJ,IASTf,cuB10GoBe,EA0ErBA,EAAiBgK,WAAa,GAAIkB,UvBqwG5B,SAAShM,EAAQD,GwB3tGvB,QAAAia,GAAAC,EAAAC,EAAAjQ,GAuBA,QAAAkQ,GAAAC,GACA,GAAAC,GAAAC,EACAC,EAAAC,CAKA,OAHAF,GAAAE,EAAA3Y,OACA4Y,EAAAL,EACAM,EAAAT,EAAAhG,MAAAsG,EAAAF,GAIA,QAAAM,GAAAP,GAMA,MAJAK,GAAAL,EAEAQ,EAAA7W,WAAA8W,EAAAX,GAEAY,EAAAX,EAAAC,GAAAM,EAGA,QAAAK,GAAAX,GACA,GAAAY,GAAAZ,EAAAa,EACAC,EAAAd,EAAAK,EACAC,EAAAR,EAAAc,CAEA,OAAAG,GAAAC,EAAAV,EAAAW,EAAAH,GAAAR,EAGA,QAAAY,GAAAlB,GACA,GAAAY,GAAAZ,EAAAa,EACAC,EAAAd,EAAAK,CAKA,QAAAQ,GAAAD,GAAAd,GACA,EAAAc,GAAAG,GAAAD,GAAAG,EAGA,QAAAR,KACA,GAAAT,GAAAmB,GACA,OAAAD,GAAAlB,GACAoB,EAAApB,QAGAQ,EAAA7W,WAAA8W,EAAAE,EAAAX,KAGA,QAAAoB,GAAApB,GAMA,MALA9V,cAAAsW,GACAA,EAAA/Y,OAIA4Z,GAAAnB,EACAH,EAAAC,IAEAE,EAAAE,EAAA3Y,OACA6Y,GAGA,QAAAgB,KACA7Z,SAAA+Y,GACAtW,aAAAsW,GAEAK,EAAAR,EAAA,EACAH,EAAAE,EAAAI,EAAA/Y,OAGA,QAAA8Z,KACA,MAAA9Z,UAAA+Y,EAAAF,EAAAc,EAAAD,KAGA,QAAAK,KACA,GAAAxB,GAAAmB,IACAM,EAAAP,EAAAlB,EAMA,IAJAE,EAAApQ,UACAsQ,EAAAxQ,KACAiR,EAAAb,EAEAyB,EAAA,CACA,GAAAha,SAAA+Y,EACA,MAAAD,GAAAM,EAEA,IAAAE,EAIA,MAFA7W,cAAAsW,GACAA,EAAA7W,WAAA8W,EAAAX,GACAC,EAAAc,GAMA,MAHApZ,UAAA+Y,IACAA,EAAA7W,WAAA8W,EAAAX,IAEAQ,EApHA,GAAAJ,GACAE,EACAa,EACAX,EACAE,EACAK,EAAA,EACAR,EAAA,EACAK,GAAA,EACAK,GAAA,EACAM,GAAA,CAEA,sBAAAxB,GACA,SAAAhR,WAAA6S,EA4GA,OA1GA5B,GAAA6B,EAAA7B,IAAA,EACA8B,EAAA/R,KACA6Q,IAAA7Q,EAAA6Q,QACAK,EAAA,WAAAlR,GACAoR,EAAAF,EAAAc,EAAAF,EAAA9R,EAAAoR,UAAA,EAAAnB,GAAAmB,EACAI,EAAA,YAAAxR,OAAAwR,YAmGAG,EAAAF,SACAE,EAAAD,QACAC,EAqBA,QAAAM,GAAArb,GAIA,GAAAsb,GAAAH,EAAAnb,GAAAub,EAAAjc,KAAAU,GAAA,EACA,OAAAsb,IAAAE,GAAAF,GAAAG,EA4BA,QAAAN,GAAAnb,GACA,GAAA+U,SAAA/U,EACA,SAAAA,IAAA,UAAA+U,GAAA,YAAAA,GA2BA,QAAA2G,GAAA1b,GACA,QAAAA,GAAA,gBAAAA,GAqBA,QAAA2b,GAAA3b,GACA,sBAAAA,IACA0b,EAAA1b,IAAAub,EAAAjc,KAAAU,IAAA4b,EA0BA,QAAAV,GAAAlb,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAA2b,EAAA3b,GACA,MAAA6b,EAEA,IAAAV,EAAAnb,GAAA,CACA,GAAA8b,GAAAT,EAAArb,EAAA+b,SAAA/b,EAAA+b,UAAA/b,CACAA,GAAAmb,EAAAW,KAAA,GAAAA,EAEA,mBAAA9b,GACA,WAAAA,MAEAA,KAAAwK,QAAAwR,EAAA,GACA,IAAAC,GAAAC,EAAAC,KAAAnc,EACA,OAAAic,IAAAG,EAAAD,KAAAnc,GACAqc,EAAArc,EAAA2O,MAAA,GAAAsN,EAAA,KACAK,EAAAH,KAAAnc,GAAA6b,GAAA7b,EA5XA,GAAAib,GAAA,sBAGAY,EAAA,IAGAL,EAAA,oBACAC,EAAA,6BACAG,EAAA,kBAGAI,EAAA,aAGAM,EAAA,qBAGAJ,EAAA,aAGAE,EAAA,cAGAC,EAAAE,SAGAC,EAAA1c,OAAAkJ,UAOAuS,EAAAiB,EAAAC,SAGArB,EAAAzJ,KAAAC,IACA2I,EAAA5I,KAAA+K,IAmBAhC,EAAAiC,KAAAjC,GAuUAvb,GAAAD,QAAAia","file":"bluemix-components.min.js","sourcesContent":["var BluemixComponents =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.DetailPageHeader = exports.Table = exports.NumberInput = exports.Card = exports.Dropdown = exports.Loading = exports.Toolbars = exports.HeaderNav = exports.Modal = exports.OverflowMenu = exports.Tab = exports.ContentSwitcher = exports.FileUploader = exports.FabButton = exports.settings = undefined;\n\t\n\t__webpack_require__(1);\n\t\n\tvar _fileUploader = __webpack_require__(2);\n\t\n\tvar _fileUploader2 = _interopRequireDefault(_fileUploader);\n\t\n\tvar _fab = __webpack_require__(3);\n\t\n\tvar _fab2 = _interopRequireDefault(_fab);\n\t\n\tvar _contentSwitcher = __webpack_require__(5);\n\t\n\tvar _contentSwitcher2 = _interopRequireDefault(_contentSwitcher);\n\t\n\tvar _tabs = __webpack_require__(9);\n\t\n\tvar _tabs2 = _interopRequireDefault(_tabs);\n\t\n\tvar _overflowMenu = __webpack_require__(11);\n\t\n\tvar _overflowMenu2 = _interopRequireDefault(_overflowMenu);\n\t\n\tvar _modals = __webpack_require__(12);\n\t\n\tvar _modals2 = _interopRequireDefault(_modals);\n\t\n\tvar _header = __webpack_require__(14);\n\t\n\tvar _header2 = _interopRequireDefault(_header);\n\t\n\tvar _toolbars = __webpack_require__(15);\n\t\n\tvar _toolbars2 = _interopRequireDefault(_toolbars);\n\t\n\tvar _loading = __webpack_require__(16);\n\t\n\tvar _loading2 = _interopRequireDefault(_loading);\n\t\n\tvar _dropdown = __webpack_require__(17);\n\t\n\tvar _dropdown2 = _interopRequireDefault(_dropdown);\n\t\n\tvar _card = __webpack_require__(18);\n\t\n\tvar _card2 = _interopRequireDefault(_card);\n\t\n\tvar _numberInput = __webpack_require__(19);\n\t\n\tvar _numberInput2 = _interopRequireDefault(_numberInput);\n\t\n\tvar _table = __webpack_require__(20);\n\t\n\tvar _table2 = _interopRequireDefault(_table);\n\t\n\tvar _detailPageHeader = __webpack_require__(21);\n\t\n\tvar _detailPageHeader2 = _interopRequireDefault(_detailPageHeader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Base Elements & Components\n\t// -------------\n\t// - JavaScript classes for use with components and base-elements.\n\t// - The following statements import classes from actual locations to\n\t//   be consumed from this file instead of their actual locations.\n\t\n\t\n\tvar settings = {};\n\t\n\t/**\n\t * This module is used for the following purposes:\n\t * 1. Export ES2015 classes as modules (used with base-elements and components)\n\t * 2. Build an ES5-compatible files for prototyping.\n\t *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n\t * @exports BluemixComponents\n\t * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n\t * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n\t */\n\t// ====================//\n\t// Imports and Exports //\n\t// ====================//\n\t\n\t// Polyfills\n\t// -------------\n\texports.\n\t/**\n\t * Settings.\n\t * @type Object\n\t * @property {boolean} [disableAutoInit]\n\t *   Disables automatic instantiation of components.\n\t *   By default (`BluemixComponents.disableAutoInit` is `false`),\n\t *   bluemix-components attempts to instantiate components automatically\n\t *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n\t *   or upon DOM events (e.g. clicking) on such elements.\n\t *   See each components' static `.init()` methods for details.\n\t */\n\tsettings = settings;\n\texports.\n\t\n\t/**\n\t * Floating action button.\n\t * @type FabButton\n\t */\n\tFabButton = _fab2.default;\n\texports.\n\t\n\t/**\n\t * File uploader.\n\t * @type FileUploader\n\t */\n\tFileUploader = _fileUploader2.default;\n\texports.\n\t\n\t/**\n\t * Content switcher.\n\t * @type ContentSwitcher\n\t */\n\tContentSwitcher = _contentSwitcher2.default;\n\texports.\n\t\n\t/**\n\t * Container of tabs.\n\t * @type Tab\n\t */\n\tTab = _tabs2.default;\n\texports.\n\t\n\t/**\n\t * Overflow menu.\n\t * @type OverflowMenu\n\t */\n\tOverflowMenu = _overflowMenu2.default;\n\texports.\n\t\n\t/**\n\t * Modal dialog.\n\t * @type Modal\n\t */\n\tModal = _modals2.default;\n\texports.\n\t\n\t/**\n\t * Header with taxonomy menu.\n\t * @type HeaderNav\n\t */\n\tHeaderNav = _header2.default;\n\texports.\n\t\n\t/**\n\t * Search button in tool bar.\n\t * @type Toolbars\n\t */\n\tToolbars = _toolbars2.default;\n\texports.\n\t\n\t/**\n\t * Spinner indicating loading state.\n\t * @type Loading\n\t */\n\tLoading = _loading2.default;\n\texports.\n\t\n\t/**\n\t * A selector with drop downs.\n\t * @type Dropdown\n\t */\n\tDropdown = _dropdown2.default;\n\texports.\n\t\n\t/**\n\t * The container for cards.\n\t * @type Card\n\t */\n\tCard = _card2.default;\n\texports.\n\t\n\t/**\n\t * Number input UI.\n\t * @type NumberInput\n\t */\n\tNumberInput = _numberInput2.default;\n\texports.\n\t\n\t/**\n\t * Data table.\n\t * @type Table\n\t */\n\tTable = _table2.default;\n\texports.\n\t\n\t/**\n\t * Detail page header.\n\t * @type DetailPageHeader\n\t */\n\tDetailPageHeader = _detailPageHeader2.default;\n\t\n\t/**\n\t * Instantiates components automatically\n\t * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n\t * or upon DOM events (e.g. clicking) on such elements.\n\t * See each components' static `.init()` methods for details.\n\t *\n\t * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n\t *\n\t * @private\n\t */\n\t\n\tvar init = function init() {\n\t  if (!settings.disableAutoInit) {\n\t    _fab2.default.init();\n\t    _fileUploader2.default.init();\n\t    _contentSwitcher2.default.init();\n\t    _tabs2.default.init();\n\t    _overflowMenu2.default.init();\n\t    _modals2.default.init();\n\t    _toolbars2.default.init();\n\t    _loading2.default.init();\n\t    _dropdown2.default.init();\n\t    _card2.default.init();\n\t    _numberInput2.default.init();\n\t    _table2.default.init();\n\t    _detailPageHeader2.default.init();\n\t  }\n\t};\n\t\n\tif (document.readyState === 'loading') {\n\t  document.addEventListener('DOMContentLoaded', init);\n\t} else {\n\t  // DOMContentLoaded has been fired already\n\t  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n\t  setTimeout(init, 0);\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * @copyright Copyright (c) 2016 IcoMoon.io\n\t * @license   Licensed under MIT license\n\t *            See https://github.com/Keyamoon/svgxuse\n\t * @version   1.1.16\n\t */\n\t/*jslint browser: true */\n\t/*global XDomainRequest, MutationObserver, window */\n\t(function () {\n\t    'use strict';\n\t    if (window && window.addEventListener) {\n\t        var cache = Object.create(null); // holds xhr objects to prevent multiple requests\n\t        var checkUseElems,\n\t            tid; // timeout id\n\t        var debouncedCheck = function () {\n\t            clearTimeout(tid);\n\t            tid = setTimeout(checkUseElems, 100);\n\t        };\n\t        var unobserveChanges = function () {\n\t            return;\n\t        };\n\t        var observeChanges = function () {\n\t            var observer;\n\t            window.addEventListener('resize', debouncedCheck, false);\n\t            window.addEventListener('orientationchange', debouncedCheck, false);\n\t            if (window.MutationObserver) {\n\t                observer = new MutationObserver(debouncedCheck);\n\t                observer.observe(document.documentElement, {\n\t                    childList: true,\n\t                    subtree: true,\n\t                    attributes: true\n\t                });\n\t                unobserveChanges = function () {\n\t                    try {\n\t                        observer.disconnect();\n\t                        window.removeEventListener('resize', debouncedCheck, false);\n\t                        window.removeEventListener('orientationchange', debouncedCheck, false);\n\t                    } catch (ignore) {}\n\t                };\n\t            } else {\n\t                document.documentElement.addEventListener('DOMSubtreeModified', debouncedCheck, false);\n\t                unobserveChanges = function () {\n\t                    document.documentElement.removeEventListener('DOMSubtreeModified', debouncedCheck, false);\n\t                    window.removeEventListener('resize', debouncedCheck, false);\n\t                    window.removeEventListener('orientationchange', debouncedCheck, false);\n\t                };\n\t            }\n\t        };\n\t        var xlinkNS = 'http://www.w3.org/1999/xlink';\n\t        checkUseElems = function () {\n\t            var base,\n\t                bcr,\n\t                fallback = '', // optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n\t                hash,\n\t                i,\n\t                Request,\n\t                inProgressCount = 0,\n\t                isHidden,\n\t                url,\n\t                uses,\n\t                xhr;\n\t            if (window.XMLHttpRequest) {\n\t                Request = new XMLHttpRequest();\n\t                if (Request.withCredentials !== undefined) {\n\t                    Request = XMLHttpRequest;\n\t                } else {\n\t                    Request = XDomainRequest || undefined;\n\t                }\n\t            }\n\t            if (Request === undefined) {\n\t                return;\n\t            }\n\t            function observeIfDone() {\n\t                // If done with making changes, start watching for chagnes in DOM again\n\t                inProgressCount -= 1;\n\t                if (inProgressCount === 0) { // if all xhrs were resolved\n\t                    observeChanges(); // watch for changes to DOM\n\t                }\n\t            }\n\t            function attrUpdateFunc(spec) {\n\t                return function () {\n\t                    if (cache[spec.base] !== true) {\n\t                        spec.useEl.setAttributeNS(xlinkNS, 'xlink:href', '#' + spec.hash);\n\t                    }\n\t                };\n\t            }\n\t            function onloadFunc(xhr) {\n\t                return function () {\n\t                    var body = document.body;\n\t                    var x = document.createElement('x');\n\t                    var svg;\n\t                    xhr.onload = null;\n\t                    x.innerHTML = xhr.responseText;\n\t                    svg = x.getElementsByTagName('svg')[0];\n\t                    if (svg) {\n\t                        svg.setAttribute('aria-hidden', 'true');\n\t                        svg.style.position = 'absolute';\n\t                        svg.style.width = 0;\n\t                        svg.style.height = 0;\n\t                        svg.style.overflow = 'hidden';\n\t                        body.insertBefore(svg, body.firstChild);\n\t                    }\n\t                    observeIfDone();\n\t                };\n\t            }\n\t            function onErrorTimeout(xhr) {\n\t                return function () {\n\t                    xhr.onerror = null;\n\t                    xhr.ontimeout = null;\n\t                    observeIfDone();\n\t                };\n\t            }\n\t            unobserveChanges(); // stop watching for changes to DOM\n\t            // find all use elements\n\t            uses = document.getElementsByTagName('use');\n\t            for (i = 0; i < uses.length; i += 1) {\n\t                try {\n\t                    bcr = uses[i].getBoundingClientRect();\n\t                } catch (ignore) {\n\t                    // failed to get bounding rectangle of the use element\n\t                    bcr = false;\n\t                }\n\t                url = uses[i].getAttributeNS(xlinkNS, 'href').split('#');\n\t                base = url[0];\n\t                hash = url[1];\n\t                isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n\t                if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n\t                    // the use element is empty\n\t                    // if there is a reference to an external SVG, try to fetch it\n\t                    // use the optional fallback URL if there is no reference to an external SVG\n\t                    if (fallback && !base.length && hash && !document.getElementById(hash)) {\n\t                        base = fallback;\n\t                    }\n\t                    if (base.length) {\n\t                        // schedule updating xlink:href\n\t                        xhr = cache[base];\n\t                        if (xhr !== true) {\n\t                            // true signifies that prepending the SVG was not required\n\t                            setTimeout(attrUpdateFunc({\n\t                                useEl: uses[i],\n\t                                base: base,\n\t                                hash: hash\n\t                            }), 0);\n\t                        }\n\t                        if (xhr === undefined) {\n\t                            xhr = new Request();\n\t                            cache[base] = xhr;\n\t                            xhr.onload = onloadFunc(xhr);\n\t                            xhr.onerror = onErrorTimeout(xhr);\n\t                            xhr.ontimeout = onErrorTimeout(xhr);\n\t                            xhr.open('GET', base);\n\t                            xhr.send();\n\t                            inProgressCount += 1;\n\t                        }\n\t                    }\n\t                } else {\n\t                    if (!isHidden) {\n\t                        if (cache[base] === undefined) {\n\t                            // remember this URL if the use element was not empty and no request was sent\n\t                            cache[base] = true;\n\t                        } else if (cache[base].onload) {\n\t                            // if it turns out that prepending the SVG is not necessary,\n\t                            // abort the in-progress xhr.\n\t                            cache[base].abort();\n\t                            cache[base].onload = undefined;\n\t                            cache[base] = true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            uses = '';\n\t            inProgressCount += 1;\n\t            observeIfDone();\n\t        };\n\t        // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n\t        window.addEventListener('load', function winLoad() {\n\t            window.removeEventListener('load', winLoad, false); // to prevent memory leaks\n\t            tid = setTimeout(checkUseElems, 0);\n\t        }, false);\n\t    }\n\t}());\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FileUploader = function () {\n\t  /**\n\t   * File uploader.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a file uploader.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n\t   */\n\t\n\t  function FileUploader(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, FileUploader);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    var labelSelector = options.labelSelector || element.dataset.label;\n\t    this.labelNode = element.parentNode.querySelector(labelSelector) || element.nextElementSibling;\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    element.addEventListener('change', function (event) {\n\t      return _this.updateLabel(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates file uploader of the given element.\n\t   * @param {HTMLElement} element The element working as a file uploader.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n\t   */\n\t\n\t\n\t  _createClass(FileUploader, [{\n\t    key: 'updateLabel',\n\t\n\t\n\t    /**\n\t     * Updates the label for the file name upon file selection.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function updateLabel(event) {\n\t      var fileName = '';\n\t      var element = this.element;\n\t\n\t      if (element.files && element.files.length > 1) {\n\t        fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n\t      } else {\n\t        fileName = event.target.value.split('\\\\').pop();\n\t      }\n\t\n\t      if (fileName) {\n\t        this.labelNode.textContent = fileName;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates file uploader in the given node.\n\t     * If the given element indicates that it's an file uploader (having `data-file-uploader` attribute), instantiates it.\n\t     * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n\t     * @param {HTMLElement} element The element working as a file uploader.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fileInput !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-file-uploader]'))).forEach(function (element) {\n\t          return _this2.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return FileUploader;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} FileUploader#options\n\t * @property {string} [labelSelector] The CSS selector to find the label for the file name.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and file uploader instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = FileUploader;\n\tFileUploader.components = new WeakMap();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FabButton = function () {\n\t  /**\n\t   * Floating action button.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a floting action button.\n\t   */\n\t\n\t  function FabButton(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, FabButton);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    element.addEventListener('click', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates floating action buttons in the given element.\n\t   * If the given element indicates that it's an floating action button (having `data-fab` attribute), instantiates it.\n\t   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n\t   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n\t   * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t   */\n\t\n\t\n\t  _createClass(FabButton, [{\n\t    key: 'toggle',\n\t\n\t\n\t    /**\n\t     * Toggles this floating action button.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function toggle(event) {\n\t      if (this.element.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      if (this.element.dataset.state === 'closed') {\n\t        this.element.dataset.state = 'open';\n\t      } else {\n\t        this.element.dataset.state = 'closed';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates floating action button of the given element.\n\t     * @param {HTMLElement} element The element.\n\t     */\n\t\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fab !== undefined) {\n\t        this.create(target);\n\t      } else {\n\t        var _ret = function () {\n\t          var handler = function handler(event) {\n\t            var element = (0, _eventMatches2.default)(event, '[data-fab]');\n\t            if (element && !_this2.components.has(element)) {\n\t              _this2.create(element).toggle(event);\n\t            }\n\t          };\n\t          target.addEventListener('click', handler);\n\t          return {\n\t            v: {\n\t              release: function release() {\n\t                return target.removeEventListener('click', handler);\n\t              }\n\t            }\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t  }]);\n\t\n\t  return FabButton;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and floating action button instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = FabButton;\n\tFabButton.components = new WeakMap();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = eventMatches;\n\tvar matchesFuncName = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'].filter(function (name) {\n\t  return typeof document.documentElement[name] === 'function';\n\t})[0];\n\t\n\tfunction eventMatches(event, selector) {\n\t  // <svg> in IE does not have `Element#msMatchesSelector()`.\n\t  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n\t  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n\t  if (typeof event.target[matchesFuncName] === 'function') {\n\t    if (event.target[matchesFuncName](selector)) {\n\t      // If event target itself matches the given selector, return it\n\t      return event.target;\n\t    } else if (event.target[matchesFuncName](selector + ' *')) {\n\t      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n\t      for (var traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n\t        if (traverse[matchesFuncName](selector)) {\n\t          return traverse;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(7);\n\t\n\tvar _toggleClass = __webpack_require__(8);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ContentSwitcher = function () {\n\t  /**\n\t   * Set of content switcher buttons.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a switcher button is selected.\n\t   *   Cancellation of this event stops selection of content switcher button.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t   */\n\t\n\t  function ContentSwitcher(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, ContentSwitcher);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorButton: 'input[type=\"radio\"], a.bx--content-switcher__btn',\n\t      selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n\t      classActive: 'bx--content-switcher--selected',\n\t      eventBeforeSelected: 'content-switcher-beingselected',\n\t      eventAfterSelected: 'content-switcher-selected'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t\n\t    [].concat(_toConsumableArray(element.querySelectorAll('input'))).forEach(function (input) {\n\t      if (input.checked) _this._changeActive(input);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a set of content switcher buttons of the given element.\n\t   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a switcher button is selected.\n\t   *   Cancellation of this event stops selection of content switcher button.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t   */\n\t\n\t\n\t  _createClass(ContentSwitcher, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Handles click on content switcher button set.\n\t     * If the click is on a content switcher button, activates it.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var button = (0, _eventMatches2.default)(event, this.options.selectorButton);\n\t\n\t      if (button) {\n\t        this.setActive(button);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n\t     * @private\n\t     * @param {HTMLElement} item The button to be selected.\n\t     */\n\t\n\t  }, {\n\t    key: '_changeActive',\n\t    value: function _changeActive(item) {\n\t      var _this2 = this;\n\t\n\t      // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n\t      var itemLink = item.querySelector(this.options.selectorLink);\n\t      if (itemLink) {\n\t        [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLink))).forEach(function (link) {\n\t          if (link !== itemLink) {\n\t            link.setAttribute('aria-selected', 'false');\n\t          }\n\t        });\n\t        itemLink.setAttribute('aria-selected', 'true');\n\t      }\n\t\n\t      var selectorButtons = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorButton)));\n\t\n\t      selectorButtons.forEach(function (button) {\n\t        if (button !== item) {\n\t          (0, _toggleClass2.default)(button, _this2.options.classActive, false);\n\t          [].concat(_toConsumableArray(button.ownerDocument.querySelectorAll(button.dataset.target))).forEach(function (element) {\n\t            return element.setAttribute('hidden', '');\n\t          });\n\t        }\n\t      });\n\t\n\t      (0, _toggleClass2.default)(item, this.options.classActive, true);\n\t      [].concat(_toConsumableArray(item.ownerDocument.querySelectorAll(item.dataset.target))).forEach(function (element) {\n\t        return element.removeAttribute('hidden');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n\t     * @typedef {Object} ContentSwitcher~cancelError\n\t     * @property {boolean} canceled `true` always.\n\t     * @property {boolean} item The content switcher button that was about to be selected.\n\t     */\n\t\n\t    /**\n\t     * The callback called once switching is finished or is canceled.\n\t     * @callback ContentSwitcher~setActiveCallback\n\t     * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n\t     * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n\t     */\n\t\n\t    /**\n\t     * Selects a content switcher button.\n\t     * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n\t     * DOM elements associated with unselected buttons in the same way will be hidden.\n\t     * @param {HTMLElement} item The button to be selected.\n\t     * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'setActive',\n\t    value: function setActive(item, callback) {\n\t      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { item: item }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeActive(item);\n\t        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { item: item }\n\t        }));\n\t        if (callback) {\n\t          callback(null, item);\n\t        }\n\t      } else {\n\t        var error = new Error('Switching active item has been canceled.');\n\t        error.canceled = true;\n\t        error.item = item;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates content switcher button sets in the given node.\n\t     * If the given element indicates that it's an content switcher button set (having `data-content-switcher` attribute), instantiates it.\n\t     * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n\t     * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t     * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t     * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a switcher button is selected.\n\t     *   Cancellation of this event stops selection of content switcher button.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.contentSwitcher !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(document.querySelectorAll('[data-content-switcher]'))).forEach(function (element) {\n\t          return _this3.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ContentSwitcher;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} ContentSwitcher#options\n\t * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n\t * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t * @property {string} [classActive] The CSS class for switcher button's selected state.\n\t * @property {string} [eventBeforeSelected]\n\t *   The name of the custom event fired before a switcher button is selected.\n\t *   Cancellation of this event stops selection of content switcher button.\n\t * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and content switcher set instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = ContentSwitcher;\n\tContentSwitcher.components = new WeakMap();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tArray.from = Array.from || function fromArray(a) {\n\t  return Array.prototype.slice.call(a);\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.assign = Object.assign || function assignObject(inDst) {\n\t  if (inDst == null) {\n\t    // eslint-disable-line eqeqeq\n\t    // Throw if the given destination is null or undefined\n\t    throw new TypeError('Can\\'t convert to object: ${dst}');\n\t  }\n\t\n\t  var dst = Object(inDst);\n\t\n\t  [].concat(Array.prototype.slice.call(arguments)).slice(1).forEach(function (src) {\n\t    Object.keys(src).forEach(function (prop) {\n\t      dst[prop] = src[prop];\n\t    });\n\t  });\n\t\n\t  return dst;\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = toggleClass;\n\tfunction toggleClass(element, name, add) {\n\t  if (element.classList.contains(name) === !add) {\n\t    element.classList[add ? 'add' : 'remove'](name);\n\t  }\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(7);\n\t\n\tvar _contentSwitcher = __webpack_require__(5);\n\t\n\tvar _contentSwitcher2 = _interopRequireDefault(_contentSwitcher);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Tab = function (_ContentSwitcher) {\n\t  _inherits(Tab, _ContentSwitcher);\n\t\n\t  /**\n\t   * Container of tabs.\n\t   * @extends ContentSwitcher\n\t   * @param {HTMLElement} element The element working as a container of tabs.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n\t   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n\t   * @param {string} [options.classActive] The CSS class for tab's selected state.\n\t   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a tab is selected.\n\t   *   Cancellation of this event stops selection of tab.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t   */\n\t\n\t  function Tab(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Tab);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Tab).call(this, element, Object.assign({\n\t      selectorMenu: '.bx--tabs__nav',\n\t      selectorTrigger: '.bx--tabs__trigger',\n\t      selectorTriggerText: '.bx--tabs__trigger-text',\n\t      selectorButton: '.bx--tabs__nav-item',\n\t      selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n\t      selectorLink: '.bx--tabs__nav-link',\n\t      classActive: 'bx--tabs--selected',\n\t      classHidden: 'bx--tabs--hidden',\n\t      eventBeforeSelected: 'tab-beingselected',\n\t      eventAfterSelected: 'tab-selected'\n\t    }, options)));\n\t\n\t    _this.element.addEventListener('keydown', function (event) {\n\t      return _this.handleKeyDown(event);\n\t    });\n\t\n\t    var selected = _this.element.querySelector(_this.options.selectorButtonSelected);\n\t    if (selected) {\n\t      _this.updateTriggerText(selected);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Instantiates tab containers in the given node.\n\t   * If the given element indicates that it's an tab container (having `data-tabs` attribute), instantiates it.\n\t   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n\t   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n\t   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n\t   * @param {string} [options.classActive] The CSS class for tab's selected state.\n\t   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a tab is selected.\n\t   *   Cancellation of this event stops selection of tab.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t   */\n\t\n\t\n\t  _createClass(Tab, [{\n\t    key: '_changeActive',\n\t    value: function _changeActive(item) {\n\t      _get(Object.getPrototypeOf(Tab.prototype), '_changeActive', this).call(this, item);\n\t      this.updateTriggerText(item);\n\t    }\n\t\n\t    /**\n\t     * Handles click on tab container.\n\t     * * If the click is on a tab, activates it.\n\t     * * If the click is on the button to open the drop down menu, does so.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleClick',\n\t    value: function handleClick(event) {\n\t      _get(Object.getPrototypeOf(Tab.prototype), 'handleClick', this).call(this, event);\n\t      var button = (0, _eventMatches2.default)(event, this.options.selectorButton);\n\t      var trigger = (0, _eventMatches2.default)(event, this.options.selectorTrigger);\n\t      if (button) {\n\t        _get(Object.getPrototypeOf(Tab.prototype), 'handleClick', this).call(this, event);\n\t        this.updateMenuState();\n\t      }\n\t      if (trigger) {\n\t        this.updateMenuState();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles arrow keys on tab container.\n\t     * * Up/Left keys are used to go to previous tab.\n\t     * * Down/Right keys are used to go to next tab.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleKeyDown',\n\t    value: function handleKeyDown(event) {\n\t      var _this2 = this;\n\t\n\t      var triggerNode = this.element.querySelector(this.options.selectorTrigger);\n\t      if (triggerNode && triggerNode.offsetParent) {\n\t        return;\n\t      }\n\t\n\t      var direction = {\n\t        Left: -1,\n\t        Right: 1,\n\t        ArrowLeft: -1,\n\t        ArrowRight: 1\n\t      }[event.key || event.keyIdentifier];\n\t\n\t      if (direction) {\n\t        var buttons = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorButton)));\n\t        var button = this.element.querySelector(this.options.selectorButtonSelected);\n\t        var nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n\t        var nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex : nextIndex - Math.sign(nextIndex) * buttons.length;\n\t        this.setActive(buttons[nextIndexLooped], function (error, item) {\n\t          if (item) {\n\t            var link = item.querySelector(_this2.options.selectorLink);\n\t            if (link) {\n\t              link.focus();\n\t            }\n\t          }\n\t        });\n\t        event.preventDefault();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Shows/hides the drop down menu used in narrow mode.\n\t     */\n\t\n\t  }, {\n\t    key: 'updateMenuState',\n\t    value: function updateMenuState() {\n\t      this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n\t    }\n\t\n\t    /**\n\t     * Updates the text indicating the currently selected tab item.\n\t     * @param {HTMLElement} target The newly selected tab item.\n\t     */\n\t\n\t  }, {\n\t    key: 'updateTriggerText',\n\t    value: function updateTriggerText(target) {\n\t      this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n\t    }\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-tabs]'))).forEach(function (element) {\n\t          return _this3.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Tab;\n\t}(_contentSwitcher2.default);\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Tab#options\n\t * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t * @property {string} [selectorButton] The CSS selector to find tab containers.\n\t * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n\t * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n\t * @property {string} [classActive] The CSS class for tab's selected state.\n\t * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t * @property {string} [eventBeforeSelected]\n\t *   The name of the custom event fired before a tab is selected.\n\t *   Cancellation of this event stops selection of tab.\n\t * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and tab container instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Tab;\n\tTab.components = new WeakMap();\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tMath.sign = Math.sign || function sign(x) {\n\t  var n = +x;\n\t  return n === 0 ? n : n / Math.abs(n);\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(6);\n\t\n\tvar _toggleClass = __webpack_require__(8);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OverflowMenu = function () {\n\t  function OverflowMenu(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, OverflowMenu);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.constructor.components.set(this.element, this);\n\t    this.element.ownerDocument.addEventListener('click', function (event) {\n\t      return _this.handleDocumentClick(event);\n\t    });\n\t    this.element.ownerDocument.addEventListener('keypress', function (event) {\n\t      return _this.handleKeyPress(event);\n\t    });\n\t  }\n\t\n\t  _createClass(OverflowMenu, [{\n\t    key: 'handleDocumentClick',\n\t    value: function handleDocumentClick(event) {\n\t      var isOfSelf = this.element.contains(event.target);\n\t      var shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\t\n\t      if (isOfSelf && this.element.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      (0, _toggleClass2.default)(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n\t    }\n\t  }, {\n\t    key: 'handleKeyPress',\n\t    value: function handleKeyPress(event) {\n\t      var key = event.key || event.which;\n\t      if (key === 'Enter' || key === 13) {\n\t        var isOfSelf = this.element.contains(event.target);\n\t        var shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\t\n\t        if (isOfSelf && this.element.tagName === 'A') {\n\t          event.preventDefault();\n\t        }\n\t\n\t        (0, _toggleClass2.default)(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.overflowMenu !== undefined) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-overflow-menu]'))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return OverflowMenu;\n\t}();\n\t\n\texports.default = OverflowMenu;\n\t\n\t\n\tOverflowMenu.components = new WeakMap();\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(13);\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tvar _toggleClass = __webpack_require__(8);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * @param {Element} element The element to obtain transition duration from.\n\t * @returns {number} The transition duration of the given property set in the given element.\n\t */\n\tfunction getTransitionDuration(element) {\n\t  var computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n\t  var durations = computedStyle.transitionDuration.split(/,\\s*/).map(function (transitionDuration) {\n\t    return parseFloat(transitionDuration);\n\t  }).filter(function (duration) {\n\t    return !isNaN(duration);\n\t  });\n\t  return durations.length > 0 ? Math.max.apply(Math, _toConsumableArray(durations)) : 0;\n\t}\n\t\n\tvar Modal = function () {\n\t  /**\n\t   * Modal dialog.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a modal dialog.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.classVisible] The CSS class for the visible state.\n\t   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this modal is shown.\n\t   *   Cancellation of this event stops showing the modal.\n\t   * @param {string} [options.eventAfterShown] The name of the custom event fired after this modal is shown.\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this modal is hidden.\n\t   *   Cancellation of this event stops hiding the modal.\n\t   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this modal is hidden.\n\t   */\n\t\n\t  function Modal(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Modal);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      classVisible: 'is-visible',\n\t      classNoScroll: 'bx--noscroll',\n\t      eventBeforeShown: 'modal-beingshown',\n\t      eventAfterShown: 'modal-shown',\n\t      eventBeforeHidden: 'modal-beinghidden',\n\t      eventAfterHidden: 'modal-hidden'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.hookCloseActions();\n\t  }\n\t\n\t  /**\n\t   * Instantiates modal dialog of the given element.\n\t   * @param {HTMLElement} element The element working as a modal dialog.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.classVisible] The CSS class for the visible state.\n\t   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this modal is shown.\n\t   *   Cancellation of this event stops showing the modal.\n\t   * @param {string} [options.eventAfterShown] The name of the custom event fired after this modal is shown.\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this modal is hidden.\n\t   *   Cancellation of this event stops hiding the modal.\n\t   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this modal is hidden.\n\t   */\n\t\n\t\n\t  _createClass(Modal, [{\n\t    key: 'hookCloseActions',\n\t\n\t\n\t    /**\n\t     * Adds event listeners for closing this dialog.\n\t     */\n\t    value: function hookCloseActions() {\n\t      var _this = this;\n\t\n\t      this.element.addEventListener('click', function (event) {\n\t        if (event.currentTarget === event.target) _this.hide();\n\t      });\n\t\n\t      if (this.keydownHandler) {\n\t        this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n\t        this.keydownHandler = null;\n\t      }\n\t\n\t      this.keydownHandler = function (event) {\n\t        if (event.which === 27) {\n\t          _this.hide();\n\t        }\n\t      };\n\t\n\t      this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\t\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll('[data-modal-close]'))).forEach(function (element) {\n\t        element.addEventListener('click', function () {\n\t          _this.hide();\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n\t     * @private\n\t     * @param {boolean} visible `true` to make this modal dialog visible.\n\t     * @param {Function} callback Callback called when change in state completes.\n\t     */\n\t\n\t  }, {\n\t    key: '_changeState',\n\t    value: function _changeState(visible, callback) {\n\t      var _this2 = this;\n\t\n\t      var finished = void 0;\n\t      var finishedTransition = function finishedTransition() {\n\t        if (!finished) {\n\t          finished = true;\n\t          _this2.element.removeEventListener('transitionend', finishedTransition);\n\t          callback();\n\t        }\n\t      };\n\t\n\t      this.element.addEventListener('transitionend', finishedTransition);\n\t      var transitionDuration = getTransitionDuration(this.element);\n\t      (0, _toggleClass2.default)(this.element, this.options.classVisible, visible);\n\t      (0, _toggleClass2.default)(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n\t      if (transitionDuration === 0) {\n\t        finishedTransition();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The callback called once showing/hiding this dialog is finished or is canceled.\n\t     * @callback Modal~stateChangeCallback\n\t     * @param {Error} error\n\t     *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n\t     *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n\t     *   calls `.preventDefault()` against the event.\n\t     * @param {boolean} newState The new toggle state.\n\t     */\n\t\n\t    /**\n\t     * Shows this modal dialog.\n\t     * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n\t     * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'show',\n\t    value: function show(launchingElement, callback) {\n\t      var _this3 = this;\n\t\n\t      if (typeof launchingElement === 'function') {\n\t        callback = launchingElement; // eslint-disable-line no-param-reassign\n\t        launchingElement = null; // eslint-disable-line no-param-reassign\n\t      }\n\t\n\t      if (launchingElement && !launchingElement.nodeType) {\n\t        throw new TypeError('DOM Node should be given for launchingElement.');\n\t      }\n\t\n\t      if (this.element.classList.contains(this.options.classVisible)) {\n\t        if (callback) {\n\t          callback(null, true);\n\t        }\n\t        return;\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options.eventBeforeShown, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { launchingElement: launchingElement }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeState(true, function () {\n\t          _this3.element.dispatchEvent(new CustomEvent(_this3.options.eventAfterShown, {\n\t            bubbles: true,\n\t            cancelable: true,\n\t            detail: { launchingElement: launchingElement }\n\t          }));\n\t          if (callback) {\n\t            callback();\n\t          }\n\t        });\n\t      } else {\n\t        var error = new Error('Showing dialog has been canceled.');\n\t        error.canceled = true;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Hides this modal dialog.\n\t     * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'hide',\n\t    value: function hide(callback) {\n\t      var _this4 = this;\n\t\n\t      if (!this.element.classList.contains(this.options.classVisible)) {\n\t        if (callback) {\n\t          callback(null, true);\n\t        }\n\t        return;\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n\t        bubbles: true,\n\t        cancelable: true\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeState(false, function () {\n\t          _this4.element.dispatchEvent(new CustomEvent(_this4.options.eventAfterHidden, {\n\t            bubbles: true,\n\t            cancelable: true\n\t          }));\n\t          if (callback) {\n\t            callback();\n\t          }\n\t        });\n\t      } else {\n\t        var error = new Error('Hiding dialog has been canceled.');\n\t        error.canceled = true;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.keydownHandler) {\n\t        this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n\t        this.keydownHandler = null;\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * @deprecated\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates modal dialogs in the given element.\n\t     * If the given element indicates that it's an modal dialog (having `data-modal` attribute), instantiates it.\n\t     * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n\t     * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n\t     * @implements Component\n\t     * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.classVisible] The CSS class for the visible state.\n\t     * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t     * @param {string} [options.eventBeforeShown]\n\t     *   The name of the custom event fired before this modal is shown.\n\t     *   Cancellation of this event stops showing the modal.\n\t     * @param {string} [options.eventAfterShown] The name of the custom event fired after this modal is shown.\n\t     * @param {string} [options.eventBeforeHidden]\n\t     *   The name of the custom event fired before this modal is hidden.\n\t     *   Cancellation of this event stops hiding the modal.\n\t     * @param {string} [options.eventAfterHidden] The name of the custom event fired after this modal is hidden.\n\t     * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this5 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.modal !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        var _ret = function () {\n\t          var handler = function handler(event) {\n\t            var element = (0, _eventMatches2.default)(event, '[data-modal-target]');\n\t\n\t            if (element) {\n\t              var modalElements = [].concat(_toConsumableArray(element.ownerDocument.querySelectorAll(element.dataset.modalTarget)));\n\t              if (modalElements.length > 1) {\n\t                throw new Error('Target modal must be unique.');\n\t              }\n\t\n\t              if (modalElements.length === 1) {\n\t                (function () {\n\t                  if (element.tagName === 'A') {\n\t                    event.preventDefault();\n\t                  }\n\t\n\t                  var modal = _this5.create(modalElements[0], options);\n\t                  modal.show(element, function (error, shownAlready) {\n\t                    if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n\t                      modal.element.focus();\n\t                    }\n\t                  });\n\t                })();\n\t              }\n\t            }\n\t          };\n\t          target.addEventListener('click', handler);\n\t          return {\n\t            v: {\n\t              release: function release() {\n\t                return target.removeEventListener('click', handler);\n\t              }\n\t            }\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'hook',\n\t    value: function hook() {\n\t      console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Modal#options\n\t * @property {string} [classVisible] The CSS class for the visible state.\n\t * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t * @property {string} [eventBeforeShown]\n\t *   The name of the custom event fired before this modal is shown.\n\t *   Cancellation of this event stops showing the modal.\n\t * @property {string} [eventAfterShown] The name of the custom event fired after this modal is shown.\n\t * @property {string} [eventBeforeHidden]\n\t *   The name of the custom event fired before this modal is hidden.\n\t *   Cancellation of this event stops hiding the modal.\n\t * @property {string} [eventAfterHidden] The name of the custom event fired after this modal is hidden.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and modal instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Modal;\n\tModal.components = new WeakMap();\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar missingNativeCustomEvent = function () {\n\t  try {\n\t    new CustomEvent('test-event'); // eslint-disable-line no-new\n\t  } catch (error) {\n\t    return true;\n\t  }\n\t}();\n\tif (missingNativeCustomEvent) {\n\t  window.CustomEvent = function CustomEvent(type) {\n\t    var init = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    var event = document.createEvent('HTMLEvents');\n\t    event.initEvent(type, init.bubbles, init.cancelable);\n\t    if (init.detail) {\n\t      event.detail = init.detail;\n\t    }\n\t    return event;\n\t  };\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(13);\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HeaderNav = function () {\n\t  /**\n\t   * Header with taxonomy menu.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a taxonomy menu.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t   * @param {string} [options.classActive] The CSS class for the visible state.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this taxonomy menu is shown.\n\t   *   Cancellation of this event stops showing the taxonomy menu.\n\t   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this taxonomy menu is hidden.\n\t   *   Cancellation of this event stops hiding the taxonomy menu.\n\t   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a menu item is selected.\n\t   *   Cancellation of this event stops the selection.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t   */\n\t\n\t  function HeaderNav(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, HeaderNav);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorTriggerLabel: '.current-taxonomy',\n\t      classActive: 'taxonomy-nav--active',\n\t      selectorMenu: '.taxonomy-menu',\n\t      selectorItem: '.taxonomy-item',\n\t      selectorItemLink: '.taxonomy-item--taxonomy-menu',\n\t      selectorLabel: '.taxonomy-item__label',\n\t      eventBeforeShown: 'header-beingshown',\n\t      eventAfterShown: 'header-shown',\n\t      eventBeforeHidden: 'header-beinghidden',\n\t      eventAfterHidden: 'header-hidden',\n\t      eventBeforeSelected: 'header-beingselected',\n\t      eventAfterSelected: 'header-selected'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\t\n\t    this.element.addEventListener('keydown', function (event) {\n\t      return _this.toggleNav(event);\n\t    });\n\t\n\t    [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItemLink))).forEach(function (item) {\n\t      item.addEventListener('click', function (e) {\n\t        return _this.select(e);\n\t      });\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates taxonomy menus in the given element.\n\t   * If the given element indicates that it's an taxonomy menu (having `data-nav` attribute), instantiates it.\n\t   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n\t   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n\t   * @implements Component\n\t   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t   * @param {string} [options.classActive] The CSS class for the visible state.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this taxonomy menu is shown.\n\t   *   Cancellation of this event stops showing the taxonomy menu.\n\t   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this taxonomy menu is hidden.\n\t   *   Cancellation of this event stops hiding the taxonomy menu.\n\t   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a menu item is selected.\n\t   *   Cancellation of this event stops the selection.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t   * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t   */\n\t\n\t\n\t  _createClass(HeaderNav, [{\n\t    key: 'toggleNav',\n\t\n\t\n\t    /**\n\t     * Shows/hides this taxonomy menu.\n\t     * @param {Event} event The event triggering this function.\n\t     */\n\t    value: function toggleNav(event) {\n\t      var isActive = this.element.classList.contains(this.options.classActive);\n\t      var add = void 0;\n\t      if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n\t        // Toggle button or ESC key on nav\n\t        add = !isActive;\n\t      } else if (event.type === 'keydown' && event.which === 27) {\n\t        // Down arrow on launch button\n\t        add = false;\n\t      } else {\n\t        return;\n\t      }\n\t\n\t      var launchingElement = (0, _eventMatches2.default)(event, '[data-nav-target]') || event.currentTarget;\n\t      if (launchingElement.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { launchingElement: launchingElement }\n\t      });\n\t      var defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\t\n\t      if (add) {\n\t        this.triggerNode = launchingElement;\n\t        this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n\t      }\n\t\n\t      if (defaultNotPrevented) {\n\t        this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n\t        (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n\t        this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { launchingElement: launchingElement }\n\t        }));\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Selects a menu item.\n\t     * @param {Event} event The event triggering this function.\n\t     */\n\t\n\t  }, {\n\t    key: 'select',\n\t    value: function select(event) {\n\t      var activatedElement = event.currentTarget;\n\t      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: {\n\t          initiatingEvent: event,\n\t          itemElement: activatedElement\n\t        }\n\t      });\n\t\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItem))).forEach(function (element) {\n\t          if (element.contains(activatedElement)) {\n\t            element.classList.add('selected');\n\t          } else if (element.classList.contains('selected')) {\n\t            element.classList.remove('selected');\n\t          }\n\t        });\n\t        activatedElement.classList.add('selected');\n\t        if (this.triggerLabelNode) {\n\t          this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n\t        }\n\t        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { itemElement: activatedElement }\n\t        }));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * @deprecated\n\t     */\n\t\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.nav !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        var _ret = function () {\n\t          var handler = function handler(event) {\n\t            var element = (0, _eventMatches2.default)(event, '[data-nav-target]');\n\t\n\t            if (element) {\n\t              var headerElements = [].concat(_toConsumableArray(element.ownerDocument.querySelectorAll(element.dataset.navTarget)));\n\t              if (headerElements.length > 1) {\n\t                throw new Error('Target header must be unique.');\n\t              }\n\t\n\t              if (headerElements.length === 1) {\n\t                if (element.tagName === 'A') {\n\t                  event.preventDefault();\n\t                }\n\t                _this2.create(headerElements[0], options).toggleNav(event);\n\t              }\n\t            }\n\t          };\n\t\n\t          target.addEventListener('click', handler);\n\t          target.addEventListener('keydown', handler);\n\t\n\t          return {\n\t            v: {\n\t              release: function release() {\n\t                target.removeEventListener('keydown', handler);\n\t                target.removeEventListener('click', handler);\n\t              }\n\t            }\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Instantiates taxonomy menu of the given element.\n\t     * @param {HTMLElement} element The element working as a taxonomy menu.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t     * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t     * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t     * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t     * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t     * @param {string} [options.classActive] The CSS class for the visible state.\n\t     * @param {string} [options.eventBeforeShown]\n\t     *   The name of the custom event fired before this taxonomy menu is shown.\n\t     *   Cancellation of this event stops showing the taxonomy menu.\n\t     * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t     * @param {string} [options.eventBeforeHidden]\n\t     *   The name of the custom event fired before this taxonomy menu is hidden.\n\t     *   Cancellation of this event stops hiding the taxonomy menu.\n\t     * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a menu item is selected.\n\t     *   Cancellation of this event stops the selection.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t  }, {\n\t    key: 'hook',\n\t    value: function hook() {\n\t      console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n\t    }\n\t  }]);\n\t\n\t  return HeaderNav;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} HeaderNav#options\n\t * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n\t * @property {string} [selectorItem] The CSS selector to find the menu items.\n\t * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n\t * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n\t * @property {string} [classActive] The CSS class for the visible state.\n\t * @property {string} [eventBeforeShown]\n\t *   The name of the custom event fired before this taxonomy menu is shown.\n\t *   Cancellation of this event stops showing the taxonomy menu.\n\t * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t * @property {string} [eventBeforeHidden]\n\t *   The name of the custom event fired before this taxonomy menu is hidden.\n\t *   Cancellation of this event stops hiding the taxonomy menu.\n\t * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t * @property {string} [eventBeforeSelected]\n\t *   The name of the custom event fired before a menu item is selected.\n\t *   Cancellation of this event stops the selection.\n\t * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and taxonomy menu instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = HeaderNav;\n\tHeaderNav.components = new WeakMap();\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Toolbars = function () {\n\t  /**\n\t   * Search button in tool bar.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as an search button.\n\t   */\n\t\n\t  function Toolbars(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Toolbars);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleActionClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a search button of the given element.\n\t   * @param {HTMLElement} element The element working as a search button.\n\t   */\n\t\n\t\n\t  _createClass(Toolbars, [{\n\t    key: 'handleActionClick',\n\t\n\t\n\t    /**\n\t     * Show/hide search box.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleActionClick(event) {\n\t      var searchActionNode = event.currentTarget;\n\t\n\t      if (searchActionNode.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      this.element.classList.toggle('show-search');\n\t      if (this.searchFieldNode) {\n\t        this.searchFieldNode.classList.toggle('show-search');\n\t        this.searchFieldNode.value = '';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates search buttons in the given node.\n\t     * If the given element indicates that it's an search button (having `data-list-icons-search-action-target` attribute), instantiates it.\n\t     * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n\t     * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.listIconsSearchActionTarget !== undefined) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-list-icons-search-action-target]'))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Toolbars;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and search button instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Toolbars;\n\tToolbars.components = new WeakMap();\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _toggleClass = __webpack_require__(8);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Loading = function () {\n\t  /**\n\t   * Spinner indicating loading state.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a spinner.\n\t   * @param {Object} options The component options.\n\t   * @param {boolean} options.active `true` if this spinner should roll.\n\t   */\n\t\n\t  function Loading(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? { active: true } : arguments[1];\n\t\n\t    _classCallCheck(this, Loading);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.active = 'active' in options ? options.active : true;\n\t    this.ie = false;\n\t\n\t    // Check if browser is Internet Explorer\n\t    if (options.ie || window.ActiveXObject || 'ActiveXObject' in window) {\n\t      this.ie = true;\n\t      this.element.classList.add('bx--loading--ie');\n\t    }\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    // Initialize spinner\n\t    this.set(this.active);\n\t  }\n\t\n\t  /**\n\t   * Instantiates spinner of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(Loading, [{\n\t    key: 'set',\n\t\n\t\n\t    /**\n\t     * Sets active/inactive state.\n\t     * @param {boolean} active `true` if this spinner should roll.\n\t     */\n\t    value: function set(active) {\n\t      if (typeof active !== 'boolean') {\n\t        throw new TypeError('set expects a boolean.');\n\t      }\n\t\n\t      this.active = active;\n\t\n\t      if (this.ie) {\n\t        (0, _toggleClass2.default)(this.element, 'bx--loading--stop--ie', !this.active);\n\t      }\n\t      (0, _toggleClass2.default)(this.element, 'bx--loading--stop', !this.active);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Toggles active/inactive state.\n\t     * @param {boolean} active `true` if this spinner should roll.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      return this.set(!this.active);\n\t    }\n\t\n\t    /**\n\t     * @returns {boolean} `true` if this spinner is rolling roll.\n\t     */\n\t\n\t  }, {\n\t    key: 'isActive',\n\t    value: function isActive() {\n\t      return this.active;\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates spinner in the given node.\n\t     * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n\t     * Otherwise, instantiates spinners by searching for spinners in the given node.\n\t     * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-loading]'))).forEach(function (element) {\n\t          return _this.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Loading;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and spinner instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Loading;\n\tLoading.components = new WeakMap();\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(13);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Dropdown = function () {\n\t  /**\n\t   * A selector with drop downs.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a selector.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a drop down item is selected.\n\t   *   Cancellation of this event stops selection of drop down item.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t   */\n\t\n\t  function Dropdown(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Dropdown);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorItem: '[data-option] > .bx--dropdown__link',\n\t      selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n\t      classSelected: 'bx--dropdown--selected',\n\t      eventBeforeSelected: 'dropdown-beingselected',\n\t      eventAfterSelected: 'dropdown-selected'\n\t    }, options);\n\t\n\t    this.element.dataset.dropdown = '';\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.ownerDocument.addEventListener('click', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t    this.element.addEventListener('keypress', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.selected(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates selector of the given element.\n\t   * @param {HTMLElement} element The element working as a selector.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a drop down item is selected.\n\t   *   Cancellation of this event stops selection of drop down item.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t   */\n\t\n\t\n\t  _createClass(Dropdown, [{\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * Opens and closes the dropdown menu.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle(event) {\n\t      var isOfSelf = this.element.contains(event.target);\n\t\n\t      if (isOfSelf) {\n\t        this.element.classList.toggle('bx--dropdown--open');\n\t      } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n\t        this.element.classList.remove('bx--dropdown--open');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles clicking on the dropdown options, doing the following:\n\t     * * Change Dropdown text to selected option.\n\t     * * Remove selected option from options when selected.\n\t     * * Emit custom events.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'selected',\n\t    value: function selected(event) {\n\t      var _this2 = this;\n\t\n\t      var activatedElement = event.target;\n\t      if (activatedElement.parentElement.dataset.option !== undefined) {\n\t        var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { item: activatedElement }\n\t        });\n\t\n\t        if (this.element.dispatchEvent(eventStart)) {\n\t          this.element.firstElementChild.textContent = activatedElement.textContent;\n\t          this.element.dataset.value = activatedElement.parentElement.dataset.value;\n\t\n\t          [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItemSelected))).forEach(function (item) {\n\t            if (activatedElement !== item) {\n\t              item.classList.remove(_this2.options.classSelected);\n\t            }\n\t          });\n\t\n\t          activatedElement.classList.add(this.options.classSelected);\n\t\n\t          this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t            bubbles: true,\n\t            cancelable: true,\n\t            detail: { item: activatedElement }\n\t          }));\n\t        }\n\t      }\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates selectors in the given node.\n\t     * If the given element indicates that it's an selector (having `data-dropdown` attribute), instantiates it.\n\t     * Otherwise, instantiates selectors by searching for selectors in the given node.\n\t     * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t     * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t     * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a drop down item is selected.\n\t     *   Cancellation of this event stops selection of drop down item.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-dropdown]'))).forEach(function (element) {\n\t          return _this3.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Dropdown;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Dropdown#options\n\t * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t * @property {string} [classSelected] The CSS class for the selected dropdown item.\n\t * @property {string} [eventBeforeSelected]\n\t *   The name of the custom event fired before a drop down item is selected.\n\t *   Cancellation of this event stops selection of drop down item.\n\t * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and selector instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Dropdown;\n\tDropdown.components = new WeakMap();\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Card = function () {\n\t  /**\n\t   * The container for cards.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a container.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t   */\n\t\n\t  function Card(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Card);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t    this.options = Object.assign({\n\t      selectorCard: '.bx--card'\n\t    }, options);\n\t    this.constructor.components.set(this.element, this);\n\t    this.element.addEventListener('keydown', function (event) {\n\t      return _this.cardKeyPress(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates card container of the given element.\n\t   * @param {HTMLElement} element The element working as a container.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t   */\n\t\n\t\n\t  _createClass(Card, [{\n\t    key: 'cardKeyPress',\n\t\n\t\n\t    /**\n\t     * Goes back/forward among cards,\n\t     * right arrow key for going forward, left arrow key for going backward.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function cardKeyPress(event) {\n\t      var direction = {\n\t        Left: -1,\n\t        Right: 1,\n\t        ArrowLeft: -1,\n\t        ArrowRight: 1\n\t      }[event.key || event.keyIdentifier];\n\t      var card = (0, _eventMatches2.default)(event, this.options.selectorCard);\n\t\n\t      if (direction && card && card === document.activeElement) {\n\t        var cards = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorCard)));\n\t        var nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n\t        var nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex : nextIndex - Math.sign(nextIndex) * cards.length;\n\t        cards[nextIndexLooped].focus();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates card container in the given node.\n\t     * If the given element indicates that it's an card container (having `data-card-list` attribute), instantiates it.\n\t     * Otherwise, instantiates card containers by searching for card containers in the given node.\n\t     * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.cardList !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-card-list]'))).forEach(function (element) {\n\t          return _this2.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Card;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Card#options\n\t * @property {string} [selectorCard] The CSS selector to find cards.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and card list instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Card;\n\tCard.components = new WeakMap();\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(6);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar NumberInput = function () {\n\t  /**\n\t   * Number input UI.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a number input UI.\n\t   */\n\t\n\t  function NumberInput(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, NumberInput);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.options = options;\n\t    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\t\n\t    this.element = element;\n\t    this.constructor.components.set(this.element, this);\n\t    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n\t    // Also <svg> does not seems to have `Element.classList`.\n\t    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates number input UI of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(NumberInput, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Increase/decrease number by clicking on up/down icons.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var state = event.currentTarget.classList;\n\t      var numberInput = this.element.querySelector('.bx--number__input');\n\t\n\t      if (state.contains('bx--number__arrow--icon-up')) {\n\t        if (this.options.ie) {\n\t          ++numberInput.value;\n\t        } else {\n\t          numberInput.stepUp();\n\t        }\n\t      } else if (state.contains('bx--number__arrow--icon-down')) {\n\t        if (this.options.ie) {\n\t          if (numberInput.value > 0) {\n\t            --numberInput.value;\n\t          }\n\t        } else {\n\t          numberInput.stepDown();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates number input UI in the given node.\n\t     * If the given element indicates that it's an number input UI (having `data-numberinput` attribute), instantiates it.\n\t     * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n\t     * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.numberinput !== undefined) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-numberinput]'))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return NumberInput;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and number input UI instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = NumberInput;\n\tNumberInput.components = new WeakMap();\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(4);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(7);\n\t\n\tvar _toggleClass = __webpack_require__(8);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Table = function () {\n\t  /**\n\t   * Data table.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a data table.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t   * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t   * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t   * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t   */\n\t\n\t  function Table(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Table);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      selectorTitle: '.bx--table__column-title',\n\t      selectorRow: '.bx--table__row',\n\t      selectorCheckbox: '.bx--checkbox',\n\t      classSortState: 'bx--table__column-title--rotated',\n\t      classCheckState: 'bx--table__row--checked',\n\t      eventBeforeSortToggled: 'table-sort-beingtoggled',\n\t      eventAfterSortToggled: 'table-sort-toggled',\n\t      eventBeforeCheckToggled: 'table-check-beingtoggled',\n\t      eventAfterCheckToggled: 'table-check-toggled'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a data table of the given element.\n\t   * @param {HTMLElement} element The element working as a data table.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t   * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t   * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t   * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t   */\n\t\n\t\n\t  _createClass(Table, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Handles click on data table.\n\t     * * If the click is on a column title, toggles its sorting state.\n\t     * * If the click is on a check box, toggles the check box.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var title = (0, _eventMatches2.default)(event, this.options.selectorTitle);\n\t      var row = (0, _eventMatches2.default)(event, this.options.selectorRow);\n\t      var checkbox = (0, _eventMatches2.default)(event, this.options.selectorCheckbox);\n\t      if (title) {\n\t        this.toggleState('Sort', title);\n\t      }\n\t      if (row && checkbox) {\n\t        this.toggleState('Check', row);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The callback called once toggling is finished or is canceled.\n\t     * @callback Table~toggleStateCallback\n\t     * @param {Error} error\n\t     *   An error object with `true` in its `canceled` property if the toggling is canceled.\n\t     *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n\t     *   calls `.preventDefault()` against the event.\n\t     * @param {HTMLElement} element The toggled element.\n\t     * @param {boolean} newState The new toggle state.\n\t     */\n\t\n\t    /**\n\t     * Toggles a sorting state or a check box's state.\n\t     * @param {string} type\n\t     *   Specifies what state to toggle:\n\t     *   * `\"Sort\"` for toggling a sorting state.\n\t     *   * `\"Check\"` for toggling a check box's state.\n\t     * @param {HTMLElement} element The DOM element to toggle its state.\n\t     * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggleState',\n\t    value: function toggleState(type, element, callback) {\n\t      var newState = !element.classList.contains(this.options['class' + type + 'State']);\n\t      var eventStart = new CustomEvent(this.options['eventBefore' + type + 'Toggled'], {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { newState: newState }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (element.dispatchEvent(eventStart)) {\n\t        (0, _toggleClass2.default)(element, this.options['class' + type + 'State'], newState);\n\t        // this._changeActive(item);\n\t        element.dispatchEvent(new CustomEvent(this.options['eventAfter' + type + 'Toggled'], {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { newState: newState }\n\t        }));\n\t        if (callback) {\n\t          callback(null, element, newState);\n\t        }\n\t      } else {\n\t        var error = new Error('Toggling on table has been canceled.');\n\t        error.canceled = true;\n\t        error.element = element;\n\t        error.newState = newState;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Sets up the given node to instantiate data tables in.\n\t     * If the given element indicates that it's an data table (having `data-table` attribute), instantiates it.\n\t     * Otherwise, lazily instantiates data table when it's clicked on.\n\t     * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t     * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t     * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t     * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t     * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t     * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t     * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t     * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t     * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t     * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.table !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        var _ret = function () {\n\t          var handler = function handler(event) {\n\t            var element = (0, _eventMatches2.default)(event, '[data-table]');\n\t            if (element && !_this2.components.has(element)) {\n\t              _this2.create(element, options).handleClick(event);\n\t            }\n\t          };\n\t          target.addEventListener('click', handler);\n\t          return {\n\t            v: {\n\t              release: function release() {\n\t                return target.removeEventListener('click', handler);\n\t              }\n\t            }\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Table;\n\t}();\n\t\n\t/**\n\t * The component options.\n\t * @member {Object} Table#options\n\t * @property {string} [selectorTitle] The CSS selector to find column titles.\n\t * @property {string} [selectorRow] The CSS selector to find rows.\n\t * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n\t * @property {string} [classSortState] The CSS class for the sorting state.\n\t * @property {string} [classCheckState] The CSS class for the checked state.\n\t * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t */\n\t\n\t/**\n\t * The map associating DOM element and data table instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Table;\n\tTable.components = new WeakMap();\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _lodash = __webpack_require__(22);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DetailPageHeader = function () {\n\t\n\t  /**\n\t   * The Detail Page Header.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a page header.\n\t   * @param {Object} [options] The component options.\n\t   */\n\t\n\t  function DetailPageHeader(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, DetailPageHeader);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign({\n\t      slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up'\n\t    }, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    // Debounce scroll event calls to handleScroll\n\t    var debouncedScroll = (0, _lodash2.default)(this.handleScroll.bind(this), 50);\n\t\n\t    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n\t  }\n\t\n\t  /**\n\t   * Instantiates detail page header of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   * @param {Object} [options] The component options.\n\t   */\n\t\n\t\n\t  _createClass(DetailPageHeader, [{\n\t    key: 'handleScroll',\n\t\n\t\n\t    /**\n\t     * Adds class to header based on users position on the page\n\t     */\n\t    value: function handleScroll() {\n\t      if (this.element.ownerDocument.defaultView.scrollY > 101) {\n\t        this.element.classList.add(this.options.slideUp);\n\t      } else {\n\t        this.element.classList.remove(this.options.slideUp);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates the detail page header in the given element.\n\t     * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n\t     * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n\t     * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      var target = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];\n\t      var options = arguments[1];\n\t\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.dataset.detailPageHeader !== undefined) {\n\t        this.create(target, options);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll('[data-detail-page-header]'))).forEach(function (element) {\n\t          return _this.create(element, options);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return DetailPageHeader;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and detail page header instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = DetailPageHeader;\n\tDetailPageHeader.components = new WeakMap();\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t/**\n\t * lodash 4.0.6 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar NAN = 0 / 0;\n\t\n\t/** `Object#toString` result references. */\n\tvar funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    symbolTag = '[object Symbol]';\n\t\n\t/** Used to match leading and trailing whitespace. */\n\tvar reTrim = /^\\s+|\\s+$/g;\n\t\n\t/** Used to detect bad signed hexadecimal string values. */\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t/** Used to detect binary string values. */\n\tvar reIsBinary = /^0b[01]+$/i;\n\t\n\t/** Used to detect octal string values. */\n\tvar reIsOctal = /^0o[0-7]+$/i;\n\t\n\t/** Built-in method references without a dependency on `root`. */\n\tvar freeParseInt = parseInt;\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max,\n\t    nativeMin = Math.min;\n\t\n\t/**\n\t * Gets the timestamp of the number of milliseconds that have elapsed since\n\t * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @type {Function}\n\t * @category Date\n\t * @returns {number} Returns the timestamp.\n\t * @example\n\t *\n\t * _.defer(function(stamp) {\n\t *   console.log(_.now() - stamp);\n\t * }, _.now());\n\t * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n\t */\n\tvar now = Date.now;\n\t\n\t/**\n\t * Creates a debounced function that delays invoking `func` until after `wait`\n\t * milliseconds have elapsed since the last time the debounced function was\n\t * invoked. The debounced function comes with a `cancel` method to cancel\n\t * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t * Provide an options object to indicate whether `func` should be invoked on\n\t * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t * with the last arguments provided to the debounced function. Subsequent calls\n\t * to the debounced function return the result of the last `func` invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t * on the trailing edge of the timeout only if the debounced function is\n\t * invoked more than once during the `wait` timeout.\n\t *\n\t * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t * for details over the differences between `_.debounce` and `_.throttle`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to debounce.\n\t * @param {number} [wait=0] The number of milliseconds to delay.\n\t * @param {Object} [options={}] The options object.\n\t * @param {boolean} [options.leading=false]\n\t *  Specify invoking on the leading edge of the timeout.\n\t * @param {number} [options.maxWait]\n\t *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t * @param {boolean} [options.trailing=true]\n\t *  Specify invoking on the trailing edge of the timeout.\n\t * @returns {Function} Returns the new debounced function.\n\t * @example\n\t *\n\t * // Avoid costly calculations while the window size is in flux.\n\t * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t *\n\t * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t *   'leading': true,\n\t *   'trailing': false\n\t * }));\n\t *\n\t * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t * var source = new EventSource('/stream');\n\t * jQuery(source).on('message', debounced);\n\t *\n\t * // Cancel the trailing debounced invocation.\n\t * jQuery(window).on('popstate', debounced.cancel);\n\t */\n\tfunction debounce(func, wait, options) {\n\t  var lastArgs,\n\t      lastThis,\n\t      maxWait,\n\t      result,\n\t      timerId,\n\t      lastCallTime = 0,\n\t      lastInvokeTime = 0,\n\t      leading = false,\n\t      maxing = false,\n\t      trailing = true;\n\t\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  wait = toNumber(wait) || 0;\n\t  if (isObject(options)) {\n\t    leading = !!options.leading;\n\t    maxing = 'maxWait' in options;\n\t    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\t\n\t  function invokeFunc(time) {\n\t    var args = lastArgs,\n\t        thisArg = lastThis;\n\t\n\t    lastArgs = lastThis = undefined;\n\t    lastInvokeTime = time;\n\t    result = func.apply(thisArg, args);\n\t    return result;\n\t  }\n\t\n\t  function leadingEdge(time) {\n\t    // Reset any `maxWait` timer.\n\t    lastInvokeTime = time;\n\t    // Start the timer for the trailing edge.\n\t    timerId = setTimeout(timerExpired, wait);\n\t    // Invoke the leading edge.\n\t    return leading ? invokeFunc(time) : result;\n\t  }\n\t\n\t  function remainingWait(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime,\n\t        result = wait - timeSinceLastCall;\n\t\n\t    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t  }\n\t\n\t  function shouldInvoke(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t    // Either this is the first call, activity has stopped and we're at the\n\t    // trailing edge, the system time has gone backwards and we're treating\n\t    // it as the trailing edge, or we've hit the `maxWait` limit.\n\t    return (!lastCallTime || (timeSinceLastCall >= wait) ||\n\t      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t  }\n\t\n\t  function timerExpired() {\n\t    var time = now();\n\t    if (shouldInvoke(time)) {\n\t      return trailingEdge(time);\n\t    }\n\t    // Restart the timer.\n\t    timerId = setTimeout(timerExpired, remainingWait(time));\n\t  }\n\t\n\t  function trailingEdge(time) {\n\t    clearTimeout(timerId);\n\t    timerId = undefined;\n\t\n\t    // Only invoke if we have `lastArgs` which means `func` has been\n\t    // debounced at least once.\n\t    if (trailing && lastArgs) {\n\t      return invokeFunc(time);\n\t    }\n\t    lastArgs = lastThis = undefined;\n\t    return result;\n\t  }\n\t\n\t  function cancel() {\n\t    if (timerId !== undefined) {\n\t      clearTimeout(timerId);\n\t    }\n\t    lastCallTime = lastInvokeTime = 0;\n\t    lastArgs = lastThis = timerId = undefined;\n\t  }\n\t\n\t  function flush() {\n\t    return timerId === undefined ? result : trailingEdge(now());\n\t  }\n\t\n\t  function debounced() {\n\t    var time = now(),\n\t        isInvoking = shouldInvoke(time);\n\t\n\t    lastArgs = arguments;\n\t    lastThis = this;\n\t    lastCallTime = time;\n\t\n\t    if (isInvoking) {\n\t      if (timerId === undefined) {\n\t        return leadingEdge(lastCallTime);\n\t      }\n\t      if (maxing) {\n\t        // Handle invocations in a tight loop.\n\t        clearTimeout(timerId);\n\t        timerId = setTimeout(timerExpired, wait);\n\t        return invokeFunc(lastCallTime);\n\t      }\n\t    }\n\t    if (timerId === undefined) {\n\t      timerId = setTimeout(timerExpired, wait);\n\t    }\n\t    return result;\n\t  }\n\t  debounced.cancel = cancel;\n\t  debounced.flush = flush;\n\t  return debounced;\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t  var tag = isObject(value) ? objectToString.call(value) : '';\n\t  return tag == funcTag || tag == genTag;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Symbol` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isSymbol(Symbol.iterator);\n\t * // => true\n\t *\n\t * _.isSymbol('abc');\n\t * // => false\n\t */\n\tfunction isSymbol(value) {\n\t  return typeof value == 'symbol' ||\n\t    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t}\n\t\n\t/**\n\t * Converts `value` to a number.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to process.\n\t * @returns {number} Returns the number.\n\t * @example\n\t *\n\t * _.toNumber(3);\n\t * // => 3\n\t *\n\t * _.toNumber(Number.MIN_VALUE);\n\t * // => 5e-324\n\t *\n\t * _.toNumber(Infinity);\n\t * // => Infinity\n\t *\n\t * _.toNumber('3');\n\t * // => 3\n\t */\n\tfunction toNumber(value) {\n\t  if (typeof value == 'number') {\n\t    return value;\n\t  }\n\t  if (isSymbol(value)) {\n\t    return NAN;\n\t  }\n\t  if (isObject(value)) {\n\t    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t    value = isObject(other) ? (other + '') : other;\n\t  }\n\t  if (typeof value != 'string') {\n\t    return value === 0 ? value : +value;\n\t  }\n\t  value = value.replace(reTrim, '');\n\t  var isBinary = reIsBinary.test(value);\n\t  return (isBinary || reIsOctal.test(value))\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t    : (reIsBadHex.test(value) ? NAN : +value);\n\t}\n\t\n\tmodule.exports = debounce;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bluemix-components.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9502a81f9cbfd2d39551\n **/","// ====================//\n// Imports and Exports //\n// ====================//\n\n\n// Polyfills\n// -------------\nimport 'svgxuse';\n\n// Base Elements & Components\n// -------------\n// - JavaScript classes for use with components and base-elements.\n// - The following statements import classes from actual locations to\n//   be consumed from this file instead of their actual locations.\nimport FileUploader from './file-uploader';\nimport FabButton from './fab';\nimport ContentSwitcher from './content-switcher';\nimport Tab from './tabs';\nimport OverflowMenu from './overflow-menu';\nimport Modal from './modals';\nimport HeaderNav from './header';\nimport Toolbars from './toolbars';\nimport Loading from './loading';\nimport Dropdown from './dropdown';\nimport Card from './card';\nimport NumberInput from './number-input';\nimport Table from './table';\nimport DetailPageHeader from './detail-page-header';\n\nconst settings = {};\n\n/**\n * This module is used for the following purposes:\n * 1. Export ES2015 classes as modules (used with base-elements and components)\n * 2. Build an ES5-compatible files for prototyping.\n *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n * @exports BluemixComponents\n * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n */\nexport {\n  /**\n   * Settings.\n   * @type Object\n   * @property {boolean} [disableAutoInit]\n   *   Disables automatic instantiation of components.\n   *   By default (`BluemixComponents.disableAutoInit` is `false`),\n   *   bluemix-components attempts to instantiate components automatically\n   *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n   *   or upon DOM events (e.g. clicking) on such elements.\n   *   See each components' static `.init()` methods for details.\n   */\n  settings,\n\n  /**\n   * Floating action button.\n   * @type FabButton\n   */\n  FabButton,\n\n  /**\n   * File uploader.\n   * @type FileUploader\n   */\n  FileUploader,\n\n  /**\n   * Content switcher.\n   * @type ContentSwitcher\n   */\n  ContentSwitcher,\n\n  /**\n   * Container of tabs.\n   * @type Tab\n   */\n  Tab,\n\n  /**\n   * Overflow menu.\n   * @type OverflowMenu\n   */\n  OverflowMenu,\n\n  /**\n   * Modal dialog.\n   * @type Modal\n   */\n  Modal,\n\n  /**\n   * Header with taxonomy menu.\n   * @type HeaderNav\n   */\n  HeaderNav,\n\n  /**\n   * Search button in tool bar.\n   * @type Toolbars\n   */\n  Toolbars,\n\n  /**\n   * Spinner indicating loading state.\n   * @type Loading\n   */\n  Loading,\n\n  /**\n   * A selector with drop downs.\n   * @type Dropdown\n   */\n  Dropdown,\n\n  /**\n   * The container for cards.\n   * @type Card\n   */\n  Card,\n\n  /**\n   * Number input UI.\n   * @type NumberInput\n   */\n  NumberInput,\n\n  /**\n   * Data table.\n   * @type Table\n   */\n  Table,\n\n  /**\n   * Detail page header.\n   * @type DetailPageHeader\n   */\n  DetailPageHeader,\n};\n\n/**\n * Instantiates components automatically\n * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n * or upon DOM events (e.g. clicking) on such elements.\n * See each components' static `.init()` methods for details.\n *\n * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n *\n * @private\n */\n\nconst init = () => {\n  if (!settings.disableAutoInit) {\n    FabButton.init();\n    FileUploader.init();\n    ContentSwitcher.init();\n    Tab.init();\n    OverflowMenu.init();\n    Modal.init();\n    Toolbars.init();\n    Loading.init();\n    Dropdown.init();\n    Card.init();\n    NumberInput.init();\n    Table.init();\n    DetailPageHeader.init();\n  }\n};\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  // DOMContentLoaded has been fired already\n  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n  setTimeout(init, 0);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/index.js\n **/","/*!\n * @copyright Copyright (c) 2016 IcoMoon.io\n * @license   Licensed under MIT license\n *            See https://github.com/Keyamoon/svgxuse\n * @version   1.1.16\n */\n/*jslint browser: true */\n/*global XDomainRequest, MutationObserver, window */\n(function () {\n    'use strict';\n    if (window && window.addEventListener) {\n        var cache = Object.create(null); // holds xhr objects to prevent multiple requests\n        var checkUseElems,\n            tid; // timeout id\n        var debouncedCheck = function () {\n            clearTimeout(tid);\n            tid = setTimeout(checkUseElems, 100);\n        };\n        var unobserveChanges = function () {\n            return;\n        };\n        var observeChanges = function () {\n            var observer;\n            window.addEventListener('resize', debouncedCheck, false);\n            window.addEventListener('orientationchange', debouncedCheck, false);\n            if (window.MutationObserver) {\n                observer = new MutationObserver(debouncedCheck);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true\n                });\n                unobserveChanges = function () {\n                    try {\n                        observer.disconnect();\n                        window.removeEventListener('resize', debouncedCheck, false);\n                        window.removeEventListener('orientationchange', debouncedCheck, false);\n                    } catch (ignore) {}\n                };\n            } else {\n                document.documentElement.addEventListener('DOMSubtreeModified', debouncedCheck, false);\n                unobserveChanges = function () {\n                    document.documentElement.removeEventListener('DOMSubtreeModified', debouncedCheck, false);\n                    window.removeEventListener('resize', debouncedCheck, false);\n                    window.removeEventListener('orientationchange', debouncedCheck, false);\n                };\n            }\n        };\n        var xlinkNS = 'http://www.w3.org/1999/xlink';\n        checkUseElems = function () {\n            var base,\n                bcr,\n                fallback = '', // optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n                hash,\n                i,\n                Request,\n                inProgressCount = 0,\n                isHidden,\n                url,\n                uses,\n                xhr;\n            if (window.XMLHttpRequest) {\n                Request = new XMLHttpRequest();\n                if (Request.withCredentials !== undefined) {\n                    Request = XMLHttpRequest;\n                } else {\n                    Request = XDomainRequest || undefined;\n                }\n            }\n            if (Request === undefined) {\n                return;\n            }\n            function observeIfDone() {\n                // If done with making changes, start watching for chagnes in DOM again\n                inProgressCount -= 1;\n                if (inProgressCount === 0) { // if all xhrs were resolved\n                    observeChanges(); // watch for changes to DOM\n                }\n            }\n            function attrUpdateFunc(spec) {\n                return function () {\n                    if (cache[spec.base] !== true) {\n                        spec.useEl.setAttributeNS(xlinkNS, 'xlink:href', '#' + spec.hash);\n                    }\n                };\n            }\n            function onloadFunc(xhr) {\n                return function () {\n                    var body = document.body;\n                    var x = document.createElement('x');\n                    var svg;\n                    xhr.onload = null;\n                    x.innerHTML = xhr.responseText;\n                    svg = x.getElementsByTagName('svg')[0];\n                    if (svg) {\n                        svg.setAttribute('aria-hidden', 'true');\n                        svg.style.position = 'absolute';\n                        svg.style.width = 0;\n                        svg.style.height = 0;\n                        svg.style.overflow = 'hidden';\n                        body.insertBefore(svg, body.firstChild);\n                    }\n                    observeIfDone();\n                };\n            }\n            function onErrorTimeout(xhr) {\n                return function () {\n                    xhr.onerror = null;\n                    xhr.ontimeout = null;\n                    observeIfDone();\n                };\n            }\n            unobserveChanges(); // stop watching for changes to DOM\n            // find all use elements\n            uses = document.getElementsByTagName('use');\n            for (i = 0; i < uses.length; i += 1) {\n                try {\n                    bcr = uses[i].getBoundingClientRect();\n                } catch (ignore) {\n                    // failed to get bounding rectangle of the use element\n                    bcr = false;\n                }\n                url = uses[i].getAttributeNS(xlinkNS, 'href').split('#');\n                base = url[0];\n                hash = url[1];\n                isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n                if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n                    // the use element is empty\n                    // if there is a reference to an external SVG, try to fetch it\n                    // use the optional fallback URL if there is no reference to an external SVG\n                    if (fallback && !base.length && hash && !document.getElementById(hash)) {\n                        base = fallback;\n                    }\n                    if (base.length) {\n                        // schedule updating xlink:href\n                        xhr = cache[base];\n                        if (xhr !== true) {\n                            // true signifies that prepending the SVG was not required\n                            setTimeout(attrUpdateFunc({\n                                useEl: uses[i],\n                                base: base,\n                                hash: hash\n                            }), 0);\n                        }\n                        if (xhr === undefined) {\n                            xhr = new Request();\n                            cache[base] = xhr;\n                            xhr.onload = onloadFunc(xhr);\n                            xhr.onerror = onErrorTimeout(xhr);\n                            xhr.ontimeout = onErrorTimeout(xhr);\n                            xhr.open('GET', base);\n                            xhr.send();\n                            inProgressCount += 1;\n                        }\n                    }\n                } else {\n                    if (!isHidden) {\n                        if (cache[base] === undefined) {\n                            // remember this URL if the use element was not empty and no request was sent\n                            cache[base] = true;\n                        } else if (cache[base].onload) {\n                            // if it turns out that prepending the SVG is not necessary,\n                            // abort the in-progress xhr.\n                            cache[base].abort();\n                            cache[base].onload = undefined;\n                            cache[base] = true;\n                        }\n                    }\n                }\n            }\n            uses = '';\n            inProgressCount += 1;\n            observeIfDone();\n        };\n        // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n        window.addEventListener('load', function winLoad() {\n            window.removeEventListener('load', winLoad, false); // to prevent memory leaks\n            tid = setTimeout(checkUseElems, 0);\n        }, false);\n    }\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svgxuse/svgxuse.js\n ** module id = 1\n ** module chunks = 0\n **/","export default class FileUploader {\n  /**\n   * File uploader.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    const labelSelector = options.labelSelector || element.dataset.label;\n    this.labelNode = element.parentNode.querySelector(labelSelector) || element.nextElementSibling;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('change', (event) => this.updateLabel(event));\n  }\n\n  /**\n   * Instantiates file uploader of the given element.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates file uploader in the given node.\n   * If the given element indicates that it's an file uploader (having `data-file-uploader` attribute), instantiates it.\n   * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fileInput !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-file-uploader]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Updates the label for the file name upon file selection.\n   * @param {Event} event The event triggering this method.\n   */\n  updateLabel(event) {\n    let fileName = '';\n    const element = this.element;\n\n    if (element.files && element.files.length > 1) {\n      fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n    } else {\n      fileName = event.target.value.split('\\\\').pop();\n    }\n\n    if (fileName) {\n      this.labelNode.textContent = fileName;\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} FileUploader#options\n * @property {string} [labelSelector] The CSS selector to find the label for the file name.\n */\n\n/**\n * The map associating DOM element and file uploader instance.\n * @type {WeakMap}\n */\nFileUploader.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/file-uploader.js\n **/","import eventMatches from '../polyfills/event-matches';\n\nexport default class FabButton {\n  /**\n   * Floating action button.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a floting action button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('click', (event) => this.toggle(event));\n  }\n\n  /**\n   * Instantiates floating action buttons in the given element.\n   * If the given element indicates that it's an floating action button (having `data-fab` attribute), instantiates it.\n   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.fab !== undefined) {\n      this.create(target);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, '[data-fab]');\n        if (element && !this.components.has(element)) {\n          this.create(element).toggle(event);\n        }\n      };\n      target.addEventListener('click', handler);\n      return {\n        release: () => target.removeEventListener('click', handler),\n      };\n    }\n  }\n\n  /**\n   * Toggles this floating action button.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    if (this.element.dataset.state === 'closed') {\n      this.element.dataset.state = 'open';\n    } else {\n      this.element.dataset.state = 'closed';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Instantiates floating action button of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n}\n\n/**\n * The map associating DOM element and floating action button instance.\n * @type {WeakMap}\n */\nFabButton.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/fab.js\n **/","const matchesFuncName = [\n  'matches',\n  'webkitMatchesSelector',\n  'msMatchesSelector',\n].filter((name) => typeof document.documentElement[name] === 'function')[0];\n\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()`.\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  if (typeof event.target[matchesFuncName] === 'function') {\n    if (event.target[matchesFuncName](selector)) {\n      // If event target itself matches the given selector, return it\n      return event.target;\n    } else if (event.target[matchesFuncName](selector + ' *')) {\n      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n      for (let traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n        if (traverse[matchesFuncName](selector)) {\n          return traverse;\n        }\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/event-matches.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class ContentSwitcher {\n  /**\n   * Set of content switcher buttons.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorButton: 'input[type=\"radio\"], a.bx--content-switcher__btn',\n      selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n      classActive: 'bx--content-switcher--selected',\n      eventBeforeSelected: 'content-switcher-beingselected',\n      eventAfterSelected: 'content-switcher-selected',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n\n    [... element.querySelectorAll('input')].forEach((input) => {\n      if (input.checked) this._changeActive(input);\n    });\n  }\n\n  /**\n   * Instantiates a set of content switcher buttons of the given element.\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates content switcher button sets in the given node.\n   * If the given element indicates that it's an content switcher button set (having `data-content-switcher` attribute), instantiates it.\n   * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n   * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.contentSwitcher !== undefined) {\n      this.create(target, options);\n    } else {\n      [... document.querySelectorAll('[data-content-switcher]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Handles click on content switcher button set.\n   * If the click is on a content switcher button, activates it.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const button = eventMatches(event, this.options.selectorButton);\n\n    if (button) {\n      this.setActive(button);\n    }\n  }\n\n  /**\n   * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n   * @private\n   * @param {HTMLElement} item The button to be selected.\n   */\n  _changeActive(item) {\n    // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n    const itemLink = item.querySelector(this.options.selectorLink);\n    if (itemLink) {\n      [... this.element.querySelectorAll(this.options.selectorLink)].forEach((link) => {\n        if (link !== itemLink) {\n          link.setAttribute('aria-selected', 'false');\n        }\n      });\n      itemLink.setAttribute('aria-selected', 'true');\n    }\n\n    const selectorButtons = [... this.element.querySelectorAll(this.options.selectorButton)];\n\n    selectorButtons.forEach((button) => {\n      if (button !== item) {\n        toggleClass(button, this.options.classActive, false);\n        [... button.ownerDocument.querySelectorAll(button.dataset.target)].forEach(element => element.setAttribute('hidden', ''));\n      }\n    });\n\n    toggleClass(item, this.options.classActive, true);\n    [... item.ownerDocument.querySelectorAll(item.dataset.target)].forEach(element => element.removeAttribute('hidden'));\n  }\n\n  /**\n   * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @typedef {Object} ContentSwitcher~cancelError\n   * @property {boolean} canceled `true` always.\n   * @property {boolean} item The content switcher button that was about to be selected.\n   */\n\n  /**\n   * The callback called once switching is finished or is canceled.\n   * @callback ContentSwitcher~setActiveCallback\n   * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n   */\n\n  /**\n   * Selects a content switcher button.\n   * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n   * DOM elements associated with unselected buttons in the same way will be hidden.\n   * @param {HTMLElement} item The button to be selected.\n   * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n   */\n  setActive(item, callback) {\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: { item },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeActive(item);\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item },\n      }));\n      if (callback) {\n        callback(null, item);\n      }\n    } else {\n      const error = new Error('Switching active item has been canceled.');\n      error.canceled = true;\n      error.item = item;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} ContentSwitcher#options\n * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n * @property {string} [classActive] The CSS class for switcher button's selected state.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a switcher button is selected.\n *   Cancellation of this event stops selection of content switcher button.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n */\n\n/**\n * The map associating DOM element and content switcher set instance.\n * @type {WeakMap}\n */\nContentSwitcher.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/content-switcher.js\n **/","Array.from = Array.from || function fromArray(a) {\n  return Array.prototype.slice.call(a);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/array-from.js\n **/","Object.assign = Object.assign || function assignObject(inDst) {\n  if (inDst == null) { // eslint-disable-line eqeqeq\n    // Throw if the given destination is null or undefined\n    throw new TypeError('Can\\'t convert to object: ${dst}');\n  }\n\n  const dst = Object(inDst);\n\n  [... arguments].slice(1).forEach((src) => {\n    Object.keys(src).forEach((prop) => {\n      dst[prop] = src[prop];\n    });\n  });\n\n  return dst;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/object-assign.js\n **/","export default function toggleClass(element, name, add) {\n  if (element.classList.contains(name) === !add) {\n    element.classList[add ? 'add' : 'remove'](name);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/toggle-class.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/math-sign';\nimport '../polyfills/object-assign';\nimport ContentSwitcher from './content-switcher';\n\nexport default class Tab extends ContentSwitcher {\n  /**\n   * Container of tabs.\n   * @extends ContentSwitcher\n   * @param {HTMLElement} element The element working as a container of tabs.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  constructor(element, options = {}) {\n    super(element, Object.assign({\n      selectorMenu: '.bx--tabs__nav',\n      selectorTrigger: '.bx--tabs__trigger',\n      selectorTriggerText: '.bx--tabs__trigger-text',\n      selectorButton: '.bx--tabs__nav-item',\n      selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n      selectorLink: '.bx--tabs__nav-link',\n      classActive: 'bx--tabs--selected',\n      classHidden: 'bx--tabs--hidden',\n      eventBeforeSelected: 'tab-beingselected',\n      eventAfterSelected: 'tab-selected',\n    }, options));\n\n    this.element.addEventListener('keydown', (event) => this.handleKeyDown(event));\n\n    const selected = this.element.querySelector(this.options.selectorButtonSelected);\n    if (selected) {\n      this.updateTriggerText(selected);\n    }\n  }\n\n  /**\n   * Instantiates tab containers in the given node.\n   * If the given element indicates that it's an tab container (having `data-tabs` attribute), instantiates it.\n   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.tabs !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-tabs]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  _changeActive(item) {\n    super._changeActive(item);\n    this.updateTriggerText(item);\n  }\n\n  /**\n   * Handles click on tab container.\n   * * If the click is on a tab, activates it.\n   * * If the click is on the button to open the drop down menu, does so.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    super.handleClick(event);\n    const button = eventMatches(event, this.options.selectorButton);\n    const trigger = eventMatches(event, this.options.selectorTrigger);\n    if (button) {\n      super.handleClick(event);\n      this.updateMenuState();\n    }\n    if (trigger) {\n      this.updateMenuState();\n    }\n  }\n\n  /**\n   * Handles arrow keys on tab container.\n   * * Up/Left keys are used to go to previous tab.\n   * * Down/Right keys are used to go to next tab.\n   * @param {Event} event The event triggering this method.\n   */\n  handleKeyDown(event) {\n    const triggerNode = this.element.querySelector(this.options.selectorTrigger);\n    if (triggerNode && triggerNode.offsetParent) {\n      return;\n    }\n\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n\n    if (direction) {\n      const buttons = [... this.element.querySelectorAll(this.options.selectorButton)];\n      const button = this.element.querySelector(this.options.selectorButtonSelected);\n      const nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * buttons.length;\n      this.setActive(buttons[nextIndexLooped], (error, item) => {\n        if (item) {\n          const link = item.querySelector(this.options.selectorLink);\n          if (link) {\n            link.focus();\n          }\n        }\n      });\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Shows/hides the drop down menu used in narrow mode.\n   */\n  updateMenuState() {\n    this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n  }\n\n  /**\n   * Updates the text indicating the currently selected tab item.\n   * @param {HTMLElement} target The newly selected tab item.\n   */\n  updateTriggerText(target) {\n    this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Tab#options\n * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n * @property {string} [selectorButton] The CSS selector to find tab containers.\n * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n * @property {string} [classActive] The CSS class for tab's selected state.\n * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a tab is selected.\n *   Cancellation of this event stops selection of tab.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n */\n\n/**\n * The map associating DOM element and tab container instance.\n * @type {WeakMap}\n */\nTab.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/tabs.js\n **/","Math.sign = Math.sign || function sign(x) {\n  const n = +x;\n  return n === 0 ? n : n / Math.abs(n);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/math-sign.js\n **/","import '../polyfills/array-from';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class OverflowMenu {\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n    this.element.ownerDocument.addEventListener('click', (event) => this.handleDocumentClick(event));\n    this.element.ownerDocument.addEventListener('keypress', (event) => this.handleKeyPress(event));\n  }\n\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.overflowMenu !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-overflow-menu]')].forEach(element => this.create(element));\n    }\n  }\n\n  handleDocumentClick(event) {\n    const isOfSelf = this.element.contains(event.target);\n    const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n    if (isOfSelf && this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n  }\n\n  handleKeyPress(event) {\n    const key = event.key || event.which;\n    if (key === 'Enter' || key === 13) {\n      const isOfSelf = this.element.contains(event.target);\n      const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n      if (isOfSelf && this.element.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\nOverflowMenu.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/overflow-menu.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\nimport toggleClass from '../polyfills/toggle-class';\n\n/**\n * @param {Element} element The element to obtain transition duration from.\n * @returns {number} The transition duration of the given property set in the given element.\n */\nfunction getTransitionDuration(element) {\n  const computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n  const durations = computedStyle.transitionDuration.split(/,\\s*/)\n    .map((transitionDuration) => parseFloat(transitionDuration))\n    .filter((duration) => !isNaN(duration));\n  return durations.length > 0 ? Math.max(...durations) : 0;\n}\n\nexport default class Modal {\n  /**\n   * Modal dialog.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this modal is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this modal is hidden.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      classVisible: 'is-visible',\n      classNoScroll: 'bx--noscroll',\n      eventBeforeShown: 'modal-beingshown',\n      eventAfterShown: 'modal-shown',\n      eventBeforeHidden: 'modal-beinghidden',\n      eventAfterHidden: 'modal-hidden',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookCloseActions();\n  }\n\n  /**\n   * Instantiates modal dialog of the given element.\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this modal is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this modal is hidden.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates modal dialogs in the given element.\n   * If the given element indicates that it's an modal dialog (having `data-modal` attribute), instantiates it.\n   * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n   * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this modal is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this modal is hidden.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.modal !== undefined) {\n      this.create(target, options);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, '[data-modal-target]');\n\n        if (element) {\n          const modalElements = [... element.ownerDocument.querySelectorAll(element.dataset.modalTarget)];\n          if (modalElements.length > 1) {\n            throw new Error('Target modal must be unique.');\n          }\n\n          if (modalElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n\n            const modal = this.create(modalElements[0], options);\n            modal.show(element, (error, shownAlready) => {\n              if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n                modal.element.focus();\n              }\n            });\n          }\n        }\n      };\n      target.addEventListener('click', handler);\n      return {\n        release: () => target.removeEventListener('click', handler),\n      };\n    }\n  }\n\n  /**\n   * Adds event listeners for closing this dialog.\n   */\n  hookCloseActions() {\n    this.element.addEventListener('click', (event) => {\n      if (event.currentTarget === event.target) this.hide();\n    });\n\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n\n    this.keydownHandler = (event) => {\n      if (event.which === 27) {\n        this.hide();\n      }\n    };\n\n    this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\n    [... this.element.querySelectorAll('[data-modal-close]')].forEach((element) => {\n      element.addEventListener('click', () => {\n        this.hide();\n      });\n    });\n  }\n\n  /**\n   * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n   * @private\n   * @param {boolean} visible `true` to make this modal dialog visible.\n   * @param {Function} callback Callback called when change in state completes.\n   */\n  _changeState(visible, callback) {\n    let finished;\n    const finishedTransition = () => {\n      if (!finished) {\n        finished = true;\n        this.element.removeEventListener('transitionend', finishedTransition);\n        callback();\n      }\n    };\n\n    this.element.addEventListener('transitionend', finishedTransition);\n    const transitionDuration = getTransitionDuration(this.element);\n    toggleClass(this.element, this.options.classVisible, visible);\n    toggleClass(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n    if (transitionDuration === 0) {\n      finishedTransition();\n    }\n  }\n\n  /**\n   * The callback called once showing/hiding this dialog is finished or is canceled.\n   * @callback Modal~stateChangeCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Shows this modal dialog.\n   * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  show(launchingElement, callback) {\n    if (typeof launchingElement === 'function') {\n      callback = launchingElement; // eslint-disable-line no-param-reassign\n      launchingElement = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launchingElement.');\n    }\n\n    if (this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeShown, {\n      bubbles: true,\n      cancelable: true,\n      detail: { launchingElement: launchingElement },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(true, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterShown, {\n          bubbles: true,\n          cancelable: true,\n          detail: { launchingElement: launchingElement },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Showing dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  /**\n   * Hides this modal dialog.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  hide(callback) {\n    if (!this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n      bubbles: true,\n      cancelable: true,\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(false, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterHidden, {\n          bubbles: true,\n          cancelable: true,\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Hiding dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Modal#options\n * @property {string} [classVisible] The CSS class for the visible state.\n * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n * @property {string} [eventBeforeShown]\n *   The name of the custom event fired before this modal is shown.\n *   Cancellation of this event stops showing the modal.\n * @property {string} [eventAfterShown] The name of the custom event fired after this modal is shown.\n * @property {string} [eventBeforeHidden]\n *   The name of the custom event fired before this modal is hidden.\n *   Cancellation of this event stops hiding the modal.\n * @property {string} [eventAfterHidden] The name of the custom event fired after this modal is hidden.\n */\n\n/**\n * The map associating DOM element and modal instance.\n * @type {WeakMap}\n */\nModal.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/modals.js\n **/","const missingNativeCustomEvent = (() => {\n  try {\n    new CustomEvent('test-event'); // eslint-disable-line no-new\n  } catch (error) {\n    return true;\n  }\n})();\nif (missingNativeCustomEvent) {\n  window.CustomEvent = function CustomEvent(type, init = {}) {\n    const event = document.createEvent('HTMLEvents');\n    event.initEvent(type, init.bubbles, init.cancelable);\n    if (init.detail) {\n      event.detail = init.detail;\n    }\n    return event;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/custom-event.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class HeaderNav {\n  /**\n   * Header with taxonomy menu.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorTriggerLabel: '.current-taxonomy',\n      classActive: 'taxonomy-nav--active',\n      selectorMenu: '.taxonomy-menu',\n      selectorItem: '.taxonomy-item',\n      selectorItemLink: '.taxonomy-item--taxonomy-menu',\n      selectorLabel: '.taxonomy-item__label',\n      eventBeforeShown: 'header-beingshown',\n      eventAfterShown: 'header-shown',\n      eventBeforeHidden: 'header-beinghidden',\n      eventAfterHidden: 'header-hidden',\n      eventBeforeSelected: 'header-beingselected',\n      eventAfterSelected: 'header-selected',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\n    this.element.addEventListener('keydown', (event) => this.toggleNav(event));\n\n    [... this.element.querySelectorAll(this.options.selectorItemLink)].forEach((item) => {\n      item.addEventListener('click', (e) => this.select(e));\n    });\n  }\n\n  /**\n   * Instantiates taxonomy menus in the given element.\n   * If the given element indicates that it's an taxonomy menu (having `data-nav` attribute), instantiates it.\n   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.nav !== undefined) {\n      this.create(target, options);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, '[data-nav-target]');\n\n        if (element) {\n          const headerElements = [... element.ownerDocument.querySelectorAll(element.dataset.navTarget)];\n          if (headerElements.length > 1) {\n            throw new Error('Target header must be unique.');\n          }\n\n          if (headerElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n            this.create(headerElements[0], options).toggleNav(event);\n          }\n        }\n      };\n\n      target.addEventListener('click', handler);\n      target.addEventListener('keydown', handler);\n\n      return {\n        release: () => {\n          target.removeEventListener('keydown', handler);\n          target.removeEventListener('click', handler);\n        },\n      };\n    }\n  }\n\n  /**\n   * Instantiates taxonomy menu of the given element.\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Shows/hides this taxonomy menu.\n   * @param {Event} event The event triggering this function.\n   */\n  toggleNav(event) {\n    const isActive = this.element.classList.contains(this.options.classActive);\n    let add;\n    if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n      // Toggle button or ESC key on nav\n      add = !isActive;\n    } else if (event.type === 'keydown' && event.which === 27) {\n      // Down arrow on launch button\n      add = false;\n    } else {\n      return;\n    }\n\n    const launchingElement = eventMatches(event, '[data-nav-target]') || event.currentTarget;\n    if (launchingElement.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    const eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n      bubbles: true,\n      cancelable: true,\n      detail: { launchingElement: launchingElement },\n    });\n    const defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\n    if (add) {\n      this.triggerNode = launchingElement;\n      this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n    }\n\n    if (defaultNotPrevented) {\n      this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n      (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n      this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n        bubbles: true,\n        cancelable: true,\n        detail: { launchingElement: launchingElement },\n      }));\n    }\n  }\n\n  /**\n   * Selects a menu item.\n   * @param {Event} event The event triggering this function.\n   */\n  select(event) {\n    const activatedElement = event.currentTarget;\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        initiatingEvent: event,\n        itemElement: activatedElement,\n      },\n    });\n\n    if (this.element.dispatchEvent(eventStart)) {\n      [... this.element.querySelectorAll(this.options.selectorItem)].forEach((element) => {\n        if (element.contains(activatedElement)) {\n          element.classList.add('selected');\n        } else if (element.classList.contains('selected')) {\n          element.classList.remove('selected');\n        }\n      });\n      activatedElement.classList.add('selected');\n      if (this.triggerLabelNode) {\n        this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n      }\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { itemElement: activatedElement },\n      }));\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n  }\n}\n\n/**\n * The component options.\n * @member {Object} HeaderNav#options\n * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n * @property {string} [selectorItem] The CSS selector to find the menu items.\n * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n * @property {string} [classActive] The CSS class for the visible state.\n * @property {string} [eventBeforeShown]\n *   The name of the custom event fired before this taxonomy menu is shown.\n *   Cancellation of this event stops showing the taxonomy menu.\n * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n * @property {string} [eventBeforeHidden]\n *   The name of the custom event fired before this taxonomy menu is hidden.\n *   Cancellation of this event stops hiding the taxonomy menu.\n * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a menu item is selected.\n *   Cancellation of this event stops the selection.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n */\n\n/**\n * The map associating DOM element and taxonomy menu instance.\n * @type {WeakMap}\n */\nHeaderNav.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/header.js\n **/","export default class Toolbars {\n  /**\n   * Search button in tool bar.\n   * @implements Component\n   * @param {HTMLElement} element The element working as an search button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleActionClick(event));\n  }\n\n  /**\n   * Instantiates a search button of the given element.\n   * @param {HTMLElement} element The element working as a search button.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates search buttons in the given node.\n   * If the given element indicates that it's an search button (having `data-list-icons-search-action-target` attribute), instantiates it.\n   * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n   * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.listIconsSearchActionTarget !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-list-icons-search-action-target]')].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Show/hide search box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleActionClick(event) {\n    const searchActionNode = event.currentTarget;\n\n    if (searchActionNode.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    this.element.classList.toggle('show-search');\n    if (this.searchFieldNode) {\n      this.searchFieldNode.classList.toggle('show-search');\n      this.searchFieldNode.value = '';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and search button instance.\n * @type {WeakMap}\n */\nToolbars.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/toolbars.js\n **/","import toggleClass from '../polyfills/toggle-class';\n\nexport default class Loading {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} options The component options.\n   * @param {boolean} options.active `true` if this spinner should roll.\n   */\n  constructor(element, options = { active: true }) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.active = 'active' in options ? options.active : true;\n    this.ie = false;\n\n    // Check if browser is Internet Explorer\n    if (options.ie || window.ActiveXObject || 'ActiveXObject' in window) {\n      this.ie = true;\n      this.element.classList.add('bx--loading--ie');\n    }\n\n    this.constructor.components.set(this.element, this);\n\n    // Initialize spinner\n    this.set(this.active);\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-loading]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Sets active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  set(active) {\n    if (typeof active !== 'boolean') {\n      throw new TypeError('set expects a boolean.');\n    }\n\n    this.active = active;\n\n    if (this.ie) {\n      toggleClass(this.element, 'bx--loading--stop--ie', !this.active);\n    }\n    toggleClass(this.element, 'bx--loading--stop', !this.active);\n\n    return this;\n  }\n\n  /**\n   * Toggles active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  toggle() {\n    return this.set(!this.active);\n  }\n\n  /**\n   * @returns {boolean} `true` if this spinner is rolling roll.\n   */\n  isActive() {\n    return this.active;\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and spinner instance.\n * @type {WeakMap}\n */\nLoading.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/loading.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\n\nexport default class Dropdown {\n  /**\n   * A selector with drop downs.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorItem: '[data-option] > .bx--dropdown__link',\n      selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n      classSelected: 'bx--dropdown--selected',\n      eventBeforeSelected: 'dropdown-beingselected',\n      eventAfterSelected: 'dropdown-selected',\n    }, options);\n\n    this.element.dataset.dropdown = '';\n    this.constructor.components.set(this.element, this);\n\n    this.element.ownerDocument.addEventListener('click', (event) => this.toggle(event));\n    this.element.addEventListener('keypress', (event) => this.toggle(event));\n    this.element.addEventListener('click', (event) => this.selected(event));\n  }\n\n  /**\n   * Instantiates selector of the given element.\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates selectors in the given node.\n   * If the given element indicates that it's an selector (having `data-dropdown` attribute), instantiates it.\n   * Otherwise, instantiates selectors by searching for selectors in the given node.\n   * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.loading !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-dropdown]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Opens and closes the dropdown menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    const isOfSelf = this.element.contains(event.target);\n\n    if (isOfSelf) {\n      this.element.classList.toggle('bx--dropdown--open');\n    } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n      this.element.classList.remove('bx--dropdown--open');\n    }\n  }\n\n  /**\n   * Handles clicking on the dropdown options, doing the following:\n   * * Change Dropdown text to selected option.\n   * * Remove selected option from options when selected.\n   * * Emit custom events.\n   * @param {Event} event The event triggering this method.\n   */\n  selected(event) {\n    const activatedElement = event.target;\n    if (activatedElement.parentElement.dataset.option !== undefined) {\n      const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item: activatedElement },\n      });\n\n      if (this.element.dispatchEvent(eventStart)) {\n        this.element.firstElementChild.textContent = activatedElement.textContent;\n        this.element.dataset.value = activatedElement.parentElement.dataset.value;\n\n        [... this.element.querySelectorAll(this.options.selectorItemSelected)].forEach((item) => {\n          if (activatedElement !== item) {\n            item.classList.remove(this.options.classSelected);\n          }\n        });\n\n        activatedElement.classList.add(this.options.classSelected);\n\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n          bubbles: true,\n          cancelable: true,\n          detail: { item: activatedElement },\n        }));\n      }\n    }\n  }\n}\n\n\n/**\n * The component options.\n * @member {Object} Dropdown#options\n * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n * @property {string} [classSelected] The CSS class for the selected dropdown item.\n * @property {string} [eventBeforeSelected]\n *   The name of the custom event fired before a drop down item is selected.\n *   Cancellation of this event stops selection of drop down item.\n * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n */\n\n/**\n * The map associating DOM element and selector instance.\n * @type {WeakMap}\n */\nDropdown.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/dropdown.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/object-assign';\nimport '../polyfills/math-sign';\n\nexport default class Card {\n  /**\n   * The container for cards.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n    this.options = Object.assign({\n      selectorCard: '.bx--card',\n    }, options);\n    this.constructor.components.set(this.element, this);\n    this.element.addEventListener('keydown', (event) => this.cardKeyPress(event));\n  }\n\n  /**\n   * Instantiates card container of the given element.\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates card container in the given node.\n   * If the given element indicates that it's an card container (having `data-card-list` attribute), instantiates it.\n   * Otherwise, instantiates card containers by searching for card containers in the given node.\n   * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.cardList !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-card-list]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Goes back/forward among cards,\n   * right arrow key for going forward, left arrow key for going backward.\n   * @param {Event} event The event triggering this method.\n   */\n  cardKeyPress(event) {\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n    const card = eventMatches(event, this.options.selectorCard);\n\n    if (direction && card && card === document.activeElement) {\n      const cards = [... this.element.querySelectorAll(this.options.selectorCard)];\n      const nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * cards.length;\n      cards[nextIndexLooped].focus();\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Card#options\n * @property {string} [selectorCard] The CSS selector to find cards.\n */\n\n/**\n * The map associating DOM element and card list instance.\n * @type {WeakMap}\n */\nCard.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/card.js\n **/","import '../polyfills/array-from';\n\nexport default class NumberInput {\n  /**\n   * Number input UI.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a number input UI.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = options;\n    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n    // Also <svg> does not seems to have `Element.classList`.\n    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', (event) => this.handleClick(event));\n    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates number input UI of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates number input UI in the given node.\n   * If the given element indicates that it's an number input UI (having `data-numberinput` attribute), instantiates it.\n   * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n   * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n   */\n  static init(target = document) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.numberinput !== undefined) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll('[data-numberinput]')].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const state = event.currentTarget.classList;\n    const numberInput = this.element.querySelector('.bx--number__input');\n\n    if (state.contains('bx--number__arrow--icon-up')) {\n      if (this.options.ie) {\n        ++numberInput.value;\n      } else {\n        numberInput.stepUp();\n      }\n    } else if (state.contains('bx--number__arrow--icon-down')) {\n      if (this.options.ie) {\n        if (numberInput.value > 0) {\n          --numberInput.value;\n        }\n      } else {\n        numberInput.stepDown();\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and number input UI instance.\n * @type {WeakMap}\n */\nNumberInput.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/number-input.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class Table {\n  /**\n   * Data table.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.options = Object.assign({\n      selectorTitle: '.bx--table__column-title',\n      selectorRow: '.bx--table__row',\n      selectorCheckbox: '.bx--checkbox',\n      classSortState: 'bx--table__column-title--rotated',\n      classCheckState: 'bx--table__row--checked',\n      eventBeforeSortToggled: 'table-sort-beingtoggled',\n      eventAfterSortToggled: 'table-sort-toggled',\n      eventBeforeCheckToggled: 'table-check-beingtoggled',\n      eventAfterCheckToggled: 'table-check-toggled',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates a data table of the given element.\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Sets up the given node to instantiate data tables in.\n   * If the given element indicates that it's an data table (having `data-table` attribute), instantiates it.\n   * Otherwise, lazily instantiates data table when it's clicked on.\n   * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.table !== undefined) {\n      this.create(target, options);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, '[data-table]');\n        if (element && !this.components.has(element)) {\n          this.create(element, options).handleClick(event);\n        }\n      };\n      target.addEventListener('click', handler);\n      return {\n        release: () => target.removeEventListener('click', handler),\n      };\n    }\n  }\n\n  /**\n   * Handles click on data table.\n   * * If the click is on a column title, toggles its sorting state.\n   * * If the click is on a check box, toggles the check box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const title = eventMatches(event, this.options.selectorTitle);\n    const row = eventMatches(event, this.options.selectorRow);\n    const checkbox = eventMatches(event, this.options.selectorCheckbox);\n    if (title) {\n      this.toggleState('Sort', title);\n    }\n    if (row && checkbox) {\n      this.toggleState('Check', row);\n    }\n  }\n\n  /**\n   * The callback called once toggling is finished or is canceled.\n   * @callback Table~toggleStateCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the toggling is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {HTMLElement} element The toggled element.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Toggles a sorting state or a check box's state.\n   * @param {string} type\n   *   Specifies what state to toggle:\n   *   * `\"Sort\"` for toggling a sorting state.\n   *   * `\"Check\"` for toggling a check box's state.\n   * @param {HTMLElement} element The DOM element to toggle its state.\n   * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n   */\n  toggleState(type, element, callback) {\n    const newState = !element.classList.contains(this.options[`class${type}State`]);\n    const eventStart = new CustomEvent(this.options[`eventBefore${type}Toggled`], {\n      bubbles: true,\n      cancelable: true,\n      detail: { newState },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (element.dispatchEvent(eventStart)) {\n      toggleClass(element, this.options[`class${type}State`], newState);\n      // this._changeActive(item);\n      element.dispatchEvent(new CustomEvent(this.options[`eventAfter${type}Toggled`], {\n        bubbles: true,\n        cancelable: true,\n        detail: { newState },\n      }));\n      if (callback) {\n        callback(null, element, newState);\n      }\n    } else {\n      const error = new Error('Toggling on table has been canceled.');\n      error.canceled = true;\n      error.element = element;\n      error.newState = newState;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The component options.\n * @member {Object} Table#options\n * @property {string} [selectorTitle] The CSS selector to find column titles.\n * @property {string} [selectorRow] The CSS selector to find rows.\n * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n * @property {string} [classSortState] The CSS class for the sorting state.\n * @property {string} [classCheckState] The CSS class for the checked state.\n * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n */\n\n/**\n * The map associating DOM element and data table instance.\n * @type {WeakMap}\n */\nTable.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/table.js\n **/","import debounce from 'lodash.debounce';\n\nexport default class DetailPageHeader {\n\n  /**\n   * The Detail Page Header.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a page header.\n   * @param {Object} [options] The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign({\n      slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up',\n    }, options);\n\n    this.constructor.components.set(this.element, this);\n\n    // Debounce scroll event calls to handleScroll\n    const debouncedScroll = debounce(this.handleScroll.bind(this), 50);\n\n    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n  }\n\n  /**\n   * Instantiates detail page header of the given element.\n   * @param {HTMLElement} element The element.\n   * @param {Object} [options] The component options.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates the detail page header in the given element.\n   * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n   * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n   * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   */\n  static init(target = document, options) {\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.dataset.detailPageHeader !== undefined) {\n      this.create(target, options);\n    } else {\n      [... target.querySelectorAll('[data-detail-page-header]')].forEach(element => this.create(element, options));\n    }\n  }\n\n  /**\n   * Adds class to header based on users position on the page\n   */\n  handleScroll() {\n    if (this.element.ownerDocument.defaultView.scrollY > 101) {\n      this.element.classList.add(this.options.slideUp);\n    } else {\n      this.element.classList.remove(this.options.slideUp);\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and detail page header instance.\n * @type {WeakMap}\n */\nDetailPageHeader.components = new WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/detail-page-header.js\n **/","/**\n * lodash 4.0.6 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @type {Function}\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n */\nvar now = Date.now;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide an options object to indicate whether `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent calls\n * to the debounced function return the result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime = 0,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (!lastCallTime || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    clearTimeout(timerId);\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastCallTime = lastInvokeTime = 0;\n    lastArgs = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3);\n * // => 3\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3');\n * // => 3\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.debounce/index.js\n ** module id = 22\n ** module chunks = 0\n **/"],"sourceRoot":""}