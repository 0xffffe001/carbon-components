{"version":3,"sources":["webpack:///bluemix-components-without-polyfills.min.js","webpack:///webpack/bootstrap 1ba07f52b5ce5ddad16d","webpack:///./consumables/js/es2015/index.js","webpack:///./consumables/js/es2015/checkbox.js","webpack:///./consumables/js/es2015/file-uploader.js","webpack:///external \"Element.matches\"","webpack:///external \"Object.assign\"","webpack:///external \"Array.from\"","webpack:///./consumables/js/es2015/fab.js","webpack:///./consumables/js/polyfills/event-matches.js","webpack:///./consumables/js/misc/on.js","webpack:///./consumables/js/es2015/content-switcher.js","webpack:///external \"CustomEvent\"","webpack:///./consumables/js/polyfills/toggle-class.js","webpack:///./consumables/js/es2015/tabs.js","webpack:///external \"Math.sign\"","webpack:///./consumables/js/es2015/overflow-menu.js","webpack:///./consumables/js/es2015/modals.js","webpack:///./consumables/js/es2015/header.js","webpack:///./consumables/js/es2015/toolbars.js","webpack:///./consumables/js/es2015/loading.js","webpack:///./consumables/js/es2015/dropdown.js","webpack:///./consumables/js/es2015/card.js","webpack:///./consumables/js/es2015/number-input.js","webpack:///./consumables/js/es2015/responsive-table.js","webpack:///./consumables/js/misc/resize.js","webpack:///./consumables/js/es2015/table.js","webpack:///./consumables/js/es2015/detail-page-header.js","webpack:///./~/lodash.debounce/index.js","webpack:///./consumables/js/es2015/left-nav.js","webpack:///./consumables/js/es2015/unified-header.js","webpack:///./consumables/js/es2015/inline-left-nav.js","webpack:///./consumables/js/es2015/profile-switcher.js","webpack:///./consumables/js/es2015/pagination.js","webpack:///./consumables/js/es2015/search-with-options.js","webpack:///./consumables/js/es2015/accordion.js","webpack:///./consumables/js/es2015/copy-btn.js"],"names":["BluemixComponents","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","Accordion","Pagination","ProfileSwitcher","DetailPageHeader","Table","ResponsiveTable","NumberInput","Card","Dropdown","Loading","Toolbars","LeftNav","HeaderNav","Modal","OverflowMenu","Tab","ContentSwitcher","FileUploader","FabButton","initCheckbox","settings","undefined","_checkbox","_checkbox2","_fileUploader","_fileUploader2","_fab","_fab2","_contentSwitcher","_contentSwitcher2","_tabs","_tabs2","_overflowMenu","_overflowMenu2","_modals","_modals2","_header","_header2","_toolbars","_toolbars2","_loading","_loading2","_dropdown","_dropdown2","_card","_card2","_numberInput","_numberInput2","_responsiveTable","_responsiveTable2","_table","_table2","_detailPageHeader","_detailPageHeader2","_leftNav","_leftNav2","_unifiedHeader","_unifiedHeader2","_inlineLeftNav","_inlineLeftNav2","_profileSwitcher","_profileSwitcher2","_pagination","_pagination2","_searchWithOptions","_searchWithOptions2","_accordion","_accordion2","_copyBtn","_copyBtn2","init","disableAutoInit","document","readyState","addEventListener","setTimeout","listener","event","element","target","tagName","type","hasAttribute","checked","setAttribute","removeAttribute","doc","arguments","length","removeEventListener","release","_toConsumableArray","arr","Array","isArray","i","arr2","from","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_this","this","options","nodeType","Node","ELEMENT_NODE","assign","create","constructor","labelNode","nextElementSibling","ownerDocument","querySelector","selectorLabel","components","set","updateLabel","fileName","files","dataset","multipleCaption","replace","split","pop","textContent","get","_this2","effectiveOptions","DOCUMENT_NODE","Error","matches","selectorInit","concat","querySelectorAll","forEach","WeakMap","Element","_eventMatches","_eventMatches2","_on","_on2","toggle","preventDefault","state","has","eventMatches","selector","traverse","currentTarget","parentNode","on","_len","args","_key","apply","_toggleClass","_toggleClass2","handleClick","input","_changeActive","button","selectorButton","setActive","item","itemLink","selectorLink","link","selectorButtons","classActive","callback","eventStart","CustomEvent","eventBeforeSelected","bubbles","cancelable","detail","dispatchEvent","eventAfterSelected","error","canceled","_this3","selectorButtonSelected","toggleClass","name","add","classList","contains","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_ContentSwitcher","handleKeyDown","selected","updateTriggerText","trigger","selectorTrigger","updateMenuState","triggerNode","offsetParent","direction","Left","Right","ArrowLeft","ArrowRight","keyIdentifier","buttons","nextIndex","Math","max","indexOf","nextIndexLooped","sign","focus","selectorMenu","classHidden","selectorTriggerText","_initialiseProps","optionMenu","selectorOptionMenu","hDocumentClick","handleDocumentClick","hDocumentKeyPress","handleKeyPress","isOfSelf","shouldBeOpen","emitEvent","which","evt","eventAfter","getTransitionDuration","computedStyle","defaultView","getComputedStyle","durations","transitionDuration","map","parseFloat","filter","duration","isNaN","hookCloseActions","hide","keydownHandler","body","visible","finished","finishedTransition","classVisible","classNoScroll","launchingElementOrEvent","launchingElementOrEventOmitted","launchingElement","delegateTarget","launchingEvent","eventBeforeShown","_changeState","eventAfterShown","_this4","eventBeforeHidden","eventAfterHidden","_this5","attribInitTarget","modalElements","getAttribute","modal","show","shownAlready","offsetWidth","offsetHeight","console","warn","_typeof","Symbol","iterator","menuNode","toggleNav","selectorItemLink","e","select","isActive","defaultNotPrevented","triggerLabelNode","selectorTriggerLabel","activatedElement","initiatingEvent","itemElement","selectorItem","remove","_ret","handler","headerElements","v","searchFieldNode","listIconsSearchActionTarget","handleActionClick","searchActionNode","active","ie","window","ActiveXObject","dropdown","setCloseOnBlur","hFocusIn","itemToSelect","dropdownType","firstElementChild","innerHTML","classSelected","parentElement","selectorItemSelected","hasFocusin","focusinEventName","cardKeyPress","card","selectorCard","activeElement","cards","numberInput","stepUp","stepDown","_resize","_resize2","container","expandCells","selectorExpandCells","expandableRows","selectorExpandableRows","parentRows","selectorParentRows","tableBody","selectorTableBody","zebraStripe","initExpandableRows","initOverflowMenus","eventHandlers","expand","toggleRowExpand","sort","toggleSort","select-all","toggleSelectAll","eventElement","eventTrigger","selectorOverflowMenu","selectorCheckbox","selectorOverflowMenuIcon","selectorOverflowMenuOptions","classParentRowEven","classExpandableRow","classExpandableRowEven","classExpandableRowHidden","classTableSortAscending","eventParentContainer","getEventDetails","data","label","previousValue","initialEvt","eventBefore","index","removeChild","menuMap","menu","placeOverflow","appendChild","_evt$detail","icon","position","getBoundingClientRect","style","top","left","right","insertBefore","inputs","optimizedResize","runCallbacks","callbacks","running","resize","requestAnimationFrame","addCallback","push","title","selectorTitle","row","selectorRow","checkbox","toggleState","newState","classSortState","classCheckState","eventBeforeSortToggled","eventAfterSortToggled","eventBeforeCheckToggled","eventAfterCheckToggled","_lodash","_lodash2","debouncedScroll","handleScroll","bind","scrollY","slideUp","global","debounce","func","wait","invokeFunc","time","lastArgs","thisArg","lastThis","lastInvokeTime","result","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","clearTimeout","flush","debounced","isInvoking","FUNC_ERROR_TEXT","toNumber","isObject","nativeMax","isObjectLike","isSymbol","objectToString","symbolTag","NAN","other","valueOf","reTrim","isBinary","reIsBinary","test","reIsOctal","freeParseInt","slice","reIsBadHex","parseInt","freeGlobal","freeSelf","root","objectProto","toString","min","Date","leftNavSectionActive","hookOpenActions","hookListSectionEvents","hookListItemsEvents","classActiveLeftNav","selectorLeftNavToggleOpen","classActiveTrigger","selectorLeftNav","leftNavContainer","selectedNav","selectedNavValue","leftNavSection","selectedNavLink","selectorLeftNavSectionLink","leftNav","leftNavSections","selectorLeftNavSections","classNavSection","classNavSectionTransition","children","classNavSectionLink","classNavHeaderTitle","selectedNavTitle","currentLeftNavList","selectorLeftNavList","newLeftNavList","currentLeftNavItems","selectorLeftNavListItem","reverse","newLeftNavItems","fadeOutTime","counter","counterIteration","classItemFade","classListHidden","classListTop","openBtn","closeBtn","selectorLeftNavToggleClose","tabIndex","toggleMenu","closeMenu","handleSectionItemClick","selectorLeftNavCurrentSectionTitle","_this6","leftNavList","list","leftNavItem","childItem","selectorLeftNavNestedListItem","hasChildren","selectorLeftNavListItemHasChildren","flyoutItem","selectorLeftNavFlyoutItem","addActiveListItem","selectorLeftNavFlyoutMenu","flyoutMenu","classFlyoutDisplayed","handleNestedListClick","offsetTop","scrollTop","offsetLeft","round","flyouts","selectorLeftNavListItemHasFlyout","flyout","_this7","flyoutMenus","_this8","selectorLeftNavAllListItems","currentItem","classActiveLeftNavListItem","hideAllFlyoutMenus","clickTarget","isToggleBtn","isOpen","isUnifiedHeader","shouldClose","flyoutOpen","listItem","_this9","classExpandedLeftNavListItem","listItems","selectorLeftNavNestedList","selectorLeftNavListItemLink","_this10","leftNavSectionItem","selectorLeftNavSection","selectedLeftNavSectionItem","selectorLeftNavCurrentSection","selectedLeftNavSectionItemTitle","selectedLeftNavSectionItemIcon","selectorLeftNavCurrentSectionIcon","selectedLeftNavSectionItemUse","selectedLeftNavSectionValue","leftNavCurrentSection","leftNavSectionItemLink","leftNavSectionItemIcon","selectorLeftNavSectionIcon","leftNavSectionItemIconUse","leftNavSectionValue","newLeftNavSectionItem","createElement","newLeftNavSectionItemAnchor","classNavSectionAnchor","newLeftNavSectionItemIcon","cloneNode","newLeftNavSectionItemLink","animateNavSection","animateNavList","firstChild","_this11","selectorLeftNavArrowIcon","classItemHasChildren","classItemHidden","UnifiedHeader","InlineLeftNav","leftNavItemWithChildren","selectorAccountDropdown","classLinkedIcon","linkedAccount","selectorAccountSlLinked","isLinked","linkedIcon","selectorToggle","getLinkedData","determineSwitcherValues","handleBlur","classSwitcherOpen","selectorLinkedAccount","isToggle","isHovered","linkedElement","nameElement","selectorAccount","regionElement","selectorRegion","orgElement","selectorOrg","spaceElement","selectorSpace","menuElement","nameDropdownValue","selectorAccountLinked","regionDropdownValue","selectorRegionDropdown","orgDropdownValue","selectorOrgDropdown","spaceDropdownValue","selectorSpaceDropdown","nameShort","orgShort","spaceShort","width","substr","selectorProfileSwitcher","selectorDropdown","selectorAccountSlDropdown","evtName","selectorPageBackward","eventPageChange","selectorPageForward","selectorItemsPerPageInput","eventItemsPerPage","selectorPageNumberInput","eventPageNumber","SearchWithOptions","selectorToggleLayoutBtn","toggleLayout","btn","iconContainers","selectorIconContainer","isHidden","classHiddenContainer","accordionItem","CopyBtn","feedback","feedbackTooltip","classShowFeedback","timeoutValue"],"mappings":"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","file":"bluemix-components-without-polyfills.min.js","sourcesContent":["var BluemixComponents =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Accordion = exports.Pagination = exports.ProfileSwitcher = exports.DetailPageHeader = exports.Table = exports.ResponsiveTable = exports.NumberInput = exports.Card = exports.Dropdown = exports.Loading = exports.Toolbars = exports.LeftNav = exports.HeaderNav = exports.Modal = exports.OverflowMenu = exports.Tab = exports.ContentSwitcher = exports.FileUploader = exports.FabButton = exports.initCheckbox = exports.settings = undefined;\n\t\n\tvar _checkbox = __webpack_require__(1);\n\t\n\tvar _checkbox2 = _interopRequireDefault(_checkbox);\n\t\n\tvar _fileUploader = __webpack_require__(2);\n\t\n\tvar _fileUploader2 = _interopRequireDefault(_fileUploader);\n\t\n\tvar _fab = __webpack_require__(6);\n\t\n\tvar _fab2 = _interopRequireDefault(_fab);\n\t\n\tvar _contentSwitcher = __webpack_require__(9);\n\t\n\tvar _contentSwitcher2 = _interopRequireDefault(_contentSwitcher);\n\t\n\tvar _tabs = __webpack_require__(12);\n\t\n\tvar _tabs2 = _interopRequireDefault(_tabs);\n\t\n\tvar _overflowMenu = __webpack_require__(14);\n\t\n\tvar _overflowMenu2 = _interopRequireDefault(_overflowMenu);\n\t\n\tvar _modals = __webpack_require__(15);\n\t\n\tvar _modals2 = _interopRequireDefault(_modals);\n\t\n\tvar _header = __webpack_require__(16);\n\t\n\tvar _header2 = _interopRequireDefault(_header);\n\t\n\tvar _toolbars = __webpack_require__(17);\n\t\n\tvar _toolbars2 = _interopRequireDefault(_toolbars);\n\t\n\tvar _loading = __webpack_require__(18);\n\t\n\tvar _loading2 = _interopRequireDefault(_loading);\n\t\n\tvar _dropdown = __webpack_require__(19);\n\t\n\tvar _dropdown2 = _interopRequireDefault(_dropdown);\n\t\n\tvar _card = __webpack_require__(20);\n\t\n\tvar _card2 = _interopRequireDefault(_card);\n\t\n\tvar _numberInput = __webpack_require__(21);\n\t\n\tvar _numberInput2 = _interopRequireDefault(_numberInput);\n\t\n\tvar _responsiveTable = __webpack_require__(22);\n\t\n\tvar _responsiveTable2 = _interopRequireDefault(_responsiveTable);\n\t\n\tvar _table = __webpack_require__(24);\n\t\n\tvar _table2 = _interopRequireDefault(_table);\n\t\n\tvar _detailPageHeader = __webpack_require__(25);\n\t\n\tvar _detailPageHeader2 = _interopRequireDefault(_detailPageHeader);\n\t\n\tvar _leftNav = __webpack_require__(27);\n\t\n\tvar _leftNav2 = _interopRequireDefault(_leftNav);\n\t\n\tvar _unifiedHeader = __webpack_require__(28);\n\t\n\tvar _unifiedHeader2 = _interopRequireDefault(_unifiedHeader);\n\t\n\tvar _inlineLeftNav = __webpack_require__(29);\n\t\n\tvar _inlineLeftNav2 = _interopRequireDefault(_inlineLeftNav);\n\t\n\tvar _profileSwitcher = __webpack_require__(30);\n\t\n\tvar _profileSwitcher2 = _interopRequireDefault(_profileSwitcher);\n\t\n\tvar _pagination = __webpack_require__(31);\n\t\n\tvar _pagination2 = _interopRequireDefault(_pagination);\n\t\n\tvar _searchWithOptions = __webpack_require__(32);\n\t\n\tvar _searchWithOptions2 = _interopRequireDefault(_searchWithOptions);\n\t\n\tvar _accordion = __webpack_require__(33);\n\t\n\tvar _accordion2 = _interopRequireDefault(_accordion);\n\t\n\tvar _copyBtn = __webpack_require__(34);\n\t\n\tvar _copyBtn2 = _interopRequireDefault(_copyBtn);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// ====================//\n\t// Imports and Exports //\n\t// ====================//\n\t\n\t// Base Elements & Components\n\t// -------------\n\t// - JavaScript classes for use with components and base-elements.\n\t// - The following statements import classes from actual locations to\n\t//   be consumed from this file instead of their actual locations.\n\tvar settings = {};\n\t\n\t/**\n\t * This module is used for the following purposes:\n\t * 1. Export ES2015 classes as modules (used with base-elements and components)\n\t * 2. Build an ES5-compatible files for prototyping.\n\t *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n\t * @exports BluemixComponents\n\t * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n\t * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n\t */\n\texports.settings = settings;\n\texports.initCheckbox = _checkbox2.default;\n\texports.FabButton = _fab2.default;\n\texports.FileUploader = _fileUploader2.default;\n\texports.ContentSwitcher = _contentSwitcher2.default;\n\texports.Tab = _tabs2.default;\n\texports.OverflowMenu = _overflowMenu2.default;\n\texports.Modal = _modals2.default;\n\texports.HeaderNav = _header2.default;\n\texports.LeftNav = _leftNav2.default;\n\texports.Toolbars = _toolbars2.default;\n\texports.Loading = _loading2.default;\n\texports.Dropdown = _dropdown2.default;\n\texports.Card = _card2.default;\n\texports.NumberInput = _numberInput2.default;\n\texports.ResponsiveTable = _responsiveTable2.default;\n\texports.Table = _table2.default;\n\texports.DetailPageHeader = _detailPageHeader2.default;\n\texports.ProfileSwitcher = _profileSwitcher2.default;\n\texports.Pagination = _pagination2.default;\n\texports.Accordion = _accordion2.default;\n\t\n\t/**\n\t * Instantiates components automatically\n\t * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n\t * or upon DOM events (e.g. clicking) on such elements.\n\t * See each components' static `.init()` methods for details.\n\t *\n\t * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n\t *\n\t * @private\n\t */\n\t\n\tvar init = function init() {\n\t  if (!settings.disableAutoInit) {\n\t    (0, _checkbox2.default)();\n\t    _fab2.default.init();\n\t    _fileUploader2.default.init();\n\t    _contentSwitcher2.default.init();\n\t    _tabs2.default.init();\n\t    _overflowMenu2.default.init();\n\t    _modals2.default.init();\n\t    _toolbars2.default.init();\n\t    _loading2.default.init();\n\t    _dropdown2.default.init();\n\t    _card2.default.init();\n\t    _numberInput2.default.init();\n\t    _responsiveTable2.default.init();\n\t    _table2.default.init();\n\t    _detailPageHeader2.default.init();\n\t    _leftNav2.default.init();\n\t    _unifiedHeader2.default.init();\n\t    _inlineLeftNav2.default.init();\n\t    _profileSwitcher2.default.init();\n\t    _pagination2.default.init();\n\t    _searchWithOptions2.default.init();\n\t    _accordion2.default.init();\n\t    _copyBtn2.default.init();\n\t  }\n\t};\n\t\n\tif (document.readyState === 'loading') {\n\t  document.addEventListener('DOMContentLoaded', init);\n\t} else {\n\t  // DOMContentLoaded has been fired already\n\t  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n\t  setTimeout(init, 0);\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction listener(event) {\n\t  var element = event.target;\n\t  if (element.tagName === 'INPUT' && element.type === 'checkbox' && element.hasAttribute('checked') !== element.checked) {\n\t    if (element.checked) {\n\t      element.setAttribute('checked', '');\n\t    } else {\n\t      element.removeAttribute('checked');\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Watches for change in checkbox in the given document and force changing `checked` attribute\n\t * so that DOM mutation observer in {@link https://www.npmjs.com/package/svgxuse svgxuse} is triggered.\n\t * @param {Document} [doc=document] The document object to watch for.\n\t * @returns {Handle} The handle to release the event listener.\n\t */\n\tfunction initCheckbox() {\n\t  var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t\n\t  doc.removeEventListener('change', listener); // In case this function has been called earlier\n\t  doc.addEventListener('change', listener);\n\t  return {\n\t    release: function release() {\n\t      doc.removeEventListener('change', listener);\n\t      return null;\n\t    }\n\t  };\n\t}\n\t\n\texports.default = initCheckbox;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(5);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FileUploader = function () {\n\t  /**\n\t   * File uploader.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a file uploader.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n\t   */\n\t  function FileUploader(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, FileUploader);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t\n\t    this.labelNode = this.element.nextElementSibling || this.element.ownerDocument.querySelector('.bx--file__label' + this.options.selectorLabel);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    element.addEventListener('change', function (event) {\n\t      return _this.updateLabel(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates file uploader of the given element.\n\t   * @param {HTMLElement} element The element working as a file uploader.\n\t   * @param {Object} [options] The component options.\n\t   */\n\t\n\t\n\t  _createClass(FileUploader, [{\n\t    key: 'updateLabel',\n\t\n\t\n\t    /**\n\t     * Updates the label for the file name upon file selection.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function updateLabel(event) {\n\t      var fileName = '';\n\t      var element = this.element;\n\t\n\t      if (element.files && element.files.length > 1) {\n\t        fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n\t      } else {\n\t        fileName = event.target.value.split('\\\\').pop();\n\t      }\n\t\n\t      if (fileName) {\n\t        this.labelNode.textContent = fileName;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and file uploader instance.\n\t     * @member FileUploader.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode FileUploader.create .create()}, or {@linkcode FileUploader.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode FileUploader.init .init()} works.\n\t     * @member FileUploader.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find file uploaders.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates file uploader in the given node.\n\t     * If the given element indicates that it's an file uploader, instantiates it.\n\t     * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n\t     * @param {HTMLElement} element The element working as a file uploader.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS selector to find file uploaders.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return FileUploader;\n\t}();\n\t\n\tFileUploader.components = new WeakMap();\n\tFileUploader.options = {\n\t  selectorInit: '[data-file-uploader]',\n\t  selectorLabel: '[data-file-appearance]'\n\t};\n\texports.default = FileUploader;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Element.matches;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Object.assign;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.from;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tvar _on = __webpack_require__(8);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FabButton = function () {\n\t  /**\n\t   * Floating action button.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a floting action button.\n\t   */\n\t  function FabButton(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, FabButton);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    element.addEventListener('click', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates floating action buttons in the given element.\n\t   * If the given element indicates that it's an floating action button, instantiates it.\n\t   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n\t   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorItem] The CSS selector to find floating action buttons.\n\t   * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t   */\n\t\n\t\n\t  _createClass(FabButton, [{\n\t    key: 'toggle',\n\t\n\t\n\t    /**\n\t     * Toggles this floating action button.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function toggle(event) {\n\t      if (this.element.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      if (this.element.dataset.state === 'closed') {\n\t        this.element.dataset.state = 'open';\n\t      } else {\n\t        this.element.dataset.state = 'closed';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates floating action button of the given element.\n\t     * @param {HTMLElement} element The element.\n\t     */\n\t\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target);\n\t      } else {\n\t        return (0, _on2.default)(target, 'click', function (event) {\n\t          var element = (0, _eventMatches2.default)(event, effectiveOptions.selectorInit);\n\t          if (element && !_this2.components.has(element)) {\n\t            _this2.create(element).toggle(event);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and floating action button instance.\n\t     * @member FabButton.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode FabButton.create .create()}, or {@linkcode FabButton.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode FabButton.init .init()} works.\n\t     * @member FabButton.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find floating action buttons.\n\t     */\n\t\n\t  }]);\n\t\n\t  return FabButton;\n\t}();\n\t\n\tFabButton.components = new WeakMap();\n\tFabButton.options = {\n\t  selectorInit: '[data-fab]'\n\t};\n\texports.default = FabButton;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = eventMatches;\n\t\n\t__webpack_require__(3);\n\t\n\tfunction eventMatches(event, selector) {\n\t  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by the polyfill).\n\t  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n\t  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n\t  if (typeof event.target.matches === 'function') {\n\t    if (event.target.matches(selector)) {\n\t      // If event target itself matches the given selector, return it\n\t      return event.target;\n\t    } else if (event.target.matches(selector + ' *')) {\n\t      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n\t      for (var traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n\t        if (traverse.matches(selector)) {\n\t          return traverse;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = on;\n\tfunction on(element) {\n\t  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    args[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  element.addEventListener.apply(element, args);\n\t  return {\n\t    release: function release() {\n\t      element.removeEventListener.apply(element, args);\n\t      return null;\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _toggleClass = __webpack_require__(11);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ContentSwitcher = function () {\n\t  /**\n\t   * Set of content switcher buttons.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a switcher button is selected.\n\t   *   Cancellation of this event stops selection of content switcher button.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t   */\n\t  function ContentSwitcher(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, ContentSwitcher);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t\n\t    [].concat(_toConsumableArray(element.querySelectorAll('input'))).forEach(function (input) {\n\t      if (input.checked) _this._changeActive(input);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a set of content switcher buttons of the given element.\n\t   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a switcher button is selected.\n\t   *   Cancellation of this event stops selection of content switcher button.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t   */\n\t\n\t\n\t  _createClass(ContentSwitcher, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Handles click on content switcher button set.\n\t     * If the click is on a content switcher button, activates it.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var button = (0, _eventMatches2.default)(event, this.options.selectorButton);\n\t\n\t      if (button) {\n\t        this.setActive(button);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n\t     * @private\n\t     * @param {HTMLElement} item The button to be selected.\n\t     */\n\t\n\t  }, {\n\t    key: '_changeActive',\n\t    value: function _changeActive(item) {\n\t      var _this2 = this;\n\t\n\t      // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n\t      var itemLink = item.querySelector(this.options.selectorLink);\n\t      if (itemLink) {\n\t        [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLink))).forEach(function (link) {\n\t          if (link !== itemLink) {\n\t            link.setAttribute('aria-selected', 'false');\n\t          }\n\t        });\n\t        itemLink.setAttribute('aria-selected', 'true');\n\t      }\n\t\n\t      var selectorButtons = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorButton)));\n\t\n\t      selectorButtons.forEach(function (button) {\n\t        if (button !== item) {\n\t          (0, _toggleClass2.default)(button, _this2.options.classActive, false);\n\t          [].concat(_toConsumableArray(button.ownerDocument.querySelectorAll(button.dataset.target))).forEach(function (element) {\n\t            return element.setAttribute('hidden', '');\n\t          });\n\t        }\n\t      });\n\t\n\t      (0, _toggleClass2.default)(item, this.options.classActive, true);\n\t      [].concat(_toConsumableArray(item.ownerDocument.querySelectorAll(item.dataset.target))).forEach(function (element) {\n\t        return element.removeAttribute('hidden');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n\t     * @typedef {Object} ContentSwitcher~cancelError\n\t     * @property {boolean} canceled `true` always.\n\t     * @property {boolean} item The content switcher button that was about to be selected.\n\t     */\n\t\n\t    /**\n\t     * The callback called once switching is finished or is canceled.\n\t     * @callback ContentSwitcher~setActiveCallback\n\t     * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n\t     * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n\t     */\n\t\n\t    /**\n\t     * Selects a content switcher button.\n\t     * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n\t     * DOM elements associated with unselected buttons in the same way will be hidden.\n\t     * @param {HTMLElement} item The button to be selected.\n\t     * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'setActive',\n\t    value: function setActive(item, callback) {\n\t      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { item: item }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeActive(item);\n\t        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { item: item }\n\t        }));\n\t        if (callback) {\n\t          callback(null, item);\n\t        }\n\t      } else {\n\t        var error = new Error('Switching active item has been canceled.');\n\t        error.canceled = true;\n\t        error.item = item;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and content switcher set instance.\n\t     * @member ContentSwitcher.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode ContentSwitcher.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode ContentSwitcher.init .init()} works.\n\t     * @member ContentSwitcher.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find content switcher button set.\n\t     * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n\t     * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t     * @property {string} [classActive] The CSS class for switcher button's selected state.\n\t     * @property {string} [eventBeforeSelected]\n\t     *   The name of the custom event fired before a switcher button is selected.\n\t     *   Cancellation of this event stops selection of content switcher button.\n\t     * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates content switcher button sets in the given node.\n\t     * If the given element indicates that it's an content switcher button set, instantiates it.\n\t     * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n\t     * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS selector to find content switcher button set.\n\t     * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n\t     * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n\t     * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a switcher button is selected.\n\t     *   Cancellation of this event stops selection of content switcher button.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(document.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this3.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ContentSwitcher;\n\t}();\n\t\n\tContentSwitcher.components = new WeakMap();\n\tContentSwitcher.options = {\n\t  selectorInit: '[data-content-switcher]',\n\t  selectorButton: 'input[type=\"radio\"], .bx--content-switcher__btn',\n\t  selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n\t  classActive: 'bx--content-switcher--selected',\n\t  eventBeforeSelected: 'content-switcher-beingselected',\n\t  eventAfterSelected: 'content-switcher-selected'\n\t};\n\texports.default = ContentSwitcher;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = CustomEvent;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = toggleClass;\n\tfunction toggleClass(element, name, add) {\n\t  if (element.classList.contains(name) === !add) {\n\t    element.classList[add ? 'add' : 'remove'](name);\n\t  }\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(13);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _contentSwitcher = __webpack_require__(9);\n\t\n\tvar _contentSwitcher2 = _interopRequireDefault(_contentSwitcher);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Tab = function (_ContentSwitcher) {\n\t  _inherits(Tab, _ContentSwitcher);\n\t\n\t  /**\n\t   * Container of tabs.\n\t   * @extends ContentSwitcher\n\t   * @param {HTMLElement} element The element working as a container of tabs.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n\t   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n\t   * @param {string} [options.classActive] The CSS class for tab's selected state.\n\t   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a tab is selected.\n\t   *   Cancellation of this event stops selection of tab.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t   */\n\t  function Tab(element, options) {\n\t    _classCallCheck(this, Tab);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).call(this, element, options));\n\t\n\t    _this.element.addEventListener('keydown', function (event) {\n\t      return _this.handleKeyDown(event);\n\t    });\n\t\n\t    var selected = _this.element.querySelector(_this.options.selectorButtonSelected);\n\t    if (selected) {\n\t      _this.updateTriggerText(selected);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Instantiates tab containers in the given node.\n\t   * If the given element indicates that it's an tab container, instantiates it.\n\t   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n\t   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorInit] The CSS selector to find tab containers.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n\t   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n\t   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n\t   * @param {string} [options.classActive] The CSS class for tab's selected state.\n\t   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a tab is selected.\n\t   *   Cancellation of this event stops selection of tab.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t   */\n\t\n\t\n\t  _createClass(Tab, [{\n\t    key: '_changeActive',\n\t    value: function _changeActive(item) {\n\t      _get(Tab.prototype.__proto__ || Object.getPrototypeOf(Tab.prototype), '_changeActive', this).call(this, item);\n\t      this.updateTriggerText(item);\n\t    }\n\t\n\t    /**\n\t     * Handles click on tab container.\n\t     * * If the click is on a tab, activates it.\n\t     * * If the click is on the button to open the drop down menu, does so.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleClick',\n\t    value: function handleClick(event) {\n\t      _get(Tab.prototype.__proto__ || Object.getPrototypeOf(Tab.prototype), 'handleClick', this).call(this, event);\n\t      var button = (0, _eventMatches2.default)(event, this.options.selectorButton);\n\t      var trigger = (0, _eventMatches2.default)(event, this.options.selectorTrigger);\n\t      if (button) {\n\t        _get(Tab.prototype.__proto__ || Object.getPrototypeOf(Tab.prototype), 'handleClick', this).call(this, event);\n\t        this.updateMenuState();\n\t      }\n\t      if (trigger) {\n\t        this.updateMenuState();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles arrow keys on tab container.\n\t     * * Up/Left keys are used to go to previous tab.\n\t     * * Down/Right keys are used to go to next tab.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleKeyDown',\n\t    value: function handleKeyDown(event) {\n\t      var _this2 = this;\n\t\n\t      var triggerNode = this.element.querySelector(this.options.selectorTrigger);\n\t      if (triggerNode && triggerNode.offsetParent) {\n\t        return;\n\t      }\n\t\n\t      var direction = {\n\t        Left: -1,\n\t        Right: 1,\n\t        ArrowLeft: -1,\n\t        ArrowRight: 1\n\t      }[event.key || event.keyIdentifier];\n\t\n\t      if (direction) {\n\t        var buttons = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorButton)));\n\t        var button = this.element.querySelector(this.options.selectorButtonSelected);\n\t        var nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n\t        var nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex : nextIndex - Math.sign(nextIndex) * buttons.length;\n\t        this.setActive(buttons[nextIndexLooped], function (error, item) {\n\t          if (item) {\n\t            var link = item.querySelector(_this2.options.selectorLink);\n\t            if (link) {\n\t              link.focus();\n\t            }\n\t          }\n\t        });\n\t        event.preventDefault();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Shows/hides the drop down menu used in narrow mode.\n\t     */\n\t\n\t  }, {\n\t    key: 'updateMenuState',\n\t    value: function updateMenuState() {\n\t      this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n\t    }\n\t\n\t    /**\n\t     * Updates the text indicating the currently selected tab item.\n\t     * @param {HTMLElement} target The newly selected tab item.\n\t     */\n\t\n\t  }, {\n\t    key: 'updateTriggerText',\n\t    value: function updateTriggerText(target) {\n\t      this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and tab container instance.\n\t     * @member Tab.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode Tab.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode Tab.init .init()} works.\n\t     * @member Tab.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find tab containers.\n\t     * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n\t     * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n\t     * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n\t     * @property {string} [selectorButton] The CSS selector to find tab containers.\n\t     * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n\t     * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n\t     * @property {string} [classActive] The CSS class for tab's selected state.\n\t     * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n\t     * @property {string} [eventBeforeSelected]\n\t     *   The name of the custom event fired before a tab is selected.\n\t     *   Cancellation of this event stops selection of tab.\n\t     * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n\t     */\n\t\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this3.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Tab;\n\t}(_contentSwitcher2.default);\n\t\n\tTab.components = new WeakMap();\n\tTab.options = Object.assign(Object.create(_contentSwitcher2.default.options), {\n\t  selectorInit: '[data-tabs]',\n\t  selectorMenu: '.bx--tabs__nav',\n\t  selectorTrigger: '.bx--tabs__trigger',\n\t  selectorTriggerText: '.bx--tabs__trigger-text',\n\t  selectorButton: '.bx--tabs__nav-item',\n\t  selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n\t  selectorLink: '.bx--tabs__nav-link',\n\t  classActive: 'bx--tabs--selected',\n\t  classHidden: 'bx--tabs--hidden',\n\t  eventBeforeSelected: 'tab-beingselected',\n\t  eventAfterSelected: 'tab-selected'\n\t});\n\texports.default = Tab;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Math.sign;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _toggleClass = __webpack_require__(11);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _on = __webpack_require__(8);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OverflowMenu = function () {\n\t  function OverflowMenu(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, OverflowMenu);\n\t\n\t    _initialiseProps.call(this);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t    this.optionMenu = this.element.querySelector(this.options.selectorOptionMenu);\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    /**\n\t     * The handle to release click event listener on document object.\n\t     * @member {Handle}\n\t     */\n\t    this.hDocumentClick = (0, _on2.default)(this.element.ownerDocument, 'click', function (event) {\n\t      return _this.handleDocumentClick(event);\n\t    });\n\t\n\t    /**\n\t     * The handle to release keypress event listener on document object.\n\t     * @member {Handle}\n\t     */\n\t    this.hDocumentKeyPress = (0, _on2.default)(this.element.ownerDocument, 'keypress', function (event) {\n\t      return _this.handleKeyPress(event);\n\t    });\n\t  }\n\t\n\t  _createClass(OverflowMenu, [{\n\t    key: 'handleDocumentClick',\n\t    value: function handleDocumentClick(event) {\n\t      var isOfSelf = this.element.contains(event.target);\n\t      var shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\t\n\t      if (isOfSelf && this.element.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      (0, _toggleClass2.default)(this.optionMenu, 'bx--overflow-menu--open', shouldBeOpen);\n\t      (0, _toggleClass2.default)(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n\t\n\t      if (shouldBeOpen) {\n\t        this.emitEvent(this.element, event);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleKeyPress',\n\t    value: function handleKeyPress(event) {\n\t      var key = event.key || event.which;\n\t      if (key === 'Enter' || key === 13) {\n\t        var isOfSelf = this.element.contains(event.target);\n\t        var shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\t\n\t        if (isOfSelf && this.element.tagName === 'A') {\n\t          event.preventDefault();\n\t        }\n\t\n\t        if (shouldBeOpen) {\n\t          this.emitEvent(this.element, event);\n\t        }\n\t\n\t        (0, _toggleClass2.default)(this.optionMenu, 'bx--overflow-menu--open', shouldBeOpen);\n\t        (0, _toggleClass2.default)(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.hDocumentClick) {\n\t        this.hDocumentClick = this.hDocumentClick.release();\n\t      }\n\t      if (this.hDocumentKeyPress) {\n\t        this.hDocumentKeyPress = this.hDocumentKeyPress.release();\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return OverflowMenu;\n\t}();\n\t\n\tOverflowMenu.components = new WeakMap();\n\tOverflowMenu.options = {\n\t  selectorInit: '[data-overflow-menu]',\n\t  selectorOptionMenu: '.bx--overflow-menu__options'\n\t};\n\t\n\tvar _initialiseProps = function _initialiseProps() {\n\t  var _this3 = this;\n\t\n\t  this.emitEvent = function (element, evt) {\n\t    var detail = {\n\t      element: element,\n\t      optionMenu: _this3.optionMenu,\n\t      evt: evt\n\t    };\n\t\n\t    var eventAfter = new CustomEvent('overflow', {\n\t      bubbles: true,\n\t      cancelable: true,\n\t      detail: detail\n\t    });\n\t\n\t    _this3.element.ownerDocument.dispatchEvent(eventAfter);\n\t  };\n\t};\n\t\n\texports.default = OverflowMenu;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tvar _toggleClass = __webpack_require__(11);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _on = __webpack_require__(8);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * @param {Element} element The element to obtain transition duration from.\n\t * @returns {number} The transition duration of the given property set in the given element.\n\t */\n\tfunction getTransitionDuration(element) {\n\t  var computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n\t  var durations = computedStyle.transitionDuration.split(/,\\s*/).map(function (transitionDuration) {\n\t    return parseFloat(transitionDuration);\n\t  }).filter(function (duration) {\n\t    return !isNaN(duration);\n\t  });\n\t  return durations.length > 0 ? Math.max.apply(Math, _toConsumableArray(durations)) : 0;\n\t}\n\t\n\tvar Modal = function () {\n\t  /**\n\t   * Modal dialog.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a modal dialog.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.classVisible] The CSS class for the visible state.\n\t   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this modal is shown.\n\t   *   Cancellation of this event stops showing the modal.\n\t   * @param {string} [options.eventAfterShown]\n\t   *   The name of the custom event telling that modal is sure shown\n\t   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this modal is hidden.\n\t   *   Cancellation of this event stops hiding the modal.\n\t   * @param {string} [options.eventAfterHidden]\n\t   *   The name of the custom event telling that modal is sure hidden\n\t   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n\t   */\n\t  function Modal(element) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Modal);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.hookCloseActions();\n\t  }\n\t\n\t  /**\n\t   * Instantiates modal dialog of the given element.\n\t   * @param {HTMLElement} element The element working as a modal dialog.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.classVisible] The CSS class for the visible state.\n\t   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this modal is shown.\n\t   *   Cancellation of this event stops showing the modal.\n\t   * @param {string} [options.eventAfterShown]\n\t   *   The name of the custom event telling that modal is sure shown\n\t   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this modal is hidden.\n\t   *   Cancellation of this event stops hiding the modal.\n\t   * @param {string} [options.eventAfterHidden]\n\t   *   The name of the custom event telling that modal is sure hidden\n\t   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n\t   */\n\t\n\t\n\t  _createClass(Modal, [{\n\t    key: 'hookCloseActions',\n\t\n\t\n\t    /**\n\t     * Adds event listeners for closing this dialog.\n\t     */\n\t    value: function hookCloseActions() {\n\t      var _this = this;\n\t\n\t      this.element.addEventListener('click', function (event) {\n\t        if (event.currentTarget === event.target) _this.hide(event);\n\t      });\n\t\n\t      if (this.keydownHandler) {\n\t        this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n\t        this.keydownHandler = null;\n\t      }\n\t\n\t      this.keydownHandler = function (event) {\n\t        if (event.which === 27) {\n\t          _this.hide(event);\n\t        }\n\t      };\n\t\n\t      this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\t\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll('[data-modal-close]'))).forEach(function (element) {\n\t        element.addEventListener('click', function (event) {\n\t          _this.hide(event);\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n\t     * @private\n\t     * @param {boolean} visible `true` to make this modal dialog visible.\n\t     * @param {Function} callback Callback called when change in state completes.\n\t     */\n\t\n\t  }, {\n\t    key: '_changeState',\n\t    value: function _changeState(visible, callback) {\n\t      var _this2 = this;\n\t\n\t      var finished = void 0;\n\t      var finishedTransition = function finishedTransition() {\n\t        if (!finished) {\n\t          finished = true;\n\t          _this2.element.removeEventListener('transitionend', finishedTransition);\n\t          callback();\n\t        }\n\t      };\n\t\n\t      this.element.addEventListener('transitionend', finishedTransition);\n\t      var transitionDuration = getTransitionDuration(this.element);\n\t      (0, _toggleClass2.default)(this.element, this.options.classVisible, visible);\n\t      (0, _toggleClass2.default)(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n\t      if (transitionDuration === 0) {\n\t        finishedTransition();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The callback called once showing/hiding this dialog is finished or is canceled.\n\t     * @callback Modal~stateChangeCallback\n\t     * @param {Error} error\n\t     *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n\t     *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n\t     *   calls `.preventDefault()` against the event.\n\t     * @param {boolean} newState The new toggle state.\n\t     */\n\t\n\t    /**\n\t     * Shows this modal dialog.\n\t     * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n\t     * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'show',\n\t    value: function show(launchingElementOrEvent, callback) {\n\t      var _this3 = this;\n\t\n\t      var launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n\t      if (launchingElementOrEventOmitted) {\n\t        callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n\t      }\n\t\n\t      var launchingElement = launchingElementOrEventOmitted ? null : launchingElementOrEvent.delegateTarget || launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\t\n\t      var launchingEvent = launchingElementOrEventOmitted ? null : launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\t\n\t      if (launchingElement && !launchingElement.nodeType) {\n\t        throw new TypeError('DOM Node should be given for launching element.');\n\t      }\n\t\n\t      if (launchingEvent && !launchingEvent.type) {\n\t        throw new TypeError('DOM event should be given for launching event.');\n\t      }\n\t\n\t      if (this.element.classList.contains(this.options.classVisible)) {\n\t        if (callback) {\n\t          callback(null, true);\n\t        }\n\t        return;\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options.eventBeforeShown, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: {\n\t          launchingElement: launchingElement,\n\t          launchingEvent: launchingEvent\n\t        }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeState(true, function () {\n\t          _this3.element.dispatchEvent(new CustomEvent(_this3.options.eventAfterShown, {\n\t            bubbles: true,\n\t            cancelable: true,\n\t            detail: {\n\t              launchingElement: launchingElement,\n\t              launchingEvent: launchingEvent\n\t            }\n\t          }));\n\t          if (callback) {\n\t            callback();\n\t          }\n\t        });\n\t      } else {\n\t        var error = new Error('Showing dialog has been canceled.');\n\t        error.canceled = true;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Hides this modal dialog.\n\t     * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'hide',\n\t    value: function hide(launchingElementOrEvent, callback) {\n\t      var _this4 = this;\n\t\n\t      var launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n\t      if (launchingElementOrEventOmitted) {\n\t        callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n\t      }\n\t\n\t      var launchingElement = launchingElementOrEventOmitted ? null : launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\t\n\t      var launchingEvent = launchingElementOrEventOmitted ? null : launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\t\n\t      if (launchingElement && !launchingElement.nodeType) {\n\t        throw new TypeError('DOM Node should be given for launching element.');\n\t      }\n\t\n\t      if (launchingEvent && !launchingEvent.type) {\n\t        throw new TypeError('DOM event should be given for launching event.');\n\t      }\n\t\n\t      if (!this.element.classList.contains(this.options.classVisible)) {\n\t        if (callback) {\n\t          callback(null, true);\n\t        }\n\t        return;\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: {\n\t          launchingElement: launchingElement,\n\t          launchingEvent: launchingEvent\n\t        }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        this._changeState(false, function () {\n\t          _this4.element.dispatchEvent(new CustomEvent(_this4.options.eventAfterHidden, {\n\t            bubbles: true,\n\t            cancelable: true,\n\t            detail: {\n\t              launchingElement: launchingElement,\n\t              launchingEvent: launchingEvent\n\t            }\n\t          }));\n\t          if (callback) {\n\t            callback();\n\t          }\n\t        });\n\t      } else {\n\t        var error = new Error('Hiding dialog has been canceled.');\n\t        error.canceled = true;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.keydownHandler) {\n\t        this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n\t        this.keydownHandler = null;\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * @deprecated\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates modal dialogs in the given element.\n\t     * If the given element indicates that it's an modal dialog, instantiates it.\n\t     * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n\t     * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n\t     * @implements Component\n\t     * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS class to find modal dialogs.\n\t     * @param {string} [options.attribInitTarget] The attribute name in the launcher buttons to find target modal dialogs.\n\t     * @param {string} [options.classVisible] The CSS class for the visible state.\n\t     * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t     * @param {string} [options.eventBeforeShown]\n\t     *   The name of the custom event fired before this modal is shown.\n\t     *   Cancellation of this event stops showing the modal.\n\t     * @param {string} [options.eventAfterShown]\n\t     *   The name of the custom event telling that modal is sure shown\n\t     *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n\t     * @param {string} [options.eventBeforeHidden]\n\t     *   The name of the custom event fired before this modal is hidden.\n\t     *   Cancellation of this event stops hiding the modal.\n\t     * @param {string} [options.eventAfterHidden]\n\t     *   The name of the custom event telling that modal is sure hidden\n\t     *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n\t     * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this5 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        return (0, _on2.default)(target, 'click', function (event) {\n\t          var element = (0, _eventMatches2.default)(event, '[' + effectiveOptions.attribInitTarget + ']');\n\t\n\t          if (element) {\n\t            event.delegateTarget = element;\n\t\n\t            var modalElements = [].concat(_toConsumableArray(element.ownerDocument.querySelectorAll(element.getAttribute(effectiveOptions.attribInitTarget))));\n\t            if (modalElements.length > 1) {\n\t              throw new Error('Target modal must be unique.');\n\t            }\n\t\n\t            if (modalElements.length === 1) {\n\t              (function () {\n\t                if (element.tagName === 'A') {\n\t                  event.preventDefault();\n\t                }\n\t\n\t                var modal = _this5.create(modalElements[0], effectiveOptions);\n\t                modal.show(event, function (error, shownAlready) {\n\t                  if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n\t                    modal.element.focus();\n\t                  }\n\t                });\n\t              })();\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'hook',\n\t    value: function hook() {\n\t      console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and modal instance.\n\t     * @member Modal.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode Modal.create .create()}, or {@linkcode Modal.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode Modal.init .init()} works.\n\t     * @member Modal.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS class to find modal dialogs.\n\t     * @property {string} attribInitTarget The attribute name in the launcher buttons to find target modal dialogs.\n\t     * @property {string} [classVisible] The CSS class for the visible state.\n\t     * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n\t     * @property {string} [eventBeforeShown]\n\t     *   The name of the custom event fired before this modal is shown.\n\t     *   Cancellation of this event stops showing the modal.\n\t     * @property {string} [eventAfterShown]\n\t     *   The name of the custom event telling that modal is sure shown\n\t     *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n\t     * @property {string} [eventBeforeHidden]\n\t     *   The name of the custom event fired before this modal is hidden.\n\t     *   Cancellation of this event stops hiding the modal.\n\t     * @property {string} [eventAfterHidden]\n\t     *   The name of the custom event telling that modal is sure hidden\n\t     *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n\t     */\n\t\n\t  }]);\n\t\n\t  return Modal;\n\t}();\n\t\n\tModal.components = new WeakMap();\n\tModal.options = {\n\t  selectorInit: '[data-modal]',\n\t  attribInitTarget: 'data-modal-target',\n\t  classVisible: 'is-visible',\n\t  classNoScroll: 'bx--noscroll',\n\t  eventBeforeShown: 'modal-beingshown',\n\t  eventAfterShown: 'modal-shown',\n\t  eventBeforeHidden: 'modal-beinghidden',\n\t  eventAfterHidden: 'modal-hidden'\n\t};\n\texports.default = Modal;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HeaderNav = function () {\n\t  /**\n\t   * Header with taxonomy menu.\n\t   * @deprecated\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a taxonomy menu.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t   * @param {string} [options.classActive] The CSS class for the visible state.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this taxonomy menu is shown.\n\t   *   Cancellation of this event stops showing the taxonomy menu.\n\t   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this taxonomy menu is hidden.\n\t   *   Cancellation of this event stops hiding the taxonomy menu.\n\t   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a menu item is selected.\n\t   *   Cancellation of this event stops the selection.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t   */\n\t  function HeaderNav(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, HeaderNav);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\t\n\t    this.element.addEventListener('keydown', function (event) {\n\t      return _this.toggleNav(event);\n\t    });\n\t\n\t    [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItemLink))).forEach(function (item) {\n\t      item.addEventListener('click', function (e) {\n\t        return _this.select(e);\n\t      });\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates taxonomy menus in the given element.\n\t   * If the given element indicates that it's an taxonomy menu, instantiates it.\n\t   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n\t   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n\t   * @implements Component\n\t   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorInit] The CSS selector to find taxonomy menus.\n\t   * @param {string} [options.attribInitTarget] The attribute name in the lancher buttons to find taxonomy menus.\n\t   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t   * @param {string} [options.classActive] The CSS class for the visible state.\n\t   * @param {string} [options.eventBeforeShown]\n\t   *   The name of the custom event fired before this taxonomy menu is shown.\n\t   *   Cancellation of this event stops showing the taxonomy menu.\n\t   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t   * @param {string} [options.eventBeforeHidden]\n\t   *   The name of the custom event fired before this taxonomy menu is hidden.\n\t   *   Cancellation of this event stops hiding the taxonomy menu.\n\t   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a menu item is selected.\n\t   *   Cancellation of this event stops the selection.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t   * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t   */\n\t\n\t\n\t  _createClass(HeaderNav, [{\n\t    key: 'toggleNav',\n\t\n\t\n\t    /**\n\t     * Shows/hides this taxonomy menu.\n\t     * @param {Event} event The event triggering this function.\n\t     */\n\t    value: function toggleNav(event) {\n\t      var isActive = this.element.classList.contains(this.options.classActive);\n\t      var add = void 0;\n\t      if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n\t        // Toggle button or ESC key on nav\n\t        add = !isActive;\n\t      } else if (event.type === 'keydown' && event.which === 27) {\n\t        // Down arrow on launch button\n\t        add = false;\n\t      } else {\n\t        return;\n\t      }\n\t\n\t      var launchingElement = (0, _eventMatches2.default)(event, '[data-nav-target]') || event.currentTarget;\n\t      if (launchingElement.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      var eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { launchingElement: launchingElement }\n\t      });\n\t      var defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\t\n\t      if (add) {\n\t        this.triggerNode = launchingElement;\n\t        this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n\t      }\n\t\n\t      if (defaultNotPrevented) {\n\t        this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n\t        (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n\t        this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { launchingElement: launchingElement }\n\t        }));\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Selects a menu item.\n\t     * @param {Event} event The event triggering this function.\n\t     */\n\t\n\t  }, {\n\t    key: 'select',\n\t    value: function select(event) {\n\t      var activatedElement = event.currentTarget;\n\t      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: {\n\t          initiatingEvent: event,\n\t          itemElement: activatedElement\n\t        }\n\t      });\n\t\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItem))).forEach(function (element) {\n\t          if (element.contains(activatedElement)) {\n\t            element.classList.add('selected');\n\t          } else if (element.classList.contains('selected')) {\n\t            element.classList.remove('selected');\n\t          }\n\t        });\n\t        activatedElement.classList.add('selected');\n\t        if (this.triggerLabelNode) {\n\t          this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n\t        }\n\t        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { itemElement: activatedElement }\n\t        }));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * @deprecated\n\t     */\n\t\n\t  }], [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        var _ret = function () {\n\t          var handler = function handler(event) {\n\t            var element = (0, _eventMatches2.default)(event, '[' + effectiveOptions.attribInitTarget + ']');\n\t\n\t            if (element) {\n\t              var headerElements = [].concat(_toConsumableArray(element.ownerDocument.querySelectorAll(element.getAttribute(effectiveOptions.attribInitTarget))));\n\t              if (headerElements.length > 1) {\n\t                throw new Error('Target header must be unique.');\n\t              }\n\t\n\t              if (headerElements.length === 1) {\n\t                if (element.tagName === 'A') {\n\t                  event.preventDefault();\n\t                }\n\t                _this2.create(headerElements[0], effectiveOptions).toggleNav(event);\n\t              }\n\t            }\n\t          };\n\t\n\t          target.addEventListener('click', handler);\n\t          target.addEventListener('keydown', handler);\n\t\n\t          return {\n\t            v: {\n\t              release: function release() {\n\t                target.removeEventListener('keydown', handler);\n\t                target.removeEventListener('click', handler);\n\t              }\n\t            }\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Instantiates taxonomy menu of the given element.\n\t     * @param {HTMLElement} element The element working as a taxonomy menu.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t     * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n\t     * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n\t     * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n\t     * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n\t     * @param {string} [options.classActive] The CSS class for the visible state.\n\t     * @param {string} [options.eventBeforeShown]\n\t     *   The name of the custom event fired before this taxonomy menu is shown.\n\t     *   Cancellation of this event stops showing the taxonomy menu.\n\t     * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t     * @param {string} [options.eventBeforeHidden]\n\t     *   The name of the custom event fired before this taxonomy menu is hidden.\n\t     *   Cancellation of this event stops hiding the taxonomy menu.\n\t     * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a menu item is selected.\n\t     *   Cancellation of this event stops the selection.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t  }, {\n\t    key: 'hook',\n\t    value: function hook() {\n\t      console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and taxonomy menu instance.\n\t     * @member HeaderNav.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode HeaderNav.create .create()}, or {@linkcode HeaderNav.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode HeaderNav.init .init()} works.\n\t     * @member HeaderNav.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find taxonomy menus.\n\t     * @property {string} attribInitTarget The attribute name in the lancher buttons to find taxonomy menus.\n\t     * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n\t     * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n\t     * @property {string} [selectorItem] The CSS selector to find the menu items.\n\t     * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n\t     * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n\t     * @property {string} [classActive] The CSS class for the visible state.\n\t     * @property {string} [eventBeforeShown]\n\t     *   The name of the custom event fired before this taxonomy menu is shown.\n\t     *   Cancellation of this event stops showing the taxonomy menu.\n\t     * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n\t     * @property {string} [eventBeforeHidden]\n\t     *   The name of the custom event fired before this taxonomy menu is hidden.\n\t     *   Cancellation of this event stops hiding the taxonomy menu.\n\t     * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n\t     * @property {string} [eventBeforeSelected]\n\t     *   The name of the custom event fired before a menu item is selected.\n\t     *   Cancellation of this event stops the selection.\n\t     * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n\t     */\n\t\n\t  }]);\n\t\n\t  return HeaderNav;\n\t}();\n\t\n\tHeaderNav.components = new WeakMap();\n\tHeaderNav.options = {\n\t  selectorInit: '[data-nav]',\n\t  attribInitTarget: 'data-nav-target',\n\t  selectorTriggerLabel: '.current-taxonomy',\n\t  classActive: 'taxonomy-nav--active',\n\t  selectorMenu: '.taxonomy-menu',\n\t  selectorItem: '.taxonomy-item',\n\t  selectorItemLink: '.taxonomy-item--taxonomy-menu',\n\t  selectorLabel: '.taxonomy-item__label',\n\t  eventBeforeShown: 'header-beingshown',\n\t  eventAfterShown: 'header-shown',\n\t  eventBeforeHidden: 'header-beinghidden',\n\t  eventAfterHidden: 'header-hidden',\n\t  eventBeforeSelected: 'header-beingselected',\n\t  eventAfterSelected: 'header-selected'\n\t};\n\texports.default = HeaderNav;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Toolbars = function () {\n\t  /**\n\t   * Search button in tool bar.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as an search button.\n\t   */\n\t  function Toolbars(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Toolbars);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleActionClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a search button of the given element.\n\t   * @param {HTMLElement} element The element working as a search button.\n\t   */\n\t\n\t\n\t  _createClass(Toolbars, [{\n\t    key: 'handleActionClick',\n\t\n\t\n\t    /**\n\t     * Show/hide search box.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleActionClick(event) {\n\t      var searchActionNode = event.currentTarget;\n\t\n\t      if (searchActionNode.tagName === 'A') {\n\t        event.preventDefault();\n\t      }\n\t\n\t      this.element.classList.toggle('show-search');\n\t      if (this.searchFieldNode) {\n\t        this.searchFieldNode.classList.toggle('show-search');\n\t        this.searchFieldNode.value = '';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and search button instance.\n\t     * @member Toolbars.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode Toolbars.create .create()}, or {@linkcode Toolbars.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode Toolbars.init .init()} works.\n\t     * @member Toolbars.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find search buttons.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates search buttons in the given node.\n\t     * If the given element indicates that it's an search button, instantiates it.\n\t     * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n\t     * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS selector to find search buttons.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Toolbars;\n\t}();\n\t\n\tToolbars.components = new WeakMap();\n\tToolbars.options = {\n\t  selectorInit: '[data-list-icons-search-action-target]'\n\t};\n\texports.default = Toolbars;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _toggleClass = __webpack_require__(11);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Loading = function () {\n\t  /**\n\t   * Spinner indicating loading state.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a spinner.\n\t   * @param {Object} [options] The component options.\n\t   * @param {boolean} [options.active] `true` if this spinner should roll.\n\t   */\n\t  function Loading(element) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Loading);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t    this.active = this.options.active;\n\t    this.ie = false;\n\t\n\t    // Check if browser is Internet Explorer\n\t    if (options.ie || window.ActiveXObject || 'ActiveXObject' in window) {\n\t      this.ie = true;\n\t      this.element.classList.add('bx--loading--ie');\n\t    }\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    // Initialize spinner\n\t    this.set(this.active);\n\t  }\n\t\n\t  /**\n\t   * Instantiates spinner of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(Loading, [{\n\t    key: 'set',\n\t\n\t\n\t    /**\n\t     * Sets active/inactive state.\n\t     * @param {boolean} active `true` if this spinner should roll.\n\t     */\n\t    value: function set(active) {\n\t      if (typeof active !== 'boolean') {\n\t        throw new TypeError('set expects a boolean.');\n\t      }\n\t\n\t      this.active = active;\n\t\n\t      if (this.ie) {\n\t        (0, _toggleClass2.default)(this.element, 'bx--loading--stop--ie', !this.active);\n\t      }\n\t      (0, _toggleClass2.default)(this.element, 'bx--loading--stop', !this.active);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Toggles active/inactive state.\n\t     * @param {boolean} active `true` if this spinner should roll.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      return this.set(!this.active);\n\t    }\n\t\n\t    /**\n\t     * @returns {boolean} `true` if this spinner is rolling roll.\n\t     */\n\t\n\t  }, {\n\t    key: 'isActive',\n\t    value: function isActive() {\n\t      return this.active;\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and spinner instance.\n\t     * @member Loading.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode Loading.create .create()}, or {@linkcode Loading.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode Loading.init .init()} works.\n\t     * @member Loading.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find spinners.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates spinner in the given node.\n\t     * If the given element indicates that it's an spinner, instantiates it.\n\t     * Otherwise, instantiates spinners by searching for spinners in the given node.\n\t     * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {boolean} [options.selectorInit] The CSS selector to find spinners.\n\t     * @param {boolean} [options.active] `true` if this spinner should roll.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Loading;\n\t}();\n\t\n\tLoading.components = new WeakMap();\n\tLoading.options = {\n\t  selectorInit: '[data-loading]',\n\t  active: true\n\t};\n\texports.default = Loading;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tvar _on = __webpack_require__(8);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Dropdown = function () {\n\t  /**\n\t   * A selector with drop downs.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a selector.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a drop down item is selected.\n\t   *   Cancellation of this event stops selection of drop down item.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t   */\n\t  function Dropdown(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Dropdown);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t\n\t    if (this.element.dataset.dropdown !== 'navigation') {\n\t      this.element.dataset.dropdown = '';\n\t    }\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    /**\n\t     * The handle to release click event listener on document object.\n\t     * @member {Handle}\n\t     */\n\t    this.hDocumentClick = (0, _on2.default)(this.element.ownerDocument, 'click', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t\n\t    this.setCloseOnBlur();\n\t\n\t    this.element.addEventListener('keypress', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t    this.element.addEventListener('click', function (event) {\n\t      var item = (0, _eventMatches2.default)(event, _this.options.selectorItem);\n\t      if (item) {\n\t        _this.select(item);\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates selector of the given element.\n\t   * @param {HTMLElement} element The element working as a selector.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t   * @param {string} [options.eventBeforeSelected]\n\t   *   The name of the custom event fired before a drop down item is selected.\n\t   *   Cancellation of this event stops selection of drop down item.\n\t   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t   */\n\t\n\t\n\t  _createClass(Dropdown, [{\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.hFocusIn) {\n\t        this.hFocusIn = this.hFocusIn.release();\n\t      }\n\t      if (this.hDocumentClick) {\n\t        this.hDocumentClick = this.hDocumentClick.release();\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * Opens and closes the dropdown menu.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle(event) {\n\t      if (event.which === 13 || event.which === 32 || event.type === 'click') {\n\t        var isOfSelf = this.element.contains(event.target);\n\t\n\t        if (isOfSelf) {\n\t          this.element.classList.toggle('bx--dropdown--open');\n\t        } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n\t          this.element.classList.remove('bx--dropdown--open');\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles clicking on the dropdown options, doing the following:\n\t     * * Change Dropdown text to selected option.\n\t     * * Remove selected option from options when selected.\n\t     * * Emit custom events.\n\t     * @param {HTMLElement} itemToSelect The element to be activated.\n\t     */\n\t\n\t  }, {\n\t    key: 'select',\n\t    value: function select(itemToSelect) {\n\t      var _this2 = this;\n\t\n\t      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { item: itemToSelect }\n\t      });\n\t\n\t      if (this.element.dispatchEvent(eventStart)) {\n\t        if (this.element.dataset.dropdownType !== 'navigation') {\n\t          this.element.firstElementChild.innerHTML = itemToSelect.innerHTML;\n\t          itemToSelect.classList.add(this.options.classSelected);\n\t        }\n\t        this.element.dataset.value = itemToSelect.parentElement.dataset.value;\n\t\n\t        [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorItemSelected))).forEach(function (item) {\n\t          if (itemToSelect !== item) {\n\t            item.classList.remove(_this2.options.classSelected);\n\t          }\n\t        });\n\t\n\t        itemToSelect.classList.add(this.options.classSelected);\n\t\n\t        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { item: itemToSelect }\n\t        }));\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Sets an event handler to document for \"close on blur\" behavior.\n\t     */\n\t\n\t  }, {\n\t    key: 'setCloseOnBlur',\n\t    value: function setCloseOnBlur() {\n\t      var _this3 = this;\n\t\n\t      var hasFocusin = 'onfocusin' in window;\n\t      var focusinEventName = hasFocusin ? 'focusin' : 'focus';\n\t      this.hFocusIn = (0, _on2.default)(this.element.ownerDocument, focusinEventName, function (event) {\n\t        if (!_this3.element.contains(event.target)) {\n\t          _this3.element.classList.remove('bx--dropdown--open');\n\t        }\n\t      }, !hasFocusin);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and selector instance.\n\t     * @member Dropdown.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode Dropdown.create .create()}, or {@linkcode Dropdown.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode Dropdown.init .init()} works.\n\t     * @member Dropdown.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find selectors.\n\t     * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t     * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t     * @property {string} [classSelected] The CSS class for the selected dropdown item.\n\t     * @property {string} [eventBeforeSelected]\n\t     *   The name of the custom event fired before a drop down item is selected.\n\t     *   Cancellation of this event stops selection of drop down item.\n\t     * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates selectors in the given node.\n\t     * If the given element indicates that it's an selector, instantiates it.\n\t     * Otherwise, instantiates selectors by searching for selectors in the given node.\n\t     * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS selector to find selectors.\n\t     * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n\t     * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n\t     * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n\t     * @param {string} [options.eventBeforeSelected]\n\t     *   The name of the custom event fired before a drop down item is selected.\n\t     *   Cancellation of this event stops selection of drop down item.\n\t     * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this4 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this4.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Dropdown;\n\t}();\n\t\n\tDropdown.components = new WeakMap();\n\tDropdown.options = {\n\t  selectorInit: '[data-dropdown]',\n\t  selectorItem: '[data-option] > .bx--dropdown__link',\n\t  selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n\t  classSelected: 'bx--dropdown--selected',\n\t  eventBeforeSelected: 'dropdown-beingselected',\n\t  eventAfterSelected: 'dropdown-selected'\n\t};\n\texports.default = Dropdown;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Card = function () {\n\t  /**\n\t   * The container for cards.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a container.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t   */\n\t  function Card(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Card);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t    this.constructor.components.set(this.element, this);\n\t    this.element.addEventListener('keydown', function (event) {\n\t      return _this.cardKeyPress(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates card container of the given element.\n\t   * @param {HTMLElement} element The element working as a container.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t   */\n\t\n\t\n\t  _createClass(Card, [{\n\t    key: 'cardKeyPress',\n\t\n\t\n\t    /**\n\t     * Goes back/forward among cards,\n\t     * right arrow key for going forward, left arrow key for going backward.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function cardKeyPress(event) {\n\t      var direction = {\n\t        Left: -1,\n\t        Right: 1,\n\t        ArrowLeft: -1,\n\t        ArrowRight: 1\n\t      }[event.key || event.keyIdentifier];\n\t      var card = (0, _eventMatches2.default)(event, this.options.selectorCard);\n\t\n\t      if (direction && card && card === document.activeElement) {\n\t        var cards = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorCard)));\n\t        var nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n\t        var nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex : nextIndex - Math.sign(nextIndex) * cards.length;\n\t        cards[nextIndexLooped].focus();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and card list instance.\n\t     * @member Card.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode Card.create .create()}, or {@linkcode Card.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode Card.init .init()} works.\n\t     * @member Card.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find card containers.\n\t     * @property {string} [selectorCard] The CSS selector to find cards.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates card container in the given node.\n\t     * If the given element indicates that it's an card container, instantiates it.\n\t     * Otherwise, instantiates card containers by searching for card containers in the given node.\n\t     * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS selector to find card containers.\n\t     * @param {string} [options.selectorCard] The CSS selector to find cards.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Card;\n\t}();\n\t\n\tCard.components = new WeakMap();\n\tCard.options = {\n\t  selectorInit: '[data-card-list]',\n\t  selectorCard: '.bx--card'\n\t};\n\texports.default = Card;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar NumberInput = function () {\n\t  /**\n\t   * Number input UI.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a number input UI.\n\t   */\n\t  function NumberInput(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, NumberInput);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.options = options;\n\t    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\t\n\t    this.element = element;\n\t    this.constructor.components.set(this.element, this);\n\t    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n\t    // Also <svg> does not seems to have `Element.classList`.\n\t    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates number input UI of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(NumberInput, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Increase/decrease number by clicking on up/down icons.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var state = event.currentTarget.classList;\n\t      var numberInput = this.element.querySelector('.bx--number__input');\n\t\n\t      if (state.contains('bx--number__arrow--up')) {\n\t        if (this.options.ie) {\n\t          ++numberInput.value;\n\t        } else {\n\t          numberInput.stepUp();\n\t        }\n\t      } else if (state.contains('bx--number__arrow--down')) {\n\t        if (this.options.ie) {\n\t          if (numberInput.value > 0) {\n\t            --numberInput.value;\n\t          }\n\t        } else {\n\t          numberInput.stepDown();\n\t        }\n\t      } else {\n\t        return;\n\t      }\n\t\n\t      // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n\t      numberInput.dispatchEvent(new CustomEvent('change', {\n\t        bubbles: true,\n\t        cancelable: false\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and number input UI instance.\n\t     * @member NumberInput.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n\t     * @member NumberInput.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find number input UIs.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates number input UI in the given node.\n\t     * If the given element indicates that it's an number input UI, instantiates it.\n\t     * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n\t     * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {boolean} [options.selectorInit] The CSS selector to find number input UIs.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return NumberInput;\n\t}();\n\t\n\tNumberInput.components = new WeakMap();\n\tNumberInput.options = {\n\t  selectorInit: '[data-numberinput]'\n\t};\n\texports.default = NumberInput;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tvar _resize = __webpack_require__(23);\n\t\n\tvar _resize2 = _interopRequireDefault(_resize);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ResponsiveTable = function () {\n\t  /**\n\t   * Responsive Table\n\t   * @implements components\n\t   * @param {HTMLElement} element The root element of tables\n\t   * @param {Object} [options] the... options\n\t   * @param {string} [options.selectorInit] selector initialization\n\t   * @param {string} [options.selectorExpandCells] css selector for expand\n\t   * @param {string} [options.expandableRow] css selector for expand\n\t   * @param {string} [options.selectorParentRows] css selector for rows housing expansion\n\t   * @param {string} [options.selectorTableBody] root css for table body\n\t   * @param {string} [options.overflowMenu] any overflow menus\n\t   * @param {string} [options.eventTrigger] selector for event bubble capture points\n\t   * @param {string} [options.eventParentContainer] used find the bubble container\n\t   */\n\t  function ResponsiveTable(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, ResponsiveTable);\n\t\n\t    _initialiseProps.call(this);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('Responsive Tables requires a DOM element');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t\n\t    this.container = element.parentNode; // requires the immediate parent to be the container\n\t    this.expandCells = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorExpandCells)));\n\t    this.expandableRows = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorExpandableRows)));\n\t    this.parentRows = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorParentRows)));\n\t    this.tableBody = this.element.querySelector(this.options.selectorTableBody);\n\t\n\t    this.zebraStripe();\n\t    this.initExpandableRows();\n\t    this.initOverflowMenus();\n\t\n\t    this.eventHandlers = {\n\t      expand: this.toggleRowExpand,\n\t      sort: this.toggleSort,\n\t      'select-all': this.toggleSelectAll\n\t    };\n\t\n\t    this.element.addEventListener('click', function (evt) {\n\t      var eventElement = (0, _eventMatches2.default)(evt, _this.options.eventTrigger);\n\t      if (eventElement) {\n\t        _this.emitEvent(eventElement, evt);\n\t      }\n\t    });\n\t\n\t    this.constructor.components.set(this.element, this);\n\t  }\n\t\n\t  /**\n\t   * Create an object to be used in event emission\n\t   */\n\t\n\t\n\t  /**\n\t   * Standardize way to emit events\n\t   */\n\t\n\t\n\t  /**\n\t   * Zebra stripes - done in javascript to handle expandable rows\n\t   */\n\t\n\t\n\t  /**\n\t   * Find all expandable rows and remove them from the DOM\n\t   */\n\t\n\t\n\t  /**\n\t   * Because tables has an overflow-x on it, we need to pop the overflow\n\t   * options outside of the table. This appends to the body and tags a resize\n\t   * listener to reposition when needed\n\t   */\n\t\n\t\n\t  /**\n\t   * When called, finds the position of the icon supplied and positions\n\t   * the menu relative to that\n\t   *\n\t   * Uses fixed because getBoundingClientRect is relative to viewport\n\t   */\n\t\n\t\n\t  /**\n\t   * On trigger, insert the expandable row back in\n\t   */\n\t\n\t\n\t  /**\n\t   * On trigger, flip the sort icon\n\t   */\n\t\n\t\n\t  /**\n\t   * On trigger, check all checkboxes\n\t   */\n\t\n\t\n\t  _createClass(ResponsiveTable, [{\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ResponsiveTable;\n\t}();\n\t\n\tResponsiveTable.components = new WeakMap();\n\tResponsiveTable.options = {\n\t  selectorInit: '[data-responsive-table]',\n\t  selectorExpandCells: '.bx--table-expand',\n\t  selectorExpandableRows: '.bx--expandable-row',\n\t  selectorParentRows: '.bx--parent-row',\n\t  selectorTableBody: '.bx--table-body',\n\t  selectorOverflowMenu: '[data-overflow-menu]',\n\t  selectorCheckbox: '.bx--checkbox',\n\t  selectorOverflowMenuIcon: '.bx--overflow-menu__icon',\n\t  selectorOverflowMenuOptions: '.bx--overflow-menu__options',\n\t  classParentRowEven: 'bx--parent-row--even',\n\t  classExpandableRow: 'bx--expandable-row',\n\t  classExpandableRowEven: 'bx--expandable-row--even',\n\t  classExpandableRowHidden: 'bx--expandable-row--hidden',\n\t  classTableSortAscending: 'bx--table-sort--ascending',\n\t  eventTrigger: '[data-event]',\n\t  eventParentContainer: '[data-parent-row]'\n\t};\n\t\n\tvar _initialiseProps = function _initialiseProps() {\n\t  var _this3 = this;\n\t\n\t  this.getEventDetails = function (element, data, evt) {\n\t    var event = data.event;\n\t\n\t    var label = data.label ? data.label : '';\n\t    var previousValue = data.previousValue ? data.previousValue : '';\n\t    var initialEvt = evt;\n\t\n\t    return {\n\t      element: element,\n\t      event: event,\n\t      label: label,\n\t      previousValue: previousValue,\n\t      initialEvt: initialEvt\n\t    };\n\t  };\n\t\n\t  this.emitEvent = function (element, evt) {\n\t    var detail = _this3.getEventDetails(element, element.dataset, evt);\n\t\n\t    var eventBefore = new CustomEvent('before' + detail.event, {\n\t      bubbles: true,\n\t      cancelable: true,\n\t      detail: detail\n\t    });\n\t\n\t    var eventAfter = new CustomEvent('' + detail.event, {\n\t      bubbles: true,\n\t      cancelable: true,\n\t      detail: detail\n\t    });\n\t\n\t    var canceled = !_this3.element.dispatchEvent(eventBefore);\n\t\n\t    if (!canceled) {\n\t      _this3.eventHandlers[detail.event](detail);\n\t      _this3.element.dispatchEvent(eventAfter);\n\t    }\n\t  };\n\t\n\t  this.zebraStripe = function () {\n\t    _this3.parentRows.forEach(function (item, index) {\n\t      if (index % 2 === 0) {\n\t        item.classList.add(_this3.options.classParentRowEven);\n\t        if (item.nextElementSibling.classList.contains(_this3.options.classExpandableRow)) {\n\t          item.nextElementSibling.classList.add(_this3.options.classExpandableRowEven);\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  this.initExpandableRows = function () {\n\t    _this3.expandableRows.forEach(function (item) {\n\t      item.classList.remove(_this3.options.classExpandableRowHidden);\n\t      _this3.tableBody.removeChild(item);\n\t    });\n\t  };\n\t\n\t  this.initOverflowMenus = function () {\n\t    if (!_this3.element.querySelector(_this3.options.selectorOverflowMenu)) {\n\t      return false;\n\t    }\n\t\n\t    var menuMap = [].concat(_toConsumableArray(_this3.element.querySelectorAll(_this3.options.selectorOverflowMenu))).map(function (menu) {\n\t      return {\n\t        element: menu,\n\t        optionMenu: menu.querySelector(_this3.options.selectorOverflowMenuOptions)\n\t      };\n\t    });\n\t\n\t    _resize2.default.add(function () {\n\t      menuMap.forEach(function (menu) {\n\t        _this3.placeOverflow({\n\t          detail: menu\n\t        });\n\t      });\n\t    });\n\t\n\t    menuMap.forEach(function (menu) {\n\t      document.body.appendChild(menu.optionMenu);\n\t      _this3.placeOverflow({\n\t        detail: menu\n\t      });\n\t    });\n\t  };\n\t\n\t  this.placeOverflow = function (evt) {\n\t    var _evt$detail = evt.detail,\n\t        element = _evt$detail.element,\n\t        optionMenu = _evt$detail.optionMenu;\n\t\n\t\n\t    var icon = element.querySelector(_this3.options.selectorOverflowMenuIcon);\n\t    var position = icon.getBoundingClientRect();\n\t\n\t    optionMenu.style.position = 'fixed';\n\t    optionMenu.style.top = position.top + 'px';\n\t    optionMenu.style.left = position.right + 'px';\n\t    optionMenu.style.right = 'auto';\n\t  };\n\t\n\t  this.toggleRowExpand = function (detail) {\n\t    var element = detail.element;\n\t    var parent = (0, _eventMatches2.default)(detail.initialEvt, _this3.options.eventParentContainer);\n\t\n\t    var index = _this3.expandCells.indexOf(element);\n\t    if (element.dataset.previousValue === undefined || element.dataset.previousValue === 'expanded') {\n\t      element.dataset.previousValue = 'collapsed';\n\t      _this3.tableBody.insertBefore(_this3.expandableRows[index], _this3.parentRows[index + 1]);\n\t    } else {\n\t      _this3.tableBody.removeChild(parent.nextElementSibling);\n\t      element.dataset.previousValue = 'expanded';\n\t    }\n\t  };\n\t\n\t  this.toggleSort = function (detail) {\n\t    var element = detail.element,\n\t        previousValue = detail.previousValue;\n\t\n\t\n\t    if (!previousValue || previousValue === 'descending') {\n\t      element.dataset.previousValue = 'ascending';\n\t      element.classList.add(_this3.options.classTableSortAscending);\n\t    } else {\n\t      element.dataset.previousValue = 'descending';\n\t      element.classList.remove(_this3.options.classTableSortAscending);\n\t    }\n\t  };\n\t\n\t  this.toggleSelectAll = function (detail) {\n\t    var element = detail.element,\n\t        previousValue = detail.previousValue;\n\t\n\t    var inputs = [].concat(_toConsumableArray(_this3.element.querySelectorAll(_this3.options.selectorCheckbox)));\n\t    if (!previousValue || previousValue === 'toggled') {\n\t      inputs.forEach(function (item) {\n\t        return item.checked = true;\n\t      });\n\t      element.dataset.previousValue = 'off';\n\t    } else {\n\t      inputs.forEach(function (item) {\n\t        return item.checked = false;\n\t      });\n\t      element.dataset.previousValue = 'toggled';\n\t    }\n\t  };\n\t};\n\t\n\texports.default = ResponsiveTable;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// mdn resize function\n\t\n\tvar optimizedResize = function optimizedResize() {\n\t  var callbacks = [];\n\t  var running = false;\n\t\n\t  // run the actual callbacks\n\t  function runCallbacks() {\n\t    callbacks.forEach(function (callback) {\n\t      callback();\n\t    });\n\t\n\t    running = false;\n\t  }\n\t\n\t  // fired on resize event\n\t  function resize() {\n\t    if (!running) {\n\t      running = true;\n\t\n\t      if (window.requestAnimationFrame) {\n\t        window.requestAnimationFrame(runCallbacks);\n\t      } else {\n\t        setTimeout(runCallbacks, 66);\n\t      }\n\t    }\n\t  }\n\t\n\t  // adds callback to loop\n\t  function addCallback(callback) {\n\t    if (callback) {\n\t      callbacks.push(callback);\n\t    }\n\t  }\n\t\n\t  return {\n\t    // public method to add additional callback\n\t    add: function add(callback) {\n\t      if (!callbacks.length) {\n\t        window.addEventListener('resize', resize);\n\t      }\n\t      addCallback(callback);\n\t    }\n\t  };\n\t}();\n\t\n\texports.default = optimizedResize;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(3);\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _toggleClass = __webpack_require__(11);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _on = __webpack_require__(8);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Table = function () {\n\t  /**\n\t   * Data table.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a data table.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t   * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t   * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t   * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t   */\n\t  function Table(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Table);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (event) {\n\t      return _this.handleClick(event);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a data table of the given element.\n\t   * @param {HTMLElement} element The element working as a data table.\n\t   * @param {Object} [options] The component options.\n\t   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t   * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t   * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t   * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t   */\n\t\n\t\n\t  _createClass(Table, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Handles click on data table.\n\t     * * If the click is on a column title, toggles its sorting state.\n\t     * * If the click is on a check box, toggles the check box.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      var title = (0, _eventMatches2.default)(event, this.options.selectorTitle);\n\t      var row = (0, _eventMatches2.default)(event, this.options.selectorRow);\n\t      var checkbox = (0, _eventMatches2.default)(event, this.options.selectorCheckbox);\n\t      if (title) {\n\t        this.toggleState('Sort', title);\n\t      }\n\t      if (row && checkbox) {\n\t        this.toggleState('Check', row);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The callback called once toggling is finished or is canceled.\n\t     * @callback Table~toggleStateCallback\n\t     * @param {Error} error\n\t     *   An error object with `true` in its `canceled` property if the toggling is canceled.\n\t     *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n\t     *   calls `.preventDefault()` against the event.\n\t     * @param {HTMLElement} element The toggled element.\n\t     * @param {boolean} newState The new toggle state.\n\t     */\n\t\n\t    /**\n\t     * Toggles a sorting state or a check box's state.\n\t     * @param {string} type\n\t     *   Specifies what state to toggle:\n\t     *   * `\"Sort\"` for toggling a sorting state.\n\t     *   * `\"Check\"` for toggling a check box's state.\n\t     * @param {HTMLElement} element The DOM element to toggle its state.\n\t     * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggleState',\n\t    value: function toggleState(type, element, callback) {\n\t      var newState = !element.classList.contains(this.options['class' + type + 'State']);\n\t      var eventStart = new CustomEvent(this.options['eventBefore' + type + 'Toggled'], {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: { newState: newState }\n\t      });\n\t\n\t      // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n\t      if (element.dispatchEvent(eventStart)) {\n\t        (0, _toggleClass2.default)(element, this.options['class' + type + 'State'], newState);\n\t        // this._changeActive(item);\n\t        element.dispatchEvent(new CustomEvent(this.options['eventAfter' + type + 'Toggled'], {\n\t          bubbles: true,\n\t          cancelable: true,\n\t          detail: { newState: newState }\n\t        }));\n\t        if (callback) {\n\t          callback(null, element, newState);\n\t        }\n\t      } else {\n\t        var error = new Error('Toggling on table has been canceled.');\n\t        error.canceled = true;\n\t        error.element = element;\n\t        error.newState = newState;\n\t        if (callback) {\n\t          callback(error);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and data table instance.\n\t     * @member Table.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode Table.create .create()}, or {@linkcode Table.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode Table.init .init()} works.\n\t     * @member Table.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find data tables.\n\t     * @property {string} [selectorTitle] The CSS selector to find column titles.\n\t     * @property {string} [selectorRow] The CSS selector to find rows.\n\t     * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n\t     * @property {string} [classSortState] The CSS class for the sorting state.\n\t     * @property {string} [classCheckState] The CSS class for the checked state.\n\t     * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t     * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t     * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t     * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Sets up the given node to instantiate data tables in.\n\t     * If the given element indicates that it's an data table, instantiates it.\n\t     * Otherwise, lazily instantiates data table when it's clicked on.\n\t     * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS selector to find data tables.\n\t     * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n\t     * @param {string} [options.selectorRow] The CSS selector to find rows.\n\t     * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n\t     * @param {string} [options.classSortState] The CSS class for the sorting state.\n\t     * @param {string} [options.classCheckState] The CSS class for the checked state.\n\t     * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n\t     * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n\t     * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n\t     * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n\t     * @returns {Handle} The handle to remove the event listener to handle clicking.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        return (0, _on2.default)(target, 'click', function (event) {\n\t          var element = (0, _eventMatches2.default)(event, effectiveOptions.selectorInit);\n\t          if (element && !_this2.components.has(element)) {\n\t            _this2.create(element, effectiveOptions).handleClick(event);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Table;\n\t}();\n\t\n\tTable.components = new WeakMap();\n\tTable.options = {\n\t  selectorInit: '[data-table]',\n\t  selectorTitle: '.bx--table__column-title',\n\t  selectorRow: '.bx--table__row',\n\t  selectorCheckbox: '.bx--checkbox',\n\t  classSortState: 'bx--table__column-title--rotated',\n\t  classCheckState: 'bx--table__row--checked',\n\t  eventBeforeSortToggled: 'table-sort-beingtoggled',\n\t  eventAfterSortToggled: 'table-sort-toggled',\n\t  eventBeforeCheckToggled: 'table-check-beingtoggled',\n\t  eventAfterCheckToggled: 'table-check-toggled'\n\t};\n\texports.default = Table;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _lodash = __webpack_require__(26);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DetailPageHeader = function () {\n\t\n\t  /**\n\t   * The Detail Page Header.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a page header.\n\t   * @param {Object} [options] The component options.\n\t   */\n\t  function DetailPageHeader(element) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, DetailPageHeader);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(this.constructor.options, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    // Debounce scroll event calls to handleScroll\n\t    var debouncedScroll = (0, _lodash2.default)(this.handleScroll.bind(this), 50);\n\t\n\t    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n\t  }\n\t\n\t  /**\n\t   * Instantiates detail page header of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   * @param {Object} [options] The component options.\n\t   */\n\t\n\t\n\t  _createClass(DetailPageHeader, [{\n\t    key: 'handleScroll',\n\t\n\t\n\t    /**\n\t     * Adds class to header based on users position on the page\n\t     */\n\t    value: function handleScroll() {\n\t      if (this.element.ownerDocument.defaultView.scrollY > 101) {\n\t        this.element.classList.add(this.options.slideUp);\n\t      } else {\n\t        this.element.classList.remove(this.options.slideUp);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and detail page header instance.\n\t     * @member DetailPageHeader.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode DetailPageHeader.create .create()}, or {@linkcode DetailPageHeader.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode DetailPageHeader.init .init()} works.\n\t     * @member DetailPageHeader.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find detail page headers.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates the detail page header in the given element.\n\t     * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n\t     * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n\t     * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS selector to find detail page headers.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return DetailPageHeader;\n\t}();\n\t\n\tDetailPageHeader.components = new WeakMap();\n\tDetailPageHeader.options = {\n\t  slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up',\n\t  selectorInit: '[data-detail-page-header]'\n\t};\n\texports.default = DetailPageHeader;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * lodash (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar NAN = 0 / 0;\n\t\n\t/** `Object#toString` result references. */\n\tvar symbolTag = '[object Symbol]';\n\t\n\t/** Used to match leading and trailing whitespace. */\n\tvar reTrim = /^\\s+|\\s+$/g;\n\t\n\t/** Used to detect bad signed hexadecimal string values. */\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t/** Used to detect binary string values. */\n\tvar reIsBinary = /^0b[01]+$/i;\n\t\n\t/** Used to detect octal string values. */\n\tvar reIsOctal = /^0o[0-7]+$/i;\n\t\n\t/** Built-in method references without a dependency on `root`. */\n\tvar freeParseInt = parseInt;\n\t\n\t/** Detect free variable `global` from Node.js. */\n\tvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t/** Detect free variable `self`. */\n\tvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t/** Used as a reference to the global object. */\n\tvar root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max,\n\t    nativeMin = Math.min;\n\t\n\t/**\n\t * Gets the timestamp of the number of milliseconds that have elapsed since\n\t * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Date\n\t * @returns {number} Returns the timestamp.\n\t * @example\n\t *\n\t * _.defer(function(stamp) {\n\t *   console.log(_.now() - stamp);\n\t * }, _.now());\n\t * // => Logs the number of milliseconds it took for the deferred invocation.\n\t */\n\tvar now = function() {\n\t  return root.Date.now();\n\t};\n\t\n\t/**\n\t * Creates a debounced function that delays invoking `func` until after `wait`\n\t * milliseconds have elapsed since the last time the debounced function was\n\t * invoked. The debounced function comes with a `cancel` method to cancel\n\t * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t * Provide `options` to indicate whether `func` should be invoked on the\n\t * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t * with the last arguments provided to the debounced function. Subsequent\n\t * calls to the debounced function return the result of the last `func`\n\t * invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t * invoked on the trailing edge of the timeout only if the debounced function\n\t * is invoked more than once during the `wait` timeout.\n\t *\n\t * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t *\n\t * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t * for details over the differences between `_.debounce` and `_.throttle`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to debounce.\n\t * @param {number} [wait=0] The number of milliseconds to delay.\n\t * @param {Object} [options={}] The options object.\n\t * @param {boolean} [options.leading=false]\n\t *  Specify invoking on the leading edge of the timeout.\n\t * @param {number} [options.maxWait]\n\t *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t * @param {boolean} [options.trailing=true]\n\t *  Specify invoking on the trailing edge of the timeout.\n\t * @returns {Function} Returns the new debounced function.\n\t * @example\n\t *\n\t * // Avoid costly calculations while the window size is in flux.\n\t * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t *\n\t * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t *   'leading': true,\n\t *   'trailing': false\n\t * }));\n\t *\n\t * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t * var source = new EventSource('/stream');\n\t * jQuery(source).on('message', debounced);\n\t *\n\t * // Cancel the trailing debounced invocation.\n\t * jQuery(window).on('popstate', debounced.cancel);\n\t */\n\tfunction debounce(func, wait, options) {\n\t  var lastArgs,\n\t      lastThis,\n\t      maxWait,\n\t      result,\n\t      timerId,\n\t      lastCallTime,\n\t      lastInvokeTime = 0,\n\t      leading = false,\n\t      maxing = false,\n\t      trailing = true;\n\t\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  wait = toNumber(wait) || 0;\n\t  if (isObject(options)) {\n\t    leading = !!options.leading;\n\t    maxing = 'maxWait' in options;\n\t    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\t\n\t  function invokeFunc(time) {\n\t    var args = lastArgs,\n\t        thisArg = lastThis;\n\t\n\t    lastArgs = lastThis = undefined;\n\t    lastInvokeTime = time;\n\t    result = func.apply(thisArg, args);\n\t    return result;\n\t  }\n\t\n\t  function leadingEdge(time) {\n\t    // Reset any `maxWait` timer.\n\t    lastInvokeTime = time;\n\t    // Start the timer for the trailing edge.\n\t    timerId = setTimeout(timerExpired, wait);\n\t    // Invoke the leading edge.\n\t    return leading ? invokeFunc(time) : result;\n\t  }\n\t\n\t  function remainingWait(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime,\n\t        result = wait - timeSinceLastCall;\n\t\n\t    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t  }\n\t\n\t  function shouldInvoke(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t    // Either this is the first call, activity has stopped and we're at the\n\t    // trailing edge, the system time has gone backwards and we're treating\n\t    // it as the trailing edge, or we've hit the `maxWait` limit.\n\t    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t  }\n\t\n\t  function timerExpired() {\n\t    var time = now();\n\t    if (shouldInvoke(time)) {\n\t      return trailingEdge(time);\n\t    }\n\t    // Restart the timer.\n\t    timerId = setTimeout(timerExpired, remainingWait(time));\n\t  }\n\t\n\t  function trailingEdge(time) {\n\t    timerId = undefined;\n\t\n\t    // Only invoke if we have `lastArgs` which means `func` has been\n\t    // debounced at least once.\n\t    if (trailing && lastArgs) {\n\t      return invokeFunc(time);\n\t    }\n\t    lastArgs = lastThis = undefined;\n\t    return result;\n\t  }\n\t\n\t  function cancel() {\n\t    if (timerId !== undefined) {\n\t      clearTimeout(timerId);\n\t    }\n\t    lastInvokeTime = 0;\n\t    lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t  }\n\t\n\t  function flush() {\n\t    return timerId === undefined ? result : trailingEdge(now());\n\t  }\n\t\n\t  function debounced() {\n\t    var time = now(),\n\t        isInvoking = shouldInvoke(time);\n\t\n\t    lastArgs = arguments;\n\t    lastThis = this;\n\t    lastCallTime = time;\n\t\n\t    if (isInvoking) {\n\t      if (timerId === undefined) {\n\t        return leadingEdge(lastCallTime);\n\t      }\n\t      if (maxing) {\n\t        // Handle invocations in a tight loop.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        return invokeFunc(lastCallTime);\n\t      }\n\t    }\n\t    if (timerId === undefined) {\n\t      timerId = setTimeout(timerExpired, wait);\n\t    }\n\t    return result;\n\t  }\n\t  debounced.cancel = cancel;\n\t  debounced.flush = flush;\n\t  return debounced;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Symbol` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t * @example\n\t *\n\t * _.isSymbol(Symbol.iterator);\n\t * // => true\n\t *\n\t * _.isSymbol('abc');\n\t * // => false\n\t */\n\tfunction isSymbol(value) {\n\t  return typeof value == 'symbol' ||\n\t    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t}\n\t\n\t/**\n\t * Converts `value` to a number.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to process.\n\t * @returns {number} Returns the number.\n\t * @example\n\t *\n\t * _.toNumber(3.2);\n\t * // => 3.2\n\t *\n\t * _.toNumber(Number.MIN_VALUE);\n\t * // => 5e-324\n\t *\n\t * _.toNumber(Infinity);\n\t * // => Infinity\n\t *\n\t * _.toNumber('3.2');\n\t * // => 3.2\n\t */\n\tfunction toNumber(value) {\n\t  if (typeof value == 'number') {\n\t    return value;\n\t  }\n\t  if (isSymbol(value)) {\n\t    return NAN;\n\t  }\n\t  if (isObject(value)) {\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t    value = isObject(other) ? (other + '') : other;\n\t  }\n\t  if (typeof value != 'string') {\n\t    return value === 0 ? value : +value;\n\t  }\n\t  value = value.replace(reTrim, '');\n\t  var isBinary = reIsBinary.test(value);\n\t  return (isBinary || reIsOctal.test(value))\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t    : (reIsBadHex.test(value) ? NAN : +value);\n\t}\n\t\n\tmodule.exports = debounce;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tvar _toggleClass = __webpack_require__(11);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tvar _on = __webpack_require__(8);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar LeftNav = function () {\n\t  /**\n\t   * Left Navigation.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a left navigation.\n\t   * @param {Object} [options] The component options\n\t   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n\t   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n\t   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n\t   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n\t   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n\t   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n\t   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n\t   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n\t   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n\t   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n\t   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n\t   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n\t   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n\t   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n\t   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n\t   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n\t   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n\t   */\n\t  function LeftNav(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, LeftNav);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.leftNavSectionActive = false;\n\t\n\t    this.options = Object.assign(this.constructor.options, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.hookOpenActions();\n\t    this.hookListSectionEvents();\n\t    this.hookListItemsEvents();\n\t    this.hDocumentClick = (0, _on2.default)(this.element.ownerDocument, 'click', function (evt) {\n\t      return _this.handleDocumentClick(evt);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a left navigation of the given element.\n\t   * @param {HTMLElement} element The element working as the left navigation.\n\t   * @param {Object} [options] The component options\n\t   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n\t   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n\t   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n\t   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n\t   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n\t   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n\t   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n\t   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n\t   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n\t   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n\t   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n\t   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n\t   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n\t   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n\t   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n\t   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n\t   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n\t   */\n\t\n\t\n\t  _createClass(LeftNav, [{\n\t    key: 'closeMenu',\n\t\n\t\n\t    /**\n\t     * Closes the menu.\n\t     */\n\t    value: function closeMenu() {\n\t      this.element.classList.remove(this.options.classActiveLeftNav);\n\t      this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.remove(this.options.classActiveTrigger);\n\t      this.element.querySelector(this.options.selectorLeftNav).parentNode.setAttribute('aria-expanded', 'false');\n\t    }\n\t\n\t    /**\n\t     * Toggles the menu to open and close.\n\t     */\n\t\n\t  }, {\n\t    key: 'toggleMenu',\n\t    value: function toggleMenu() {\n\t      var leftNavContainer = this.element.querySelector(this.options.selectorLeftNav).parentNode;\n\t      this.element.classList.toggle(this.options.classActiveLeftNav);\n\t      this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.toggle(this.options.classActiveTrigger);\n\t      if (leftNavContainer.getAttribute('aria-expanded') === 'false') leftNavContainer.setAttribute('aria-expanded', 'true');else leftNavContainer.setAttribute('aria-expanded', 'false');\n\t    }\n\t\n\t    /**\n\t     * Adds a transitional animation to the navSection\n\t     */\n\t\n\t  }, {\n\t    key: 'animateNavSection',\n\t    value: function animateNavSection(selectedNav) {\n\t      var _this2 = this;\n\t\n\t      var selectedNavValue = selectedNav.dataset.leftNavSection;\n\t      var selectedNavLink = selectedNav.querySelector(this.options.selectorLeftNavSectionLink);\n\t      var leftNav = this.element.querySelector(this.options.selectorLeftNav);\n\t      var leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n\t\n\t      selectedNav.classList.remove(this.options.classNavSection);\n\t      selectedNav.classList.remove(this.options.classNavSection + '--' + selectedNavValue);\n\t      selectedNav.classList.add(this.options.classNavSectionTransition);\n\t      if (leftNavSections.children[0] === selectedNav) selectedNav.classList.add(this.options.classNavSectionTransition + '--50'); // First child only move 50px\n\t      else selectedNav.classList.add(this.options.classNavSectionTransition + '--100'); // Second move 100px\n\t      selectedNav.setAttribute('data-left-nav-section', selectedNavValue);\n\t      /* Not sure what trick more performant*/\n\t      setTimeout(function () {\n\t        selectedNav.classList.add(_this2.options.classNavSectionTransition + '--0');\n\t      }, 100); // Could probably use a promise here\n\t\n\t      selectedNavLink.classList.remove(this.options.classNavSectionLink);\n\t      selectedNavLink.classList.add(this.options.classNavHeaderTitle);\n\t      selectedNavLink.setAttribute('data-left-nav-current-section-title', '');\n\t      selectedNavLink.removeAttribute('data-left-nav-section-link');\n\t\n\t      this.element.insertBefore(selectedNav, leftNav);\n\t    }\n\t\n\t    /**\n\t     * Adds a transitional animation to the navigation items on nav section click\n\t     */\n\t\n\t  }, {\n\t    key: 'animateNavList',\n\t    value: function animateNavList(selectedNavTitle) {\n\t      var _this3 = this;\n\t\n\t      var currentLeftNavList = this.element.querySelector(this.options.selectorLeftNavList + ':not(.bx--left-nav__main-nav--hidden)');\n\t      var newLeftNavList = this.element.querySelector('[data-left-nav-list=' + selectedNavTitle + ']');\n\t      var currentLeftNavItems = [].concat(_toConsumableArray(currentLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem))).reverse();\n\t      var newLeftNavItems = [].concat(_toConsumableArray(newLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)));\n\t\n\t      var fadeOutTime = 300;\n\t      var counter = 0;\n\t      var counterIteration = fadeOutTime / currentLeftNavItems.length; // Length of animation divided by number of items\n\t      currentLeftNavItems.forEach(function (item) {\n\t        item.setAttribute('tabIndex', '-1');\n\t        setTimeout(function () {\n\t          item.classList.add(_this3.options.classItemFade);\n\t        }, counter);\n\t        counter += counterIteration;\n\t      });\n\t\n\t      newLeftNavItems.forEach(function (item) {\n\t        item.setAttribute('tabIndex', '0');\n\t        item.classList.remove(_this3.options.classItemFade);\n\t      });\n\t\n\t      setTimeout(function () {\n\t        currentLeftNavList.classList.add(_this3.options.classListHidden);\n\t        currentLeftNavList.classList.add(_this3.options.classListTop);\n\t        currentLeftNavList.setAttribute('aria-hidden', 'true');\n\t        newLeftNavList.classList.remove(_this3.options.classListHidden);\n\t        setTimeout(function () {\n\t          newLeftNavList.classList.remove(_this3.options.classListTop);\n\t        }, 100);\n\t        newLeftNavList.setAttribute('aria-hidden', 'false');\n\t      }, fadeOutTime + 100); // Wait for items to fade out.\n\t    }\n\t  }, {\n\t    key: 'hookOpenActions',\n\t    value: function hookOpenActions() {\n\t      var _this4 = this;\n\t\n\t      var openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n\t      var closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n\t\n\t      openBtn.addEventListener('click', function () {\n\t        _this4.element.tabIndex = '0';\n\t        _this4.toggleMenu();\n\t      });\n\t\n\t      openBtn.addEventListener('keydown', function (evt) {\n\t        if (evt.which === 13) {\n\t          _this4.element.tabIndex = '0';\n\t          _this4.toggleMenu();\n\t        }\n\t      });\n\t\n\t      if (closeBtn) {\n\t        closeBtn.addEventListener('click', function () {\n\t          _this4.element.tabIndex = '-1';\n\t          _this4.closeMenu();\n\t        });\n\t\n\t        closeBtn.addEventListener('keydown', function (evt) {\n\t          if (evt.which === 13) {\n\t            _this4.element.tabIndex = '-1';\n\t            _this4.closeMenu();\n\t          }\n\t        });\n\t      }\n\t\n\t      this.element.ownerDocument.addEventListener('keydown', function (evt) {\n\t        if (evt.which === 27 && _this4.element.classList.contains(_this4.options.classActiveLeftNav)) {\n\t          _this4.closeMenu();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Addes Event listeners to list sections\n\t     */\n\t\n\t  }, {\n\t    key: 'hookListSectionEvents',\n\t    value: function hookListSectionEvents() {\n\t      var _this5 = this;\n\t\n\t      var leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n\t      leftNavSections.addEventListener('click', function (evt) {\n\t        _this5.handleSectionItemClick(evt, leftNavSections);\n\t      });\n\t\n\t      leftNavSections.addEventListener('keydown', function (evt) {\n\t        if (evt.which === 13) {\n\t          _this5.handleSectionItemClick(evt, leftNavSections);\n\t          _this5.element.querySelector(_this5.options.selectorLeftNavCurrentSectionTitle).focus();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds event listeners to list items\n\t     */\n\t\n\t  }, {\n\t    key: 'hookListItemsEvents',\n\t    value: function hookListItemsEvents() {\n\t      var _this6 = this;\n\t\n\t      var leftNavList = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavList)));\n\t      leftNavList.forEach(function (list) {\n\t        list.addEventListener('click', function (evt) {\n\t          var leftNavItem = (0, _eventMatches2.default)(evt, _this6.options.selectorLeftNavListItem);\n\t          if (leftNavItem) {\n\t            var childItem = (0, _eventMatches2.default)(evt, _this6.options.selectorLeftNavNestedListItem);\n\t            var hasChildren = (0, _eventMatches2.default)(evt, _this6.options.selectorLeftNavListItemHasChildren);\n\t            var flyoutItem = (0, _eventMatches2.default)(evt, _this6.options.selectorLeftNavFlyoutItem);\n\t            if (flyoutItem) {\n\t              _this6.addActiveListItem(flyoutItem);\n\t            } else if (childItem) {\n\t              if (childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu)) {\n\t                var flyoutMenu = childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu);\n\t                flyoutMenu.classList.toggle(_this6.options.classFlyoutDisplayed);\n\t              } else {\n\t                _this6.addActiveListItem(childItem);\n\t              }\n\t            } else if (hasChildren) {\n\t              _this6.handleNestedListClick(leftNavItem);\n\t            } else {\n\t              _this6.addActiveListItem(leftNavItem);\n\t            }\n\t          }\n\t        });\n\t        list.addEventListener('keydown', function (evt) {\n\t          if (evt.which === 13) {\n\t            var leftNavItem = (0, _eventMatches2.default)(evt, _this6.options.selectorLeftNavListItem);\n\t            if (leftNavItem) {\n\t              var childItem = (0, _eventMatches2.default)(evt, _this6.options.selectorLeftNavNestedListItem);\n\t              var hasChildren = (0, _eventMatches2.default)(evt, _this6.options.selectorLeftNavListItemHasChildren);\n\t              var flyoutItem = (0, _eventMatches2.default)(evt, _this6.options.selectorLeftNavFlyoutItem);\n\t              if (flyoutItem) {\n\t                _this6.addActiveListItem(flyoutItem);\n\t              } else if (childItem) {\n\t                if (!childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu)) {\n\t                  _this6.addActiveListItem(childItem);\n\t                } else {\n\t                  childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n\t                  childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu).style.top = childItem.offsetTop - _this6.element.querySelector(_this6.options.selectorLeftNav).scrollTop + 'px';\n\t                  childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu).style.left = childItem.offsetLeft + Math.round(childItem.offsetWidth) + 'px';\n\t                }\n\t              } else if (hasChildren) {\n\t                _this6.handleNestedListClick(leftNavItem);\n\t              } else {\n\t                _this6.addActiveListItem(leftNavItem);\n\t              }\n\t            }\n\t          }\n\t        });\n\t      });\n\t      var flyouts = [].concat(_toConsumableArray(this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout)));\n\t      flyouts.forEach(function (flyout) {\n\t        flyout.addEventListener('mouseenter', function () {\n\t          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n\t          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).style.top = flyout.offsetTop - _this6.element.querySelector(_this6.options.selectorLeftNav).scrollTop + 'px';\n\t          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).style.left = flyout.offsetLeft + Math.round(flyout.offsetWidth) + 'px';\n\t          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).classList.toggle(_this6.options.classFlyoutDisplayed);\n\t        });\n\t        flyout.addEventListener('mouseleave', function () {\n\t          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'true');\n\t          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).classList.remove(_this6.options.classFlyoutDisplayed);\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Hides all flyout menus.\n\t     */\n\t\n\t  }, {\n\t    key: 'hideAllFlyoutMenus',\n\t    value: function hideAllFlyoutMenus() {\n\t      var _this7 = this;\n\t\n\t      var flyoutMenus = [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu)));\n\t      flyoutMenus.forEach(function (menu) {\n\t        menu.setAttribute('aria-hidden', 'true');\n\t        menu.classList.remove(_this7.options.classFlyoutDisplayed);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Sets a list item as active.\n\t     * @param {Object} item The active list item.\n\t     */\n\t\n\t  }, {\n\t    key: 'addActiveListItem',\n\t    value: function addActiveListItem(item) {\n\t      var _this8 = this;\n\t\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavAllListItems))).forEach(function (currentItem) {\n\t        if (!(item === currentItem)) {\n\t          if (!currentItem.contains(item)) {\n\t            currentItem.classList.remove(_this8.options.classActiveLeftNavListItem);\n\t          } else {\n\t            currentItem.classList.add(_this8.options.classActiveLeftNavListItem);\n\t          }\n\t        }\n\t      });\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem))).forEach(function (currentItem) {\n\t        if (!(item === currentItem)) {\n\t          currentItem.classList.remove(_this8.options.classActiveLeftNavListItem);\n\t        }\n\t      });\n\t      item.classList.add(this.options.classActiveLeftNavListItem);\n\t      this.closeMenu();\n\t      this.hideAllFlyoutMenus();\n\t      this.closeMenu();\n\t    }\n\t\n\t    /**\n\t     * Handles click on the document.\n\t     * Closes the left navigation when document is clicked outside the left navigation.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleDocumentClick',\n\t    value: function handleDocumentClick(evt) {\n\t      var clickTarget = evt.target;\n\t      var isOfSelf = this.element.contains(clickTarget);\n\t      var isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n\t      var isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n\t      var isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n\t      var shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n\t      var flyoutOpen = void 0;\n\t      if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n\t        flyoutOpen = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.contains(this.options.classFlyoutDisplayed);\n\t      }\n\t      if (isOfSelf && this.element.tagName === 'A') {\n\t        evt.preventDefault();\n\t      }\n\t      if (shouldClose) {\n\t        this.closeMenu();\n\t      }\n\t      if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n\t        if (flyoutOpen && !isOfSelf && isOpen) {\n\t          this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles click on a list item that contains a nested list in the left navigation.\n\t     * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n\t     * @param {HTMLElement} listItem The list item that was clicked.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleNestedListClick',\n\t    value: function handleNestedListClick(listItem) {\n\t      var _this9 = this;\n\t\n\t      var isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n\t      this.hideAllFlyoutMenus();\n\t      (0, _toggleClass2.default)(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n\t      var listItems = [].concat(_toConsumableArray(listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem)));\n\t      listItems.forEach(function (item) {\n\t        if (isOpen) {\n\t          listItem.querySelector(_this9.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'true');\n\t          item.querySelector(_this9.options.selectorLeftNavListItemLink).tabIndex = -1;\n\t        } else {\n\t          listItem.querySelector(_this9.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'false');\n\t          item.querySelector(_this9.options.selectorLeftNavListItemLink).tabIndex = 0;\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'handleSectionItemClick',\n\t    value: function handleSectionItemClick(evt, leftNavSections) {\n\t      var _this10 = this;\n\t\n\t      // Sorry\n\t      var leftNavSectionItem = (0, _eventMatches2.default)(evt, this.options.selectorLeftNavSection);\n\t      if (leftNavSectionItem) {\n\t        var _ret = function () {\n\t          // currently selected\n\t          var selectedLeftNavSectionItem = _this10.element.querySelector(_this10.options.selectorLeftNavCurrentSection);\n\t          var selectedLeftNavSectionItemTitle = selectedLeftNavSectionItem.querySelector(_this10.options.selectorLeftNavCurrentSectionTitle);\n\t          var selectedLeftNavSectionItemIcon = _this10.element.querySelector(_this10.options.selectorLeftNavCurrentSectionIcon);\n\t          var selectedLeftNavSectionItemUse = selectedLeftNavSectionItemIcon.querySelector('use');\n\t          var selectedLeftNavSectionValue = selectedLeftNavSectionItem.dataset.leftNavCurrentSection;\n\t\n\t          // clicked on item\n\t          var leftNavSectionItemLink = leftNavSectionItem.querySelector(_this10.options.selectorLeftNavSectionLink);\n\t          var leftNavSectionItemIcon = leftNavSectionItem.querySelector(_this10.options.selectorLeftNavSectionIcon);\n\t          var leftNavSectionItemIconUse = leftNavSectionItemIcon.querySelector('use');\n\t          var leftNavSectionValue = leftNavSectionItem.dataset.leftNavSection;\n\t\n\t          if (_this10.leftNavSectionActive) {\n\t            return {\n\t              v: void 0\n\t            };\n\t          }\n\t          _this10.leftNavSectionActive = true;\n\t\n\t          var newLeftNavSectionItem = document.createElement('li');\n\t          newLeftNavSectionItem.setAttribute('data-left-nav-section', selectedLeftNavSectionValue);\n\t          newLeftNavSectionItem.classList.add(_this10.options.classNavSection);\n\t          newLeftNavSectionItem.classList.add(_this10.options.classNavSection + '--' + selectedLeftNavSectionValue);\n\t\n\t          var newLeftNavSectionItemAnchor = document.createElement('a');\n\t          newLeftNavSectionItemAnchor.setAttribute('href', 'javascript:void(0)'); // eslint-disable-line no-script-url\n\t          newLeftNavSectionItemAnchor.setAttribute('tabindex', 0);\n\t          newLeftNavSectionItemAnchor.classList.add(_this10.options.classNavSectionAnchor);\n\t\n\t          var newLeftNavSectionItemIcon = selectedLeftNavSectionItemIcon.cloneNode(true);\n\t          // IE11 doesn't support classList on SVG, must revert to className\n\t          newLeftNavSectionItemIcon.setAttribute('class', 'bx--left-nav__section--taxonomy-icon');\n\t          newLeftNavSectionItemIcon.removeAttribute('data-left-nav-current-section-icon');\n\t          newLeftNavSectionItemIcon.setAttribute('data-left-nav-section-icon', selectedLeftNavSectionValue);\n\t\n\t          var newLeftNavSectionItemLink = document.createElement('span');\n\t          newLeftNavSectionItemLink.setAttribute('data-left-nav-section-link', '');\n\t          newLeftNavSectionItemLink.classList.add(_this10.options.classNavSectionLink);\n\t          newLeftNavSectionItemLink.textContent = selectedLeftNavSectionItemTitle.textContent;\n\t\n\t          _this10.animateNavSection(leftNavSectionItem);\n\t          _this10.animateNavList(leftNavSectionValue);\n\t\n\t          newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemIcon);\n\t          newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemLink);\n\t          newLeftNavSectionItem.appendChild(newLeftNavSectionItemAnchor);\n\t          leftNavSections.insertBefore(newLeftNavSectionItem, leftNavSections.firstChild);\n\t\n\t          setTimeout(function () {\n\t            selectedLeftNavSectionItemTitle.textContent = leftNavSectionItemLink.textContent;\n\t            selectedLeftNavSectionItem.setAttribute('data-left-nav-current-section', leftNavSectionValue);\n\t            selectedLeftNavSectionItemIcon.setAttribute('data-left-nav-current-section-icon', leftNavSectionValue);\n\t            selectedLeftNavSectionItemUse.setAttribute('xlink:href', leftNavSectionItemIconUse.getAttribute('xlink:href'));\n\t\n\t            leftNavSectionItem.parentNode.removeChild(leftNavSectionItem); // Cant use .remove() because of IE11\n\t            _this10.leftNavSectionActive = false;\n\t          }, 450); // Wait for nav items to animate\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.hDocumentClick) {\n\t        this.hDocumentClick = this.hDocumentClick.release();\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode LeftNav.create .create()}, or {@linkcode LeftNav.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode LeftNav.init .init()} works.\n\t     * @member LeftNav.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find left nav containers.\n\t     * @property {string} [selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n\t     * @property {string} [selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n\t     * @property {string} [selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n\t     * @property {string} [selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n\t     * @property {string} [selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n\t     * @property {string} [selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n\t     * @property {string} [selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n\t     * @property {string} [selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n\t     * @property {string} [selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n\t     * @property {string} [selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n\t     * @property {string} [selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n\t     * @property {string} [classActiveLeftNav] The class name for when a left nav is active.\n\t     * @property {string} [classActiveLeftNavListItem] The class name for when a left nav list item is active.\n\t     * @property {string} [classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n\t     * @property {string} [classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n\t     * @property {string} [classActiveSection] The class name for an active section item in the left nav header.\n\t     * @property {string} [classItemHasChildren] The class name for when a list item has children.\n\t     */\n\t\n\t\n\t    /**\n\t     * The map associating DOM element and left navigation instance.\n\t     * @member LeftNav.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates a left navigation in the given node.\n\t     * If the given element indicates that it's a left navigation (having `data-left-nav-container` attribute), instantiates it.\n\t     * Otherwise, instantiates left navigation by searching for left navigation in the given node.\n\t     * @param {Node} target The DOM node to instantiate left navigation in. Should be a document or an element.\n\t     * @param {Object} [options] The component options\n\t     * @param {string} [options.selectorInit] The CSS selector to find left nav containers.\n\t     * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n\t     * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n\t     * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n\t     * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n\t     * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n\t     * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n\t     * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n\t     * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n\t     * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n\t     * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n\t     * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n\t     * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n\t     * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n\t     * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n\t     * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n\t     * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n\t     * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this11 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this11.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return LeftNav;\n\t}();\n\t\n\tLeftNav.options = {\n\t  selectorInit: '[data-left-nav-container]',\n\t  // Data Attribute selectors\n\t  selectorLeftNav: '[data-left-nav]',\n\t  selectorLeftNavList: '[data-left-nav-list]',\n\t  selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n\t  selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n\t  selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n\t  selectorLeftNavListItem: '[data-left-nav-item]',\n\t  selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n\t  selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n\t  selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n\t  selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n\t  selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n\t  selectorLeftNavSections: '[data-left-nav-sections]',\n\t  selectorLeftNavSection: '[data-left-nav-section]',\n\t  selectorLeftNavSectionLink: '[data-left-nav-section-link]',\n\t  selectorLeftNavSectionIcon: '[data-left-nav-section-icon]',\n\t  selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n\t  selectorLeftNavCurrentSectionTitle: '[data-left-nav-current-section-title]',\n\t  selectorLeftNavCurrentSectionIcon: '[data-left-nav-current-section-icon]',\n\t  selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n\t  selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n\t  selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n\t  // CSS Class Selectors\n\t  classActiveTrigger: 'bx--left-nav__trigger--active',\n\t  classActiveLeftNav: 'bx--left-nav--active',\n\t  classActiveLeftNavListItem: 'bx--active-list-item',\n\t  classExpandedLeftNavListItem: 'bx--main-nav__parent-item--expanded',\n\t  classFlyoutDisplayed: 'bx--nested-list__flyout-menu--displayed',\n\t  classItemHasChildren: 'bx--main-nav__parent-item--has-children',\n\t  classNavSection: 'bx--left-nav__section',\n\t  classNavSectionTransition: 'bx--left-nav__section--transition',\n\t  classNavSectionAnchor: 'bx--left-nav__section--anchor',\n\t  classNavSectionLink: 'bx--left-nav__section--link',\n\t  classNavHeaderTitle: 'bx--left-nav__header--title',\n\t  classItemFade: 'bx--main-nav__parent-item--fade',\n\t  classItemHidden: 'bx--main-nav__parent-item--hidden',\n\t  classListHidden: 'bx--left-nav__main-nav--hidden',\n\t  classListTop: 'bx--left-nav__main-nav--top'\n\t};\n\tLeftNav.components = new WeakMap();\n\texports.default = LeftNav;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UnifiedHeader = function () {\n\t  function UnifiedHeader(element) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, UnifiedHeader);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(this.constructor.options, options);\n\t    this.constructor.components.set(this.element, this);\n\t  }\n\t\n\t  _createClass(UnifiedHeader, [{\n\t    key: 'release',\n\t    value: function release() {\n\t      var _this = this;\n\t\n\t      if (this.handleDocumentClick) {\n\t        this.element.ownerDocument.removeEventListener('click', function (evt) {\n\t          return _this.handleDocumentClick(evt);\n\t        });\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and left navigation instance.\n\t     * @member UnifiedHeader.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode UnifiedHeader.create .create()}, or {@linkcode UnifiedHeader.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode UnifiedHeader.init .init()} works.\n\t     * @member UnifiedHeader.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find unified headers.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return UnifiedHeader;\n\t}();\n\t\n\tUnifiedHeader.components = new WeakMap();\n\tUnifiedHeader.options = {\n\t  selectorInit: '[data-unified-header]'\n\t};\n\texports.default = UnifiedHeader;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tvar _toggleClass = __webpack_require__(11);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tvar _eventMatches = __webpack_require__(7);\n\t\n\tvar _eventMatches2 = _interopRequireDefault(_eventMatches);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar InlineLeftNav = function () {\n\t  /**\n\t   * Spinner indicating loading state.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a spinner.\n\t   * @param {Object} options The component options.\n\t   */\n\t  function InlineLeftNav(element) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, InlineLeftNav);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.options = Object.assign(this.constructor.options, options);\n\t\n\t    this.element = element;\n\t\n\t    this.constructor.components.set(this.element, this);\n\t    this.hookListItemsEvents();\n\t  }\n\t\n\t  /**\n\t   * Instantiates spinner of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(InlineLeftNav, [{\n\t    key: 'hookListItemsEvents',\n\t    value: function hookListItemsEvents() {\n\t      var _this = this;\n\t\n\t      var leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n\t      leftNavList.addEventListener('click', function (evt) {\n\t        var leftNavItem = (0, _eventMatches2.default)(evt, _this.options.selectorLeftNavListItem);\n\t        if (leftNavItem) {\n\t          var childItem = (0, _eventMatches2.default)(evt, _this.options.selectorLeftNavNestedListItem);\n\t          var hasChildren = leftNavItem.classList.contains('left-nav-list__item--has-children');\n\t          if (childItem) {\n\t            _this.addActiveListItem(childItem);\n\t          } else if (hasChildren) {\n\t            _this.handleNestedListClick(leftNavItem, evt);\n\t          } else {\n\t            _this.addActiveListItem(leftNavItem);\n\t          }\n\t        }\n\t      });\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavListItem))).forEach(function (item) {\n\t        item.addEventListener('keydown', function (evt) {\n\t          var leftNavItemWithChildren = (0, _eventMatches2.default)(evt, _this.options.selectorLeftNavListItemHasChildren);\n\t          if (leftNavItemWithChildren && evt.which === 13) {\n\t            _this.handleNestedListClick(leftNavItemWithChildren, evt);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addActiveListItem',\n\t    value: function addActiveListItem(item) {\n\t      var _this2 = this;\n\t\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavListItem))).forEach(function (currentItem) {\n\t        if (!(item === currentItem)) {\n\t          currentItem.classList.remove(_this2.options.classActiveLeftNavListItem);\n\t        }\n\t      });\n\t      [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem))).forEach(function (currentItem) {\n\t        if (!(item === currentItem)) {\n\t          currentItem.classList.remove(_this2.options.classActiveLeftNavListItem);\n\t        }\n\t      });\n\t      item.classList.add(this.options.classActiveLeftNavListItem);\n\t    }\n\t\n\t    /**\n\t     * Handles click on a list item that contains a nested list in the left navigation.\n\t     * The nested list is expanded and the icon is rotated.\n\t     * @param {HTMLElement} listItem The list item that was clicked.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleNestedListClick',\n\t    value: function handleNestedListClick(listItem, evt) {\n\t      var _this3 = this;\n\t\n\t      var isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n\t      if (!('leftNavItemLink' in evt.target.dataset)) {\n\t        (0, _toggleClass2.default)(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n\t      }\n\t      var list = listItem.querySelector(this.options.selectorLeftNavNestedList);\n\t      var listItems = [].concat(_toConsumableArray(list.querySelectorAll(this.options.selectorLeftNavNestedListItem)));\n\t      listItems.forEach(function (item) {\n\t        if (isOpen) {\n\t          item.querySelector(_this3.options.selectorLeftNavListItemLink).tabIndex = -1;\n\t        } else {\n\t          item.querySelector(_this3.options.selectorLeftNavListItemLink).tabIndex = 0;\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and spinner instance.\n\t     * @member InlineLeftNav.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode InlineLeftNav.create .create()}, or {@linkcode InlineLeftNav.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode InlineLeftNav.init .init()} works.\n\t     * @member InlineLeftNav.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find inline left navs.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates spinner in the given node.\n\t     * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n\t     * Otherwise, instantiates spinners by searching for spinners in the given node.\n\t     * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {string} [options.selectorInit] The CSS selector to find inline left navs.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this4 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this4.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return InlineLeftNav;\n\t}();\n\t\n\tInlineLeftNav.components = new WeakMap();\n\tInlineLeftNav.options = {\n\t  selectorInit: '[data-inline-left-nav]',\n\t  // Data Attribute selectors\n\t  selectorLeftNavList: '[data-inline-left-nav-list]',\n\t  selectorLeftNavNestedList: '[data-inline-left-nav-nested-list]',\n\t  selectorLeftNavListItem: '[data-inline-left-nav-item]',\n\t  selectorLeftNavListItemLink: '[data-inline-left-nav-item-link]',\n\t  selectorLeftNavNestedListItem: '[data-inline-left-nav-nested-item]',\n\t  selectorLeftNavListItemHasChildren: '[data-inline-left-nav-with-children]',\n\t  // CSS Class Selectors\n\t  classActiveLeftNavListItem: 'left-nav-list__item--active',\n\t  classExpandedLeftNavListItem: 'left-nav-list__item--expanded'\n\t};\n\texports.default = InlineLeftNav;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tvar _on = __webpack_require__(8);\n\t\n\tvar _on2 = _interopRequireDefault(_on);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ProfileSwitcher = function () {\n\t  /**\n\t   * Profile Switcher.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a profile switcher.\n\t   * @param {Object} [options] The component options\n\t   * @param {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n\t   * @param {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n\t   * @param {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n\t   * @param {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n\t   * @param {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n\t   * @param {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n\t   * @param {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n\t   */\n\t  function ProfileSwitcher(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, ProfileSwitcher);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(this.constructor.options, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.hDocumentClick = (0, _on2.default)(this.element.ownerDocument, 'click', function (evt) {\n\t      return _this.handleDocumentClick(evt);\n\t    });\n\t\n\t    this.element.addEventListener('dropdown-beingselected', function (event) {\n\t      if (event.target.querySelector(_this.options.selectorAccountDropdown) !== null) {\n\t        if (event.detail.item.querySelector(_this.options.classLinkedIcon) !== null) {\n\t          _this.element.linkedAccount = event.detail.item.querySelector(_this.options.selectorAccountSlLinked).cloneNode(true);\n\t          _this.element.isLinked = true;\n\t          _this.element.linkedIcon = event.detail.item.querySelector(_this.options.classLinkedIcon).cloneNode(true);\n\t        } else {\n\t          _this.element.linkedAccount = '';\n\t          _this.element.isLinked = false;\n\t          _this.element.linkedIcon = '';\n\t        }\n\t      }\n\t    });\n\t\n\t    this.element.querySelector(this.options.selectorToggle).addEventListener('keydown', function (event) {\n\t      return _this.toggle(event);\n\t    });\n\t\n\t    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseenter', function (event) {\n\t      _this.getLinkedData(event);\n\t      _this.determineSwitcherValues(true);\n\t    });\n\t\n\t    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseleave', function (event) {\n\t      _this.getLinkedData(event);\n\t      _this.determineSwitcherValues(false);\n\t    });\n\t\n\t    this.element.ownerDocument.addEventListener('keyup', function () {\n\t      return _this.handleBlur();\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a profile switcher of the given element.\n\t   * @param {HTMLElement} element The element working as the profile switcher.\n\t   * @param {Object} [options] The component options\n\t   */\n\t\n\t\n\t  _createClass(ProfileSwitcher, [{\n\t    key: 'toggle',\n\t\n\t\n\t    /**\n\t     * Opens and closes the menu.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function toggle(event) {\n\t      var isOfSelf = this.element.contains(event.target);\n\t      if (event.which === 13 || event.which === 32) {\n\t        if (isOfSelf) {\n\t          this.element.classList.toggle(this.options.classSwitcherOpen);\n\t        } else if (!isOfSelf && this.element.classList.contains(this.options.classSwitcherOpen)) {\n\t          this.element.classList.remove(this.options.classSwitcherOpen);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getLinkedData',\n\t    value: function getLinkedData(event) {\n\t      if (event.target.querySelector(this.options.selectorLinkedAccount) !== null) {\n\t        if (event.target.querySelector(this.options.selectorLinkedAccount).textContent.length > 1) {\n\t          this.element.isLinked = true;\n\t        } else {\n\t          this.element.isLinked = false;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleBlur',\n\t    value: function handleBlur() {\n\t      if (!this.element.contains(document.activeElement)) {\n\t        this.element.classList.remove(this.options.classSwitcherOpen);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles click on the document.\n\t     * Closes the profile switcherwhen document is clicked outside the left navigation or\n\t     * the user clicks the profile switcher while it is open.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t\n\t  }, {\n\t    key: 'handleDocumentClick',\n\t    value: function handleDocumentClick(evt) {\n\t      var clickTarget = evt.target;\n\t      var isOfSelf = this.element.contains(clickTarget);\n\t      var isToggle = this.element.ownerDocument.querySelector(this.options.selectorToggle).contains(clickTarget);\n\t      var isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\t\n\t      if (isOfSelf) {\n\t        if (isToggle && isOpen) {\n\t          this.element.classList.remove(this.options.classSwitcherOpen);\n\t        } else if (isOpen) {\n\t          this.determineSwitcherValues();\n\t        } else {\n\t          this.element.classList.add(this.options.classSwitcherOpen);\n\t        }\n\t      } else {\n\t        this.element.classList.remove(this.options.classSwitcherOpen);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Handles logic to determine what text to display in profile switcher.\n\t     * If the text is over 25 characters long, truncate and add ellipses.\n\t     * Also adds logic to change the switcher width based on the width of the hovered\n\t     * profile switcher\n\t     * @param {boolean} isHovered boolean value passed by the event listener on bx--toggle.\n\t     */\n\t\n\t  }, {\n\t    key: 'determineSwitcherValues',\n\t    value: function determineSwitcherValues(isHovered) {\n\t      var linkedElement = this.element.querySelector(this.options.selectorLinkedAccount);\n\t      var nameElement = this.element.querySelector(this.options.selectorAccount);\n\t      var regionElement = this.element.querySelector(this.options.selectorRegion);\n\t      var orgElement = this.element.querySelector(this.options.selectorOrg);\n\t      var spaceElement = this.element.querySelector(this.options.selectorSpace);\n\t      var menuElement = this.element.querySelector(this.options.selectorMenu);\n\t      var isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\t\n\t      if (linkedElement) {\n\t        if (this.element.isLinked) {\n\t          if (this.element.linkedAccount) {\n\t            linkedElement.appendChild(this.element.linkedAccount);\n\t          }\n\t          if (this.element.linkedIcon) {\n\t            linkedElement.appendChild(this.element.linkedIcon);\n\t          }\n\t        } else {\n\t          linkedElement.textContent = '';\n\t        }\n\t      }\n\t\n\t      var nameDropdownValue = '';\n\t      if (this.element.querySelector(this.options.selectorAccountDropdown)) {\n\t        if (this.element.isLinked) {\n\t          nameDropdownValue = this.element.querySelector(this.options.selectorAccountLinked).textContent;\n\t        } else {\n\t          nameDropdownValue = this.element.querySelector(this.options.selectorAccountDropdown).textContent;\n\t        }\n\t      }\n\t\n\t      var regionDropdownValue = '';\n\t      if (this.element.querySelector(this.options.selectorRegionDropdown)) {\n\t        regionDropdownValue = this.element.querySelector(this.options.selectorRegionDropdown).textContent;\n\t      }\n\t\n\t      var orgDropdownValue = '';\n\t      if (this.element.querySelector(this.options.selectorOrgDropdown)) {\n\t        orgDropdownValue = this.element.querySelector(this.options.selectorOrgDropdown).textContent;\n\t      }\n\t\n\t      var spaceDropdownValue = '';\n\t      if (this.element.querySelector(this.options.selectorSpaceDropdown)) {\n\t        spaceDropdownValue = this.element.querySelector(this.options.selectorSpaceDropdown).textContent;\n\t      }\n\t\n\t      var nameShort = void 0;\n\t      var orgShort = void 0;\n\t      var spaceShort = void 0;\n\t\n\t      if (isHovered && !isOpen) {\n\t        nameElement.textContent = nameDropdownValue;\n\t        orgElement.textContent = orgDropdownValue;\n\t        spaceElement.textContent = spaceDropdownValue;\n\t        regionElement.textContent = regionDropdownValue;\n\t        menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n\t      } else {\n\t        if (nameDropdownValue.length > 25) {\n\t          nameShort = nameDropdownValue.substr(0, 25) + '...';\n\t          nameElement.textContent = nameShort;\n\t        } else {\n\t          nameElement.textContent = nameDropdownValue;\n\t        }\n\t\n\t        if (orgDropdownValue.length > 25) {\n\t          orgShort = orgDropdownValue.slice(0, 12) + '...' + orgDropdownValue.slice(-13);\n\t          orgElement.textContent = orgShort;\n\t        } else {\n\t          orgElement.textContent = orgDropdownValue;\n\t        }\n\t\n\t        if (spaceDropdownValue.length > 25) {\n\t          spaceShort = spaceDropdownValue.substr(0, 25) + '...';\n\t          spaceElement.textContent = spaceShort;\n\t        } else {\n\t          spaceElement.textContent = spaceDropdownValue;\n\t        }\n\t\n\t        regionElement.textContent = regionDropdownValue;\n\t        menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      if (this.hDocumentClick) {\n\t        this.hDocumentClick = this.hDocumentClick.release();\n\t      }\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The component options.\n\t     * @member ProfileSwitcher.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find profile switchers.\n\t     * @property {string} [selectorProfileSwitcher] The data attribute selector for the profile switcher.\n\t     * @property {string} [selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n\t     * @property {string} [selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n\t     * @property {string} [selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n\t     * @property {string} [selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n\t     * @property {string} [selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n\t     * @property {string} [selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n\t     */\n\t\n\t\n\t    /**\n\t     * The map associating DOM element and profile switcher instance.\n\t     * @member ProfileSwitcher.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates a profile switcher in the given node.\n\t     * If the given element indicates that it's a profile switcher (having `data-profile-switcher` attribute), instantiates it.\n\t     * Otherwise, instantiates profile switcher by searching for profile switcher in the given node.\n\t     * @param {Node} target The DOM node to instantiate profile switcher in. Should be a document or an element.\n\t     * @param {Object} [options] The component options\n\t     * @param {string} [options.selectorInit] The CSS selector to find profile switchers.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ProfileSwitcher;\n\t}();\n\t\n\tProfileSwitcher.options = {\n\t  selectorInit: '[data-profile-switcher]',\n\t  // Data Attribute selectors\n\t  selectorProfileSwitcher: '[data-profile-switcher]',\n\t  selectorToggle: '[data-profile-switcher-toggle]',\n\t  selectorMenu: '[data-switcher-menu]',\n\t  selectorLinkedAccount: '[data-switcher-account-sl]',\n\t  selectorAccount: '[data-switcher-account]',\n\t  selectorRegion: '[data-switcher-region]',\n\t  selectorOrg: '[data-switcher-org]',\n\t  selectorSpace: '[data-switcher-space]',\n\t  selectorDropdown: '[data-dropdown]',\n\t  selectorAccountDropdown: '[data-dropdown-account]',\n\t  selectorAccountSlDropdown: '[data-dropdown-account-sl]',\n\t  selectorAccountLinked: '[data-dropdown-account-linked]',\n\t  selectorAccountSlLinked: '[data-dropdown-account-sl-linked]',\n\t  selectorRegionDropdown: '[data-dropdown-region]',\n\t  selectorOrgDropdown: '[data-dropdown-org]',\n\t  selectorSpaceDropdown: '[data-dropdown-space]',\n\t  classSwitcherOpen: 'bx--account-switcher--open',\n\t  classLinkedIcon: '.bx--account-switcher__linked-icon'\n\t};\n\tProfileSwitcher.components = new WeakMap();\n\texports.default = ProfileSwitcher;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Pagination = function () {\n\t  /**\n\t  * Pagination component.\n\t  * @implements Component\n\t  * @param {HTMLElement} element The element working as a pagination component.\n\t  * @param {Object} [options] The component options.\n\t  * @property {string} [selectorInit] The CSS selector to find pagination components.\n\t  * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n\t  * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n\t  * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n\t  * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n\t  * @property {string} [eventItemsPerPage]\n\t  *   The name of the custom event fired when a user changes the number of items per page.\n\t  *   event.detail.value contains the number of items a user wishes to see.\n\t  * @property {string} [eventPageNumber]\n\t  *   The name of the custom event fired when a user inputs a specific page number.\n\t  *   event.detail.value contains the value that the user input.\n\t  * @property {string} [eventPageChange]\n\t  *   The name of the custom event fired when a user goes forward or backward a page.\n\t  *   event.detail.direction contains the direction a user wishes to go.\n\t  */\n\t  function Pagination(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Pagination);\n\t\n\t    this.emitEvent = function (evtName, detail) {\n\t      var event = new CustomEvent('' + evtName, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: detail\n\t      });\n\t\n\t      _this.element.dispatchEvent(event);\n\t    };\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.addEventListener('click', function (evt) {\n\t      if (evt.target.matches(_this.options.selectorPageBackward)) {\n\t        var detail = {\n\t          initialEvt: evt,\n\t          element: evt.target,\n\t          direction: 'backward'\n\t        };\n\t        _this.emitEvent(_this.options.eventPageChange, detail);\n\t      } else if (evt.target.matches(_this.options.selectorPageForward)) {\n\t        var _detail = {\n\t          initialEvt: evt,\n\t          element: evt.target,\n\t          direction: 'forward'\n\t        };\n\t        _this.emitEvent(_this.options.eventPageChange, _detail);\n\t      }\n\t    });\n\t\n\t    this.element.addEventListener('input', function (evt) {\n\t      if (evt.target.matches(_this.options.selectorItemsPerPageInput)) {\n\t        var detail = {\n\t          initialEvt: evt,\n\t          element: evt.target,\n\t          value: evt.target.value\n\t        };\n\t        _this.emitEvent(_this.options.eventItemsPerPage, detail);\n\t      } else if (evt.target.matches(_this.options.selectorPageNumberInput)) {\n\t        var _detail2 = {\n\t          initialEvt: evt,\n\t          element: evt.target,\n\t          value: evt.target.value\n\t        };\n\t        _this.emitEvent(_this.options.eventPageNumber, _detail2);\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Dispatches a custom event\n\t   * @param {String} evtName name of the event to be dispatched.\n\t   * @param {Object} detail contains the original event and any other necessary details.\n\t   */\n\t\n\t\n\t  _createClass(Pagination, null, [{\n\t    key: 'create',\n\t\n\t\n\t    /**\n\t     * Instantiates a pagination component of the given element.\n\t     * @param {HTMLElement} element The element working as a pagination component.\n\t     * @param {Object} [options] The component options.\n\t    * @property {string} [selectorInit] The CSS selector to find pagination components.\n\t    * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n\t    * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n\t    * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n\t    * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n\t    * @property {string} [eventItemsPerPage]\n\t    *   The name of the custom event fired when a user changes the number of items per page.\n\t    *   event.detail.value contains the number of items a user wishes to see.\n\t    * @property {string} [eventPageNumber]\n\t    *   The name of the custom event fired when a user inputs a specific page number.\n\t    *   event.detail.value contains the value that the user input.\n\t    * @property {string} [eventPageChange]\n\t    *   The name of the custom event fired when a user goes forward or backward a page.\n\t    *   event.detail.direction contains the direction a user wishes to go.\n\t    */\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t    * Sets up the given node to instantiate a pagination component in.\n\t    * If the given element indicates that it's an pagination component, instantiates it.\n\t    * Otherwise, lazily instantiates pagination component when it's clicked on.\n\t    * @param {Node} target The DOM node to instantiate pagination component in. Should be a document or an element.\n\t    * @param {Object} [options] The component options.\n\t    * @property {string} [selectorInit] The CSS selector to find pagination components.\n\t    * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n\t    * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n\t    * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n\t    * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n\t    * @property {string} [eventItemsPerPage]\n\t    *   The name of the custom event fired when a user changes the number of items per page.\n\t    *   event.detail.value contains the number of items a user wishes to see.\n\t    * @property {string} [eventPageNumber]\n\t    *   The name of the custom event fired when a user inputs a specific page number.\n\t    *   event.detail.value contains the value that the user input.\n\t    * @property {string} [eventPageChange]\n\t    *   The name of the custom event fired when a user goes forward or backward a page.\n\t    *   event.detail.direction contains the direction a user wishes to go.\n\t    */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Pagination;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and pagination instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Pagination;\n\tPagination.components = new WeakMap();\n\t\n\t/**\n\t * The component options.\n\t * If `options` is specified in the constructor, {@linkcode Pagination.create .create()}, or {@linkcode Pagination.init .init()},\n\t * properties in this object are overriden for the instance being create and how {@linkcode Pagination.init .init()} works.\n\t * @property {string} [selectorInit] The CSS selector to find pagination components.\n\t * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n\t * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n\t * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n\t * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n\t * @property {string} [eventItemsPerPage]\n\t *   The name of the custom event fired when a user changes the number of items per page.\n\t *   event.detail.value contains the number of items a user wishes to see.\n\t * @property {string} [eventPageNumber]\n\t *   The name of the custom event fired when a user inputs a specific page number.\n\t *   event.detail.value contains the value that the user input.\n\t * @property {string} [eventPageChange]\n\t *   The name of the custom event fired when a user goes forward or backward a page.\n\t *   event.detail.direction contains the direction a user wishes to go.\n\t */\n\tPagination.options = {\n\t  selectorInit: '[data-pagination]',\n\t  selectorItemsPerPageInput: '[data-items-per-page]',\n\t  selectorPageNumberInput: '[data-page-number-input]',\n\t  selectorPageBackward: '[data-page-backward]',\n\t  selectorPageForward: '[data-page-forward]',\n\t  eventItemsPerPage: 'itemsPerPage',\n\t  eventPageNumber: 'pageNumber',\n\t  eventPageChange: 'pageChange'\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tvar _toggleClass = __webpack_require__(11);\n\t\n\tvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SearchWithOptions = function () {\n\t  /**\n\t   * Search with Options.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as the search component.\n\t   * @param {Object} [options] The component options\n\t   * @param {string} [options.selectorToggleLayoutBtn] The data attribute selector for the button that toggles between the layouts.\n\t   * @param {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.\n\t   * @param {string} [options.classHiddenContainer] The class selector for a hidden container.\n\t   */\n\t  function SearchWithOptions(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, SearchWithOptions);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t\n\t    this.options = Object.assign(this.constructor.options, options);\n\t\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.element.querySelector(this.options.selectorToggleLayoutBtn).addEventListener('click', function (evt) {\n\t      return _this.toggleLayout(evt);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates a search component of the given element.\n\t   * @param {HTMLElement} element The element working as the search component.\n\t   * @param {Object} [options] The component options\n\t   */\n\t\n\t\n\t  _createClass(SearchWithOptions, [{\n\t    key: 'toggleLayout',\n\t\n\t\n\t    /**\n\t     * Toggles between the grid and list layout.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function toggleLayout(evt) {\n\t      var _this2 = this;\n\t\n\t      var btn = evt.currentTarget;\n\t      var iconContainers = [].concat(_toConsumableArray(btn.querySelectorAll(this.options.selectorIconContainer)));\n\t      iconContainers.forEach(function (container) {\n\t        var isHidden = container.classList.contains(_this2.options.classHiddenContainer);\n\t        (0, _toggleClass2.default)(container, _this2.options.classHiddenContainer, !isHidden);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and content switcher set instance.\n\t     * @member SearchWithOptions.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode SearchWithOptions.create .create()}, or {@linkcode SearchWithOptions.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode SearchWithOptions.init .init()} works.\n\t     * @member SearchWithOptions.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The CSS selector to find search UIs with options.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element, options) {\n\t      return this.components.get(element) || new this(element, options);\n\t    }\n\t\n\t    /**\n\t     * Instantiates a search component in the given node.\n\t     * If the given element indicates that it's a search component (having `data-search-with-options` attribute), instantiates it.\n\t     * Otherwise, instantiates the search component by searching for the search component in the given node.\n\t     * @param {Node} target The DOM node to instantiate the search component in. Should be a document or an element..\n\t     * @param {Object} [options] The component options\n\t     * @param {string} [options.selectorInit] The CSS selector to find unified headers.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target, effectiveOptions);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this3.create(element, effectiveOptions);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return SearchWithOptions;\n\t}();\n\t\n\tSearchWithOptions.components = new WeakMap();\n\tSearchWithOptions.options = {\n\t  selectorInit: '[data-search-with-options]',\n\t  selectorToggleLayoutBtn: '[data-search-toggle-btn]',\n\t  selectorIconContainer: '[data-search-toggle-layout]',\n\t  classHiddenContainer: 'bx--search__toggle-layout__container--hidden'\n\t};\n\texports.default = SearchWithOptions;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(10);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Accordion = function () {\n\t  /**\n\t   * Accordion.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as an accordion.\n\t   */\n\t  function Accordion(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Accordion);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    [].concat(_toConsumableArray(this.element.querySelectorAll(this.options.accordionItem))).forEach(function (item) {\n\t      item.addEventListener('click', function (event) {\n\t        return _this.handleClick(event);\n\t      });\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates accordion of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(Accordion, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Increase/decrease number by clicking on up/down icons.\n\t     * @param {Event} event The event triggering this method.\n\t     */\n\t    value: function handleClick(event) {\n\t      event.currentTarget.classList.toggle('bx--accordion__item--active');\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates accordion UI in the given node.\n\t     * If the given element indicates that it's an accordion UI, instantiates it.\n\t     * Otherwise, instantiates accordion UIs by searching for accordion UIs in the given node.\n\t     * @param {Node} target The DOM node to instantiate accordion UIs in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {boolean} [options.selectorInit] The CSS selector to find accordion UIs.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this2 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this2.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Accordion;\n\t}();\n\t\n\t/**\n\t * The map associating DOM element and accordion UI instance.\n\t * @type {WeakMap}\n\t */\n\t\n\t\n\texports.default = Accordion;\n\tAccordion.components = new WeakMap();\n\t\n\t/**\n\t * The component options.\n\t * If `options` is specified in the constructor, {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n\t * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n\t * @property {string} selectorInit The CSS selector to find accordion UIs.\n\t */\n\tAccordion.options = {\n\t  selectorInit: '[data-accordion]',\n\t  accordionItem: '[data-accordion-item]'\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CopyBtn = function () {\n\t  /**\n\t   * CopyBtn UI.\n\t   * @implements Component\n\t   * @param {HTMLElement} element The element working as a copy button UI.\n\t   */\n\t  function CopyBtn(element) {\n\t    var _this = this;\n\t\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, CopyBtn);\n\t\n\t    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n\t      throw new TypeError('DOM element should be given to initialize this widget.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.constructor.components.set(this.element, this);\n\t\n\t    this.options = Object.assign(Object.create(this.constructor.options), options);\n\t    this.element.addEventListener('click', function () {\n\t      return _this.handleClick();\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Instantiates copy button UI of the given element.\n\t   * @param {HTMLElement} element The element.\n\t   */\n\t\n\t\n\t  _createClass(CopyBtn, [{\n\t    key: 'handleClick',\n\t\n\t\n\t    /**\n\t     * Show the feedback tooltip on click. Hide the feedback tooltip after specified timeout value.\n\t     */\n\t    value: function handleClick() {\n\t      var _this2 = this;\n\t\n\t      var feedback = this.element.querySelector(this.options.feedbackTooltip);\n\t      feedback.classList.add(this.options.classShowFeedback);\n\t      setTimeout(function () {\n\t        feedback.classList.remove(_this2.options.classShowFeedback);\n\t      }, this.options.timeoutValue);\n\t    }\n\t  }, {\n\t    key: 'release',\n\t    value: function release() {\n\t      this.constructor.components.delete(this.element);\n\t    }\n\t\n\t    /**\n\t     * The map associating DOM element and copy button UI instance.\n\t     * @member CopyBtn.components\n\t     * @type {WeakMap}\n\t     */\n\t\n\t\n\t    /**\n\t     * The component options.\n\t     * If `options` is specified in the constructor, {@linkcode CopyBtn.create .create()}, or {@linkcode CopyBtn.init .init()},\n\t     * properties in this object are overriden for the instance being create and how {@linkcode CopyBtn.init .init()} works.\n\t     * @member CopyBtn.options\n\t     * @type {Object}\n\t     * @property {string} selectorInit The data attribute to find copy button UIs.\n\t     * @property {string} feedbackTooltip The data attribute to find feedback tooltip.\n\t     * @property {string} classShowFeedback The CSS selector for showing the feedback tooltip.\n\t     * @property {number} timeoutValue The specified timeout value before the feedback tooltip is hidden.\n\t     */\n\t\n\t  }], [{\n\t    key: 'create',\n\t    value: function create(element) {\n\t      return this.components.get(element) || new this(element);\n\t    }\n\t\n\t    /**\n\t     * Instantiates copy button UI in the given node.\n\t     * If the given element indicates that it's an copy button UI, instantiates it.\n\t     * Otherwise, instantiates copy button UIs by searching for copy button UIs in the given node.\n\t     * @param {Node} target The DOM node to instantiate copy button UIs in. Should be a document or an element.\n\t     * @param {Object} [options] The component options.\n\t     * @param {boolean} [options.selectorInit] The CSS selector to find copy button UIs.\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this3 = this;\n\t\n\t      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var effectiveOptions = Object.assign(Object.create(this.options), options);\n\t      if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n\t        throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n\t      }\n\t      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n\t        this.create(target);\n\t      } else {\n\t        [].concat(_toConsumableArray(target.querySelectorAll(effectiveOptions.selectorInit))).forEach(function (element) {\n\t          return _this3.create(element);\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CopyBtn;\n\t}();\n\t\n\tCopyBtn.components = new WeakMap();\n\tCopyBtn.options = {\n\t  selectorInit: '[data-copy-btn]',\n\t  feedbackTooltip: '[data-feedback]',\n\t  classShowFeedback: 'bx--btn--copy__feedback--displayed',\n\t  timeoutValue: 2000\n\t};\n\texports.default = CopyBtn;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bluemix-components-without-polyfills.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1ba07f52b5ce5ddad16d\n **/","// ====================//\n// Imports and Exports //\n// ====================//\n\n// Base Elements & Components\n// -------------\n// - JavaScript classes for use with components and base-elements.\n// - The following statements import classes from actual locations to\n//   be consumed from this file instead of their actual locations.\nimport initCheckbox from './checkbox';\nimport FileUploader from './file-uploader';\nimport FabButton from './fab';\nimport ContentSwitcher from './content-switcher';\nimport Tab from './tabs';\nimport OverflowMenu from './overflow-menu';\nimport Modal from './modals';\nimport HeaderNav from './header';\nimport Toolbars from './toolbars';\nimport Loading from './loading';\nimport Dropdown from './dropdown';\nimport Card from './card';\nimport NumberInput from './number-input';\nimport ResponsiveTable from './responsive-table';\nimport Table from './table';\nimport DetailPageHeader from './detail-page-header';\nimport LeftNav from './left-nav';\nimport UnifiedHeader from './unified-header';\nimport InlineLeftNav from './inline-left-nav';\nimport ProfileSwitcher from './profile-switcher';\nimport Pagination from './pagination';\nimport SearchWithOptions from './search-with-options';\nimport Accordion from './accordion';\nimport CopyBtn from './copy-btn';\n\nconst settings = {};\n\n/**\n * This module is used for the following purposes:\n * 1. Export ES2015 classes as modules (used with base-elements and components)\n * 2. Build an ES5-compatible files for prototyping.\n *    See /path/to/bluemix-components/dist/dist-demo.html for details.\n * @exports BluemixComponents\n * @example <caption>Consume ES2015 modules from this file using import (Usage pattern 1.)</caption>\n * import { Fab, FileUploader } from '/path/to/your/project/node_modules/@console/bluemix-components';\n */\nexport {\n  /**\n   * Settings.\n   * @type Object\n   * @property {boolean} [disableAutoInit]\n   *   Disables automatic instantiation of components.\n   *   By default (`BluemixComponents.disableAutoInit` is `false`),\n   *   bluemix-components attempts to instantiate components automatically\n   *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n   *   or upon DOM events (e.g. clicking) on such elements.\n   *   See each components' static `.init()` methods for details.\n   */\n  settings,\n\n  /**\n   * Watches for change in checkbox in the given document and force changing `checked` attribute\n   * so that DOM mutation observer in {@link https://www.npmjs.com/package/svgxuse svgxuse} is triggered.\n   * @type initCheckbox\n   */\n  initCheckbox,\n\n  /**\n   * Floating action button.\n   * @type FabButton\n   */\n  FabButton,\n\n  /**\n   * File uploader.\n   * @type FileUploader\n   */\n  FileUploader,\n\n  /**\n   * Content switcher.\n   * @type ContentSwitcher\n   */\n  ContentSwitcher,\n\n  /**\n   * Container of tabs.\n   * @type Tab\n   */\n  Tab,\n\n  /**\n   * Overflow menu.\n   * @type OverflowMenu\n   */\n  OverflowMenu,\n\n  /**\n   * Modal dialog.\n   * @type Modal\n   */\n  Modal,\n\n  /**\n   * Header with taxonomy menu.\n   * @type HeaderNav\n   */\n  HeaderNav,\n\n  /**\n   * Left Navigation Menu\n   * @type LeftNav\n   */\n   LeftNav,\n\n  /**\n   * Search button in tool bar.\n   * @type Toolbars\n   */\n  Toolbars,\n\n  /**\n   * Spinner indicating loading state.\n   * @type Loading\n   */\n  Loading,\n\n  /**\n   * A selector with drop downs.\n   * @type Dropdown\n   */\n  Dropdown,\n\n  /**\n   * The container for cards.\n   * @type Card\n   */\n  Card,\n\n  /**\n   * Number input UI.\n   * @type NumberInput\n   */\n  NumberInput,\n\n  /**\n   *  Data table -responsive\n   *  @type Table\n   */\n  ResponsiveTable,\n\n  /**\n   * Data table.\n   * @type Table\n   */\n  Table,\n\n  /**\n   * Detail page header.\n   * @type DetailPageHeader\n   */\n  DetailPageHeader,\n\n  /**\n   * Profile Switcher.\n   * @type ProfileSwitcher\n   */\n  ProfileSwitcher,\n\n  /**\n   * Pagination.\n   * @type Pagination\n   */\n  Pagination,\n\n  /**\n   * Accordion.\n   * @type Accordion\n   */\n  Accordion,\n};\n\n/**\n * Instantiates components automatically\n * by searching for elements with `data-component-name` (e.g. `data-loading`) attribute\n * or upon DOM events (e.g. clicking) on such elements.\n * See each components' static `.init()` methods for details.\n *\n * HeaderNav is not instantiated - see PR https://github.ibm.com/Bluemix/bluemix-components/pull/1318\n *\n * @private\n */\n\nconst init = () => {\n  if (!settings.disableAutoInit) {\n    initCheckbox();\n    FabButton.init();\n    FileUploader.init();\n    ContentSwitcher.init();\n    Tab.init();\n    OverflowMenu.init();\n    Modal.init();\n    Toolbars.init();\n    Loading.init();\n    Dropdown.init();\n    Card.init();\n    NumberInput.init();\n    ResponsiveTable.init();\n    Table.init();\n    DetailPageHeader.init();\n    LeftNav.init();\n    UnifiedHeader.init();\n    InlineLeftNav.init();\n    ProfileSwitcher.init();\n    Pagination.init();\n    SearchWithOptions.init();\n    Accordion.init();\n    CopyBtn.init();\n  }\n};\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  // DOMContentLoaded has been fired already\n  // Let consumer have chance to see if it wants automatic instantiation disabled, and then run automatic instantiation otherwise\n  setTimeout(init, 0);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/index.js\n **/","function listener(event) {\n  const element = event.target;\n  if (element.tagName === 'INPUT' && element.type === 'checkbox' && element.hasAttribute('checked') !== element.checked) {\n    if (element.checked) {\n      element.setAttribute('checked', '');\n    } else {\n      element.removeAttribute('checked');\n    }\n  }\n}\n\n/**\n * Watches for change in checkbox in the given document and force changing `checked` attribute\n * so that DOM mutation observer in {@link https://www.npmjs.com/package/svgxuse svgxuse} is triggered.\n * @param {Document} [doc=document] The document object to watch for.\n * @returns {Handle} The handle to release the event listener.\n */\nfunction initCheckbox(doc = document) {\n  doc.removeEventListener('change', listener); // In case this function has been called earlier\n  doc.addEventListener('change', listener);\n  return {\n    release() {\n      doc.removeEventListener('change', listener);\n      return null;\n    },\n  };\n}\n\nexport default initCheckbox;\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/checkbox.js\n **/","import '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/array-from';\n\nexport default class FileUploader {\n  /**\n   * File uploader.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.labelSelector] The CSS selector to find the label for the file name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.labelNode = this.element.nextElementSibling || this.element.ownerDocument.querySelector(`.bx--file__label${this.options.selectorLabel}`);\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('change', (event) => this.updateLabel(event));\n  }\n\n  /**\n   * Instantiates file uploader of the given element.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates file uploader in the given node.\n   * If the given element indicates that it's an file uploader, instantiates it.\n   * Otherwise, instantiates file uploader by searching for file uploader in the given node.\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find file uploaders.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Updates the label for the file name upon file selection.\n   * @param {Event} event The event triggering this method.\n   */\n  updateLabel(event) {\n    let fileName = '';\n    const element = this.element;\n\n    if (element.files && element.files.length > 1) {\n      fileName = (element.dataset.multipleCaption || '').replace('{count}', element.files.length);\n    } else {\n      fileName = event.target.value.split('\\\\').pop();\n    }\n\n    if (fileName) {\n      this.labelNode.textContent = fileName;\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and file uploader instance.\n   * @member FileUploader.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode FileUploader.create .create()}, or {@linkcode FileUploader.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode FileUploader.init .init()} works.\n   * @member FileUploader.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find file uploaders.\n   */\n  static options = {\n    selectorInit: '[data-file-uploader]',\n    selectorLabel: '[data-file-appearance]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/file-uploader.js\n **/","module.exports = Element.matches;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Element.matches\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Object.assign\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = Array.from;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Array.from\"\n ** module id = 5\n ** module chunks = 0\n **/","import '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class FabButton {\n  /**\n   * Floating action button.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a floting action button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n\n    element.addEventListener('click', (event) => this.toggle(event));\n  }\n\n  /**\n   * Instantiates floating action buttons in the given element.\n   * If the given element indicates that it's an floating action button, instantiates it.\n   * Otherwise, instantiates floating action buttons by clicking on floating action buttons in the given node.\n   * @param {Node} target The DOM node to instantiate floating action buttons in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find floating action buttons.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, effectiveOptions.selectorInit);\n        if (element && !this.components.has(element)) {\n          this.create(element).toggle(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Toggles this floating action button.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    if (this.element.dataset.state === 'closed') {\n      this.element.dataset.state = 'open';\n    } else {\n      this.element.dataset.state = 'closed';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Instantiates floating action button of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * The map associating DOM element and floating action button instance.\n   * @member FabButton.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode FabButton.create .create()}, or {@linkcode FabButton.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode FabButton.init .init()} works.\n   * @member FabButton.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find floating action buttons.\n   */\n  static options = {\n    selectorInit: '[data-fab]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/fab.js\n **/","import './element-matches';\n\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by the polyfill).\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  if (typeof event.target.matches === 'function') {\n    if (event.target.matches(selector)) {\n      // If event target itself matches the given selector, return it\n      return event.target;\n    } else if (event.target.matches(selector + ' *')) {\n      // If event target is a child node of a DOM element that matches the given selector, find the DOM element by going up the DOM tree\n      for (let traverse = event.target; traverse && traverse !== event.currentTarget; traverse = traverse.parentNode) {\n        if (traverse.matches(selector)) {\n          return traverse;\n        }\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/event-matches.js\n **/","export default function on(element, ...args) {\n  element.addEventListener(...args);\n  return {\n    release() {\n      element.removeEventListener(...args);\n      return null;\n    },\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/misc/on.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class ContentSwitcher {\n  /**\n   * Set of content switcher buttons.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n\n    [... element.querySelectorAll('input')].forEach((input) => {\n      if (input.checked) this._changeActive(input);\n    });\n  }\n\n  /**\n   * Instantiates a set of content switcher buttons of the given element.\n   * @param {HTMLElement} element The element working as a set of content switcher buttons.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates content switcher button sets in the given node.\n   * If the given element indicates that it's an content switcher button set, instantiates it.\n   * Otherwise, instantiates content switcher button sets by searching for content switcher button sets in the given node.\n   * @param {Node} target The DOM node to instantiate content switcher button sets in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find content switcher button set.\n   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @param {string} [options.classActive] The CSS class for switcher button's selected state.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... document.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Handles click on content switcher button set.\n   * If the click is on a content switcher button, activates it.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const button = eventMatches(event, this.options.selectorButton);\n\n    if (button) {\n      this.setActive(button);\n    }\n  }\n\n  /**\n   * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.\n   * @private\n   * @param {HTMLElement} item The button to be selected.\n   */\n  _changeActive(item) {\n    // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes\n    const itemLink = item.querySelector(this.options.selectorLink);\n    if (itemLink) {\n      [... this.element.querySelectorAll(this.options.selectorLink)].forEach((link) => {\n        if (link !== itemLink) {\n          link.setAttribute('aria-selected', 'false');\n        }\n      });\n      itemLink.setAttribute('aria-selected', 'true');\n    }\n\n    const selectorButtons = [... this.element.querySelectorAll(this.options.selectorButton)];\n\n    selectorButtons.forEach((button) => {\n      if (button !== item) {\n        toggleClass(button, this.options.classActive, false);\n        [... button.ownerDocument.querySelectorAll(button.dataset.target)].forEach(element => element.setAttribute('hidden', ''));\n      }\n    });\n\n    toggleClass(item, this.options.classActive, true);\n    [... item.ownerDocument.querySelectorAll(item.dataset.target)].forEach(element => element.removeAttribute('hidden'));\n  }\n\n  /**\n   * Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @typedef {Object} ContentSwitcher~cancelError\n   * @property {boolean} canceled `true` always.\n   * @property {boolean} item The content switcher button that was about to be selected.\n   */\n\n  /**\n   * The callback called once switching is finished or is canceled.\n   * @callback ContentSwitcher~setActiveCallback\n   * @param {ContentSwitcher~cancelError} error Error thrown when selection (upon clicking on a content switcher button, etc.) is canceled.\n   * @param {HTMLElement} item The newly selected button. `null` if when selection is canceled.\n   */\n\n  /**\n   * Selects a content switcher button.\n   * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.\n   * DOM elements associated with unselected buttons in the same way will be hidden.\n   * @param {HTMLElement} item The button to be selected.\n   * @param {ContentSwitcher~setActiveCallback} callback The callback called once selection is finished or is canceled.\n   */\n  setActive(item, callback) {\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: { item },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeActive(item);\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item },\n      }));\n      if (callback) {\n        callback(null, item);\n      }\n    } else {\n      const error = new Error('Switching active item has been canceled.');\n      error.canceled = true;\n      error.item = item;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and content switcher set instance.\n   * @member ContentSwitcher.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode ContentSwitcher.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode ContentSwitcher.init .init()} works.\n   * @member ContentSwitcher.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find content switcher button set.\n   * @property {string} [selectorButton] The CSS selector to find switcher buttons.\n   * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.\n   * @property {string} [classActive] The CSS class for switcher button's selected state.\n   * @property {string} [eventBeforeSelected]\n   *   The name of the custom event fired before a switcher button is selected.\n   *   Cancellation of this event stops selection of content switcher button.\n   * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.\n   */\n  static options = {\n    selectorInit: '[data-content-switcher]',\n    selectorButton: 'input[type=\"radio\"], .bx--content-switcher__btn',\n    selectorButtonSelected: 'input[type=\"radio\"].bx--content-switcher--selected',\n    classActive: 'bx--content-switcher--selected',\n    eventBeforeSelected: 'content-switcher-beingselected',\n    eventAfterSelected: 'content-switcher-selected',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/content-switcher.js\n **/","module.exports = CustomEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"CustomEvent\"\n ** module id = 10\n ** module chunks = 0\n **/","export default function toggleClass(element, name, add) {\n  if (element.classList.contains(name) === !add) {\n    element.classList[add ? 'add' : 'remove'](name);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/polyfills/toggle-class.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/math-sign';\nimport '../polyfills/object-assign';\nimport ContentSwitcher from './content-switcher';\n\nexport default class Tab extends ContentSwitcher {\n  /**\n   * Container of tabs.\n   * @extends ContentSwitcher\n   * @param {HTMLElement} element The element working as a container of tabs.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  constructor(element, options) {\n    super(element, options);\n\n    this.element.addEventListener('keydown', (event) => this.handleKeyDown(event));\n\n    const selected = this.element.querySelector(this.options.selectorButtonSelected);\n    if (selected) {\n      this.updateTriggerText(selected);\n    }\n  }\n\n  /**\n   * Instantiates tab containers in the given node.\n   * If the given element indicates that it's an tab container, instantiates it.\n   * Otherwise, instantiates tab containers by searching for tab containers in the given node.\n   * @param {Node} target The DOM node to instantiate tab containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find tab containers.\n   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @param {string} [options.selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @param {string} [options.selectorButton] The CSS selector to find tab containers.\n   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.\n   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.\n   * @param {string} [options.classActive] The CSS class for tab's selected state.\n   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  _changeActive(item) {\n    super._changeActive(item);\n    this.updateTriggerText(item);\n  }\n\n  /**\n   * Handles click on tab container.\n   * * If the click is on a tab, activates it.\n   * * If the click is on the button to open the drop down menu, does so.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    super.handleClick(event);\n    const button = eventMatches(event, this.options.selectorButton);\n    const trigger = eventMatches(event, this.options.selectorTrigger);\n    if (button) {\n      super.handleClick(event);\n      this.updateMenuState();\n    }\n    if (trigger) {\n      this.updateMenuState();\n    }\n  }\n\n  /**\n   * Handles arrow keys on tab container.\n   * * Up/Left keys are used to go to previous tab.\n   * * Down/Right keys are used to go to next tab.\n   * @param {Event} event The event triggering this method.\n   */\n  handleKeyDown(event) {\n    const triggerNode = this.element.querySelector(this.options.selectorTrigger);\n    if (triggerNode && triggerNode.offsetParent) {\n      return;\n    }\n\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n\n    if (direction) {\n      const buttons = [... this.element.querySelectorAll(this.options.selectorButton)];\n      const button = this.element.querySelector(this.options.selectorButtonSelected);\n      const nextIndex = Math.max(buttons.indexOf(button) + direction, -1 /* For `button` not found in `buttons` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * buttons.length;\n      this.setActive(buttons[nextIndexLooped], (error, item) => {\n        if (item) {\n          const link = item.querySelector(this.options.selectorLink);\n          if (link) {\n            link.focus();\n          }\n        }\n      });\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Shows/hides the drop down menu used in narrow mode.\n   */\n  updateMenuState() {\n    this.element.querySelector(this.options.selectorMenu).classList.toggle(this.options.classHidden);\n  }\n\n  /**\n   * Updates the text indicating the currently selected tab item.\n   * @param {HTMLElement} target The newly selected tab item.\n   */\n  updateTriggerText(target) {\n    this.element.querySelector(this.options.selectorTriggerText).textContent = target.textContent;\n  }\n\n  /**\n   * The map associating DOM element and tab container instance.\n   * @member Tab.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode Tab.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Tab.init .init()} works.\n   * @member Tab.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find tab containers.\n   * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.\n   * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.\n   * @property {string} [selectorTriggerText] The CSS selector to find the element used in narrow mode showing the selected tab item.\n   * @property {string} [selectorButton] The CSS selector to find tab containers.\n   * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.\n   * @property {string} [selectorLink] The CSS selector to find the links in tabs.\n   * @property {string} [classActive] The CSS class for tab's selected state.\n   * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.\n   * @property {string} [eventBeforeSelected]\n   *   The name of the custom event fired before a tab is selected.\n   *   Cancellation of this event stops selection of tab.\n   * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.\n   */\n  static options = Object.assign(Object.create(ContentSwitcher.options), {\n    selectorInit: '[data-tabs]',\n    selectorMenu: '.bx--tabs__nav',\n    selectorTrigger: '.bx--tabs__trigger',\n    selectorTriggerText: '.bx--tabs__trigger-text',\n    selectorButton: '.bx--tabs__nav-item',\n    selectorButtonSelected: '.bx--tabs__nav-item.bx--tabs--selected',\n    selectorLink: '.bx--tabs__nav-link',\n    classActive: 'bx--tabs--selected',\n    classHidden: 'bx--tabs--hidden',\n    eventBeforeSelected: 'tab-beingselected',\n    eventAfterSelected: 'tab-selected',\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/tabs.js\n **/","module.exports = Math.sign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Math.sign\"\n ** module id = 13\n ** module chunks = 0\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class OverflowMenu {\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.optionMenu = this.element.querySelector(this.options.selectorOptionMenu);\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.handleDocumentClick(event));\n\n    /**\n     * The handle to release keypress event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentKeyPress = on(this.element.ownerDocument, 'keypress', (event) => this.handleKeyPress(event));\n  }\n\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  emitEvent = (element, evt) => {\n    const detail = {\n      element,\n      optionMenu: this.optionMenu,\n      evt,\n    };\n\n    const eventAfter = new CustomEvent('overflow', {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    this.element.ownerDocument.dispatchEvent(eventAfter);\n  }\n\n  handleDocumentClick(event) {\n    const isOfSelf = this.element.contains(event.target);\n    const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n    if (isOfSelf && this.element.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    toggleClass(this.optionMenu, 'bx--overflow-menu--open', shouldBeOpen);\n    toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n\n    if (shouldBeOpen) {\n      this.emitEvent(this.element, event);\n    }\n  }\n\n  handleKeyPress(event) {\n    const key = event.key || event.which;\n    if (key === 'Enter' || key === 13) {\n      const isOfSelf = this.element.contains(event.target);\n      const shouldBeOpen = isOfSelf && !this.element.classList.contains('bx--overflow-menu--open');\n\n      if (isOfSelf && this.element.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      if (shouldBeOpen) {\n        this.emitEvent(this.element, event);\n      }\n\n      toggleClass(this.optionMenu, 'bx--overflow-menu--open', shouldBeOpen);\n      toggleClass(this.element, 'bx--overflow-menu--open', shouldBeOpen);\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    if (this.hDocumentKeyPress) {\n      this.hDocumentKeyPress = this.hDocumentKeyPress.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  static components = new WeakMap();\n\n  static options = {\n    selectorInit: '[data-overflow-menu]',\n    selectorOptionMenu: '.bx--overflow-menu__options',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/overflow-menu.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\n/**\n * @param {Element} element The element to obtain transition duration from.\n * @returns {number} The transition duration of the given property set in the given element.\n */\nfunction getTransitionDuration(element) {\n  const computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n  const durations = computedStyle.transitionDuration.split(/,\\s*/)\n    .map((transitionDuration) => parseFloat(transitionDuration))\n    .filter((duration) => !isNaN(duration));\n  return durations.length > 0 ? Math.max(...durations) : 0;\n}\n\nexport default class Modal {\n  /**\n   * Modal dialog.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookCloseActions();\n  }\n\n  /**\n   * Instantiates modal dialog of the given element.\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates modal dialogs in the given element.\n   * If the given element indicates that it's an modal dialog, instantiates it.\n   * Otherwise, instantiates modal dialogs by clicking on launcher buttons\n   * (buttons with `data-modal-target` attribute) of modal dialogs in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate modal dialogs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS class to find modal dialogs.\n   * @param {string} [options.attribInitTarget] The attribute name in the launcher buttons to find target modal dialogs.\n   * @param {string} [options.classVisible] The CSS class for the visible state.\n   * @param {string} [options.classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, `[${effectiveOptions.attribInitTarget}]`);\n\n        if (element) {\n          event.delegateTarget = element;\n\n          const modalElements = [... element.ownerDocument.querySelectorAll(element.getAttribute(effectiveOptions.attribInitTarget))];\n          if (modalElements.length > 1) {\n            throw new Error('Target modal must be unique.');\n          }\n\n          if (modalElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n\n            const modal = this.create(modalElements[0], effectiveOptions);\n            modal.show(event, (error, shownAlready) => {\n              if (!error && !shownAlready && modal.element.offsetWidth > 0 && modal.element.offsetHeight > 0) {\n                modal.element.focus();\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Adds event listeners for closing this dialog.\n   */\n  hookCloseActions() {\n    this.element.addEventListener('click', (event) => {\n      if (event.currentTarget === event.target) this.hide(event);\n    });\n\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n\n    this.keydownHandler = (event) => {\n      if (event.which === 27) {\n        this.hide(event);\n      }\n    };\n\n    this.element.ownerDocument.body.addEventListener('keydown', this.keydownHandler);\n\n    [... this.element.querySelectorAll('[data-modal-close]')].forEach((element) => {\n      element.addEventListener('click', (event) => {\n        this.hide(event);\n      });\n    });\n  }\n\n  /**\n   * Internal method of {@linkcode Modal#show .show()} and  {@linkcode Modal#hide .hide()}, to change show/hidden state.\n   * @private\n   * @param {boolean} visible `true` to make this modal dialog visible.\n   * @param {Function} callback Callback called when change in state completes.\n   */\n  _changeState(visible, callback) {\n    let finished;\n    const finishedTransition = () => {\n      if (!finished) {\n        finished = true;\n        this.element.removeEventListener('transitionend', finishedTransition);\n        callback();\n      }\n    };\n\n    this.element.addEventListener('transitionend', finishedTransition);\n    const transitionDuration = getTransitionDuration(this.element);\n    toggleClass(this.element, this.options.classVisible, visible);\n    toggleClass(this.element.ownerDocument.body, this.options.classNoScroll, visible);\n    if (transitionDuration === 0) {\n      finishedTransition();\n    }\n  }\n\n  /**\n   * The callback called once showing/hiding this dialog is finished or is canceled.\n   * @callback Modal~stateChangeCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the showing/hiding this dialog is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before showing/hiding this dialog happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Shows this modal dialog.\n   * @param {HTMLElement} [launchingElement] The DOM element that triggered calling this function.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  show(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.delegateTarget || launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeShown, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(true, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterShown, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Showing dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  /**\n   * Hides this modal dialog.\n   * @param {Modal~stateChangeCallback} [callback] The callback called once showing this dialog is finished or is canceled.\n   */\n  hide(launchingElementOrEvent, callback) {\n    const launchingElementOrEventOmitted = !launchingElementOrEvent || typeof launchingElementOrEvent === 'function';\n    if (launchingElementOrEventOmitted) {\n      callback = launchingElementOrEvent; // eslint-disable-line no-param-reassign\n    }\n\n    const launchingElement = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget || launchingElementOrEvent;\n\n    const launchingEvent = launchingElementOrEventOmitted ? null :\n      launchingElementOrEvent.currentTarget && launchingElementOrEvent;\n\n    if (launchingElement && !launchingElement.nodeType) {\n      throw new TypeError('DOM Node should be given for launching element.');\n    }\n\n    if (launchingEvent && !launchingEvent.type) {\n      throw new TypeError('DOM event should be given for launching event.');\n    }\n\n    if (!this.element.classList.contains(this.options.classVisible)) {\n      if (callback) {\n        callback(null, true);\n      }\n      return;\n    }\n\n    const eventStart = new CustomEvent(this.options.eventBeforeHidden, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        launchingElement,\n        launchingEvent,\n      },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (this.element.dispatchEvent(eventStart)) {\n      this._changeState(false, () => {\n        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterHidden, {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            launchingElement,\n            launchingEvent,\n          },\n        }));\n        if (callback) {\n          callback();\n        }\n      });\n    } else {\n      const error = new Error('Hiding dialog has been canceled.');\n      error.canceled = true;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    if (this.keydownHandler) {\n      this.element.ownerDocument.body.removeEventListener('keydown', this.keydownHandler);\n      this.keydownHandler = null;\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('Modals.hook() is deprecated. Use Modals.init() instead.'); // eslint-disable-line no-console\n  }\n\n  /**\n   * The map associating DOM element and modal instance.\n   * @member Modal.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Modal.create .create()}, or {@linkcode Modal.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Modal.init .init()} works.\n   * @member Modal.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS class to find modal dialogs.\n   * @property {string} attribInitTarget The attribute name in the launcher buttons to find target modal dialogs.\n   * @property {string} [classVisible] The CSS class for the visible state.\n   * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.\n   * @property {string} [eventBeforeShown]\n   *   The name of the custom event fired before this modal is shown.\n   *   Cancellation of this event stops showing the modal.\n   * @property {string} [eventAfterShown]\n   *   The name of the custom event telling that modal is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).\n   * @property {string} [eventBeforeHidden]\n   *   The name of the custom event fired before this modal is hidden.\n   *   Cancellation of this event stops hiding the modal.\n   * @property {string} [eventAfterHidden]\n   *   The name of the custom event telling that modal is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).\n   */\n  static options = {\n    selectorInit: '[data-modal]',\n    attribInitTarget: 'data-modal-target',\n    classVisible: 'is-visible',\n    classNoScroll: 'bx--noscroll',\n    eventBeforeShown: 'modal-beingshown',\n    eventAfterShown: 'modal-shown',\n    eventBeforeHidden: 'modal-beinghidden',\n    eventAfterHidden: 'modal-hidden',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/modals.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class HeaderNav {\n  /**\n   * Header with taxonomy menu.\n   * @deprecated\n   * @implements Component\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.menuNode = this.element.querySelector(this.options.selectorMenu);\n\n    this.element.addEventListener('keydown', (event) => this.toggleNav(event));\n\n    [... this.element.querySelectorAll(this.options.selectorItemLink)].forEach((item) => {\n      item.addEventListener('click', (e) => this.select(e));\n    });\n  }\n\n  /**\n   * Instantiates taxonomy menus in the given element.\n   * If the given element indicates that it's an taxonomy menu, instantiates it.\n   * Otherwise, instantiates taxonomy menus by clicking on launcher buttons\n   * (buttons with `data-nav-target` attribute) of taxonomy menus in the given node.\n   * @implements Component\n   * @param {Node} target The DOM node to instantiate taxonomy menus in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find taxonomy menus.\n   * @param {string} [options.attribInitTarget] The attribute name in the lancher buttons to find taxonomy menus.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      const handler = (event) => {\n        const element = eventMatches(event, `[${effectiveOptions.attribInitTarget}]`);\n\n        if (element) {\n          const headerElements = [... element.ownerDocument.querySelectorAll(element.getAttribute(effectiveOptions.attribInitTarget))];\n          if (headerElements.length > 1) {\n            throw new Error('Target header must be unique.');\n          }\n\n          if (headerElements.length === 1) {\n            if (element.tagName === 'A') {\n              event.preventDefault();\n            }\n            this.create(headerElements[0], effectiveOptions).toggleNav(event);\n          }\n        }\n      };\n\n      target.addEventListener('click', handler);\n      target.addEventListener('keydown', handler);\n\n      return {\n        release: () => {\n          target.removeEventListener('keydown', handler);\n          target.removeEventListener('click', handler);\n        },\n      };\n    }\n  }\n\n  /**\n   * Instantiates taxonomy menu of the given element.\n   * @param {HTMLElement} element The element working as a taxonomy menu.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @param {string} [options.selectorMenu] The CSS selector to find the container of the menu items.\n   * @param {string} [options.selectorItem] The CSS selector to find the menu items.\n   * @param {string} [options.selectorItemLink] The CSS selector to find the link in the menu items.\n   * @param {string} [options.selectorLabel] The CSS selector to find the label of the menu items.\n   * @param {string} [options.classActive] The CSS class for the visible state.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @param {string} [options.eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @param {string} [options.eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Shows/hides this taxonomy menu.\n   * @param {Event} event The event triggering this function.\n   */\n  toggleNav(event) {\n    const isActive = this.element.classList.contains(this.options.classActive);\n    let add;\n    if (event.type === 'click' || event.type === 'keydown' && event.which === 40) {\n      // Toggle button or ESC key on nav\n      add = !isActive;\n    } else if (event.type === 'keydown' && event.which === 27) {\n      // Down arrow on launch button\n      add = false;\n    } else {\n      return;\n    }\n\n    const launchingElement = eventMatches(event, '[data-nav-target]') || event.currentTarget;\n    if (launchingElement.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    const eventStart = new CustomEvent(this.options[add ? 'eventBeforeShown' : 'eventBeforeHidden'], {\n      bubbles: true,\n      cancelable: true,\n      detail: { launchingElement: launchingElement },\n    });\n    const defaultNotPrevented = this.element.dispatchEvent(eventStart);\n\n    if (add) {\n      this.triggerNode = launchingElement;\n      this.triggerLabelNode = this.triggerNode.querySelector(this.options.selectorTriggerLabel);\n    }\n\n    if (defaultNotPrevented) {\n      this.element.classList[add ? 'add' : 'remove'](this.options.classActive);\n      (this.element.classList.contains(this.options.classActive) ? this.menuNode : this.triggerNode).focus();\n      this.element.dispatchEvent(new CustomEvent(this.options[add ? 'eventAfterShown' : 'eventAfterHidden'], {\n        bubbles: true,\n        cancelable: true,\n        detail: { launchingElement: launchingElement },\n      }));\n    }\n  }\n\n  /**\n   * Selects a menu item.\n   * @param {Event} event The event triggering this function.\n   */\n  select(event) {\n    const activatedElement = event.currentTarget;\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        initiatingEvent: event,\n        itemElement: activatedElement,\n      },\n    });\n\n    if (this.element.dispatchEvent(eventStart)) {\n      [... this.element.querySelectorAll(this.options.selectorItem)].forEach((element) => {\n        if (element.contains(activatedElement)) {\n          element.classList.add('selected');\n        } else if (element.classList.contains('selected')) {\n          element.classList.remove('selected');\n        }\n      });\n      activatedElement.classList.add('selected');\n      if (this.triggerLabelNode) {\n        this.triggerLabelNode.textContent = activatedElement.querySelector(this.options.selectorLabel).textContent;\n      }\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { itemElement: activatedElement },\n      }));\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * @deprecated\n   */\n  static hook() {\n    console.warn('HeaderNav.hook() is deprecated. Use HeaderNav.init() instead.'); // eslint-disable-line no-console\n  }\n\n  /**\n   * The map associating DOM element and taxonomy menu instance.\n   * @member HeaderNav.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode HeaderNav.create .create()}, or {@linkcode HeaderNav.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode HeaderNav.init .init()} works.\n   * @member HeaderNav.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find taxonomy menus.\n   * @property {string} attribInitTarget The attribute name in the lancher buttons to find taxonomy menus.\n   * @property {string} [selectorTriggerLabel] The CSS selector to find the label for the selected menu item.\n   * @property {string} [selectorMenu] The CSS selector to find the container of the menu items.\n   * @property {string} [selectorItem] The CSS selector to find the menu items.\n   * @property {string} [selectorItemLink] The CSS selector to find the link in the menu items.\n   * @property {string} [selectorLabel] The CSS selector to find the label of the menu items.\n   * @property {string} [classActive] The CSS class for the visible state.\n   * @property {string} [eventBeforeShown]\n   *   The name of the custom event fired before this taxonomy menu is shown.\n   *   Cancellation of this event stops showing the taxonomy menu.\n   * @property {string} [eventAfterShown] The name of the custom event fired after this taxonomy menu is shown.\n   * @property {string} [eventBeforeHidden]\n   *   The name of the custom event fired before this taxonomy menu is hidden.\n   *   Cancellation of this event stops hiding the taxonomy menu.\n   * @property {string} [eventAfterHidden] The name of the custom event fired after this taxonomy menu is hidden.\n   * @property {string} [eventBeforeSelected]\n   *   The name of the custom event fired before a menu item is selected.\n   *   Cancellation of this event stops the selection.\n   * @property {string} [eventAfterSelected] The name of the custom event fired after a menu item is selected.\n   */\n  static options = {\n    selectorInit: '[data-nav]',\n    attribInitTarget: 'data-nav-target',\n    selectorTriggerLabel: '.current-taxonomy',\n    classActive: 'taxonomy-nav--active',\n    selectorMenu: '.taxonomy-menu',\n    selectorItem: '.taxonomy-item',\n    selectorItemLink: '.taxonomy-item--taxonomy-menu',\n    selectorLabel: '.taxonomy-item__label',\n    eventBeforeShown: 'header-beingshown',\n    eventAfterShown: 'header-shown',\n    eventBeforeHidden: 'header-beinghidden',\n    eventAfterHidden: 'header-hidden',\n    eventBeforeSelected: 'header-beingselected',\n    eventAfterSelected: 'header-selected',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/header.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\n\nexport default class Toolbars {\n  /**\n   * Search button in tool bar.\n   * @implements Component\n   * @param {HTMLElement} element The element working as an search button.\n   */\n  constructor(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.searchFieldNode = this.element.ownerDocument.querySelector(this.element.dataset.listIconsSearchActionTarget);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleActionClick(event));\n  }\n\n  /**\n   * Instantiates a search button of the given element.\n   * @param {HTMLElement} element The element working as a search button.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates search buttons in the given node.\n   * If the given element indicates that it's an search button, instantiates it.\n   * Otherwise, instantiates search buttons by searching for search buttons in the given node.\n   * @param {Node} target The DOM node to instantiate search buttons in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find search buttons.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Show/hide search box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleActionClick(event) {\n    const searchActionNode = event.currentTarget;\n\n    if (searchActionNode.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    this.element.classList.toggle('show-search');\n    if (this.searchFieldNode) {\n      this.searchFieldNode.classList.toggle('show-search');\n      this.searchFieldNode.value = '';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and search button instance.\n   * @member Toolbars.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Toolbars.create .create()}, or {@linkcode Toolbars.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Toolbars.init .init()} works.\n   * @member Toolbars.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find search buttons.\n   */\n  static options = {\n    selectorInit: '[data-list-icons-search-action-target]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/toolbars.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class Loading {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.active] `true` if this spinner should roll.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.active = this.options.active;\n    this.ie = false;\n\n    // Check if browser is Internet Explorer\n    if (options.ie || window.ActiveXObject || 'ActiveXObject' in window) {\n      this.ie = true;\n      this.element.classList.add('bx--loading--ie');\n    }\n\n    this.constructor.components.set(this.element, this);\n\n    // Initialize spinner\n    this.set(this.active);\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner, instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find spinners.\n   * @param {boolean} [options.active] `true` if this spinner should roll.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Sets active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  set(active) {\n    if (typeof active !== 'boolean') {\n      throw new TypeError('set expects a boolean.');\n    }\n\n    this.active = active;\n\n    if (this.ie) {\n      toggleClass(this.element, 'bx--loading--stop--ie', !this.active);\n    }\n    toggleClass(this.element, 'bx--loading--stop', !this.active);\n\n    return this;\n  }\n\n  /**\n   * Toggles active/inactive state.\n   * @param {boolean} active `true` if this spinner should roll.\n   */\n  toggle() {\n    return this.set(!this.active);\n  }\n\n  /**\n   * @returns {boolean} `true` if this spinner is rolling roll.\n   */\n  isActive() {\n    return this.active;\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and spinner instance.\n   * @member Loading.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Loading.create .create()}, or {@linkcode Loading.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Loading.init .init()} works.\n   * @member Loading.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find spinners.\n   */\n  static options = {\n    selectorInit: '[data-loading]',\n    active: true,\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/loading.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class Dropdown {\n  /**\n   * A selector with drop downs.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    if (this.element.dataset.dropdown !== 'navigation') {\n      this.element.dataset.dropdown = '';\n    }\n    this.constructor.components.set(this.element, this);\n\n    /**\n     * The handle to release click event listener on document object.\n     * @member {Handle}\n     */\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (event) => this.toggle(event));\n\n    this.setCloseOnBlur();\n\n    this.element.addEventListener('keypress', (event) => this.toggle(event));\n    this.element.addEventListener('click', (event) => {\n      const item = eventMatches(event, this.options.selectorItem);\n      if (item) {\n        this.select(item);\n      }\n    });\n  }\n\n  /**\n   * Instantiates selector of the given element.\n   * @param {HTMLElement} element The element working as a selector.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates selectors in the given node.\n   * If the given element indicates that it's an selector, instantiates it.\n   * Otherwise, instantiates selectors by searching for selectors in the given node.\n   * @param {Node} target The DOM node to instantiate selectors in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find selectors.\n   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.\n   * @param {string} [options.eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  release() {\n    if (this.hFocusIn) {\n      this.hFocusIn = this.hFocusIn.release();\n    }\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * Opens and closes the dropdown menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    if (event.which === 13 || event.which === 32 || event.type === 'click') {\n      const isOfSelf = this.element.contains(event.target);\n\n      if (isOfSelf) {\n        this.element.classList.toggle('bx--dropdown--open');\n      } else if (!isOfSelf && this.element.classList.contains('bx--dropdown--open')) {\n        this.element.classList.remove('bx--dropdown--open');\n      }\n    }\n  }\n\n  /**\n   * Handles clicking on the dropdown options, doing the following:\n   * * Change Dropdown text to selected option.\n   * * Remove selected option from options when selected.\n   * * Emit custom events.\n   * @param {HTMLElement} itemToSelect The element to be activated.\n   */\n  select(itemToSelect) {\n    const eventStart = new CustomEvent(this.options.eventBeforeSelected, {\n      bubbles: true,\n      cancelable: true,\n      detail: { item: itemToSelect },\n    });\n\n    if (this.element.dispatchEvent(eventStart)) {\n      if (this.element.dataset.dropdownType !== 'navigation') {\n        this.element.firstElementChild.innerHTML = itemToSelect.innerHTML;\n        itemToSelect.classList.add(this.options.classSelected);\n      }\n      this.element.dataset.value = itemToSelect.parentElement.dataset.value;\n\n      [... this.element.querySelectorAll(this.options.selectorItemSelected)].forEach((item) => {\n        if (itemToSelect !== item) {\n          item.classList.remove(this.options.classSelected);\n        }\n      });\n\n      itemToSelect.classList.add(this.options.classSelected);\n\n      this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {\n        bubbles: true,\n        cancelable: true,\n        detail: { item: itemToSelect },\n      }));\n    }\n  }\n\n  /**\n   * Sets an event handler to document for \"close on blur\" behavior.\n   */\n  setCloseOnBlur() {\n    const hasFocusin = 'onfocusin' in window;\n    const focusinEventName = hasFocusin ? 'focusin' : 'focus';\n    this.hFocusIn = on(this.element.ownerDocument, focusinEventName, (event) => {\n      if (!this.element.contains(event.target)) {\n        this.element.classList.remove('bx--dropdown--open');\n      }\n    }, !hasFocusin);\n  }\n\n  /**\n   * The map associating DOM element and selector instance.\n   * @member Dropdown.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Dropdown.create .create()}, or {@linkcode Dropdown.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Dropdown.init .init()} works.\n   * @member Dropdown.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find selectors.\n   * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.\n   * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.\n   * @property {string} [classSelected] The CSS class for the selected dropdown item.\n   * @property {string} [eventBeforeSelected]\n   *   The name of the custom event fired before a drop down item is selected.\n   *   Cancellation of this event stops selection of drop down item.\n   * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.\n   */\n  static options = {\n    selectorInit: '[data-dropdown]',\n    selectorItem: '[data-option] > .bx--dropdown__link',\n    selectorItemSelected: '[data-option] > .bx--dropdown__link.bx--dropdown--selected',\n    classSelected: 'bx--dropdown--selected',\n    eventBeforeSelected: 'dropdown-beingselected',\n    eventAfterSelected: 'dropdown-selected',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/dropdown.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/math-sign';\n\nexport default class Card {\n  /**\n   * The container for cards.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.constructor.components.set(this.element, this);\n    this.element.addEventListener('keydown', (event) => this.cardKeyPress(event));\n  }\n\n  /**\n   * Instantiates card container of the given element.\n   * @param {HTMLElement} element The element working as a container.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates card container in the given node.\n   * If the given element indicates that it's an card container, instantiates it.\n   * Otherwise, instantiates card containers by searching for card containers in the given node.\n   * @param {Node} target The DOM node to instantiate card containers in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find card containers.\n   * @param {string} [options.selectorCard] The CSS selector to find cards.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Goes back/forward among cards,\n   * right arrow key for going forward, left arrow key for going backward.\n   * @param {Event} event The event triggering this method.\n   */\n  cardKeyPress(event) {\n    const direction = {\n      Left: -1,\n      Right: 1,\n      ArrowLeft: -1,\n      ArrowRight: 1,\n    }[event.key || event.keyIdentifier];\n    const card = eventMatches(event, this.options.selectorCard);\n\n    if (direction && card && card === document.activeElement) {\n      const cards = [... this.element.querySelectorAll(this.options.selectorCard)];\n      const nextIndex = Math.max(cards.indexOf(card) + direction, -1 /* For `card` not found in `cards` */);\n      const nextIndexLooped = nextIndex >= 0 && nextIndex < cards.length ? nextIndex :\n        nextIndex - Math.sign(nextIndex) * cards.length;\n      cards[nextIndexLooped].focus();\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and card list instance.\n   * @member Card.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Card.create .create()}, or {@linkcode Card.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Card.init .init()} works.\n   * @member Card.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find card containers.\n   * @property {string} [selectorCard] The CSS selector to find cards.\n   */\n  static options = {\n    selectorInit: '[data-card-list]',\n    selectorCard: '.bx--card',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/card.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\n\nexport default class NumberInput {\n  /**\n   * Number input UI.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a number input UI.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = options;\n    this.options.ie = this.options.ie || 'ActiveXObject' in window;\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n    // Also <svg> does not seems to have `Element.classList`.\n    this.element.querySelector('.bx--number__arrow--up').addEventListener('click', (event) => this.handleClick(event));\n    this.element.querySelector('.bx--number__arrow--down').addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates number input UI of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates number input UI in the given node.\n   * If the given element indicates that it's an number input UI, instantiates it.\n   * Otherwise, instantiates number input UIs by searching for number input UIs in the given node.\n   * @param {Node} target The DOM node to instantiate number input UIs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find number input UIs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const state = event.currentTarget.classList;\n    const numberInput = this.element.querySelector('.bx--number__input');\n\n    if (state.contains('bx--number__arrow--up')) {\n      if (this.options.ie) {\n        ++numberInput.value;\n      } else {\n        numberInput.stepUp();\n      }\n    } else if (state.contains('bx--number__arrow--down')) {\n      if (this.options.ie) {\n        if (numberInput.value > 0) {\n          --numberInput.value;\n        }\n      } else {\n        numberInput.stepDown();\n      }\n    } else {\n      return;\n    }\n\n    // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n    numberInput.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      cancelable: false,\n    }));\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and number input UI instance.\n   * @member NumberInput.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n   * @member NumberInput.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find number input UIs.\n   */\n  static options = {\n    selectorInit: '[data-numberinput]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/number-input.js\n **/","import eventMatches from '../polyfills/event-matches';\nimport '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport optimizedResize from '../misc/resize';\n\nexport default class ResponsiveTable {\n  /**\n   * Responsive Table\n   * @implements components\n   * @param {HTMLElement} element The root element of tables\n   * @param {Object} [options] the... options\n   * @param {string} [options.selectorInit] selector initialization\n   * @param {string} [options.selectorExpandCells] css selector for expand\n   * @param {string} [options.expandableRow] css selector for expand\n   * @param {string} [options.selectorParentRows] css selector for rows housing expansion\n   * @param {string} [options.selectorTableBody] root css for table body\n   * @param {string} [options.overflowMenu] any overflow menus\n   * @param {string} [options.eventTrigger] selector for event bubble capture points\n   * @param {string} [options.eventParentContainer] used find the bubble container\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('Responsive Tables requires a DOM element');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.container = element.parentNode; // requires the immediate parent to be the container\n    this.expandCells = [...this.element.querySelectorAll(this.options.selectorExpandCells)];\n    this.expandableRows = [...this.element.querySelectorAll(this.options.selectorExpandableRows)];\n    this.parentRows = [...this.element.querySelectorAll(this.options.selectorParentRows)];\n    this.tableBody = this.element.querySelector(this.options.selectorTableBody);\n\n    this.zebraStripe();\n    this.initExpandableRows();\n    this.initOverflowMenus();\n\n    this.eventHandlers = {\n      expand: this.toggleRowExpand,\n      sort: this.toggleSort,\n      'select-all': this.toggleSelectAll,\n    };\n\n    this.element.addEventListener('click', evt => {\n      const eventElement = eventMatches(evt, this.options.eventTrigger);\n      if (eventElement) {\n        this.emitEvent(eventElement, evt);\n      }\n    });\n\n    this.constructor.components.set(this.element, this);\n  }\n\n  /**\n   * Create an object to be used in event emission\n   */\n  getEventDetails = (element, data, evt) => {\n    const { event } = data;\n    const label = (data.label) ? data.label : '';\n    const previousValue = (data.previousValue) ? data.previousValue : '';\n    const initialEvt = evt;\n\n    return {\n      element,\n      event,\n      label,\n      previousValue,\n      initialEvt,\n    };\n  }\n\n  /**\n   * Standardize way to emit events\n   */\n  emitEvent = (element, evt) => {\n    const detail = this.getEventDetails(element, element.dataset, evt);\n\n    const eventBefore = new CustomEvent(`before${detail.event}`, {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    const eventAfter = new CustomEvent(`${detail.event}`, {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    const canceled = !this.element.dispatchEvent(eventBefore);\n\n    if (!canceled) {\n      this.eventHandlers[detail.event](detail);\n      this.element.dispatchEvent(eventAfter);\n    }\n  }\n\n  /**\n   * Zebra stripes - done in javascript to handle expandable rows\n   */\n  zebraStripe = () => {\n    this.parentRows.forEach((item, index) => {\n      if (index % 2 === 0) {\n        item.classList.add(this.options.classParentRowEven);\n        if (item.nextElementSibling.classList.contains(this.options.classExpandableRow)) {\n          item.nextElementSibling.classList.add(this.options.classExpandableRowEven);\n        }\n      }\n    });\n  }\n\n  /**\n   * Find all expandable rows and remove them from the DOM\n   */\n  initExpandableRows = () => {\n    this.expandableRows.forEach(item => {\n      item.classList.remove(this.options.classExpandableRowHidden);\n      this.tableBody.removeChild(item);\n    });\n  }\n\n  /**\n   * Because tables has an overflow-x on it, we need to pop the overflow\n   * options outside of the table. This appends to the body and tags a resize\n   * listener to reposition when needed\n   */\n  initOverflowMenus = () => {\n    if (!this.element.querySelector(this.options.selectorOverflowMenu)) {\n      return false;\n    }\n\n    const menuMap = [...this.element.querySelectorAll(this.options.selectorOverflowMenu)].map(menu => {\n      return {\n        element: menu,\n        optionMenu: menu.querySelector(this.options.selectorOverflowMenuOptions),\n      };\n    });\n\n    optimizedResize.add(() => {\n      menuMap.forEach(menu => {\n        this.placeOverflow({\n          detail: menu,\n        });\n      });\n    });\n\n    menuMap.forEach(menu => {\n      document.body.appendChild(menu.optionMenu);\n      this.placeOverflow({\n        detail: menu,\n      });\n    });\n  }\n\n  /**\n   * When called, finds the position of the icon supplied and positions\n   * the menu relative to that\n   *\n   * Uses fixed because getBoundingClientRect is relative to viewport\n   */\n  placeOverflow = (evt) => {\n    const { element, optionMenu } = evt.detail;\n\n    const icon = element.querySelector(this.options.selectorOverflowMenuIcon);\n    const position = icon.getBoundingClientRect();\n\n    optionMenu.style.position = 'fixed';\n    optionMenu.style.top = `${position.top}px`;\n    optionMenu.style.left = `${position.right}px`;\n    optionMenu.style.right = 'auto';\n  }\n\n  /**\n   * On trigger, insert the expandable row back in\n   */\n  toggleRowExpand = (detail) => {\n    const element = detail.element;\n    const parent = eventMatches(detail.initialEvt, this.options.eventParentContainer);\n\n    const index = this.expandCells.indexOf(element);\n    if (element.dataset.previousValue === undefined || element.dataset.previousValue === 'expanded') {\n      element.dataset.previousValue = 'collapsed';\n      this.tableBody.insertBefore(this.expandableRows[index], this.parentRows[index + 1]);\n    } else {\n      this.tableBody.removeChild(parent.nextElementSibling);\n      element.dataset.previousValue = 'expanded';\n    }\n  }\n\n  /**\n   * On trigger, flip the sort icon\n   */\n  toggleSort = (detail) => {\n    const { element, previousValue } = detail;\n\n    if (!previousValue || previousValue === 'descending') {\n      element.dataset.previousValue = 'ascending';\n      element.classList.add(this.options.classTableSortAscending);\n    } else {\n      element.dataset.previousValue = 'descending';\n      element.classList.remove(this.options.classTableSortAscending);\n    }\n  }\n\n  /**\n   * On trigger, check all checkboxes\n   */\n  toggleSelectAll = (detail) => {\n    const { element, previousValue } = detail;\n    const inputs = [...this.element.querySelectorAll(this.options.selectorCheckbox)];\n    if (!previousValue || previousValue === 'toggled') {\n      inputs.forEach(item => item.checked = true);\n      element.dataset.previousValue = 'off';\n    } else {\n      inputs.forEach(item => item.checked = false);\n      element.dataset.previousValue = 'toggled';\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  static components = new WeakMap();\n\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  static options = {\n    selectorInit: '[data-responsive-table]',\n    selectorExpandCells: '.bx--table-expand',\n    selectorExpandableRows: '.bx--expandable-row',\n    selectorParentRows: '.bx--parent-row',\n    selectorTableBody: '.bx--table-body',\n    selectorOverflowMenu: '[data-overflow-menu]',\n    selectorCheckbox: '.bx--checkbox',\n    selectorOverflowMenuIcon: '.bx--overflow-menu__icon',\n    selectorOverflowMenuOptions: '.bx--overflow-menu__options',\n    classParentRowEven: 'bx--parent-row--even',\n    classExpandableRow: 'bx--expandable-row',\n    classExpandableRowEven: 'bx--expandable-row--even',\n    classExpandableRowHidden: 'bx--expandable-row--hidden',\n    classTableSortAscending: 'bx--table-sort--ascending',\n    eventTrigger: '[data-event]',\n    eventParentContainer: '[data-parent-row]',\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/responsive-table.js\n **/","// mdn resize function\n\nconst optimizedResize = (function optimizedResize() {\n  const callbacks = [];\n  let running = false;\n\n  // run the actual callbacks\n  function runCallbacks() {\n    callbacks.forEach((callback) => {\n      callback();\n    });\n\n    running = false;\n  }\n\n  // fired on resize event\n  function resize() {\n    if (!running) {\n      running = true;\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(runCallbacks);\n      } else {\n        setTimeout(runCallbacks, 66);\n      }\n    }\n  }\n\n  // adds callback to loop\n  function addCallback(callback) {\n    if (callback) {\n      callbacks.push(callback);\n    }\n  }\n\n  return {\n    // public method to add additional callback\n    add: (callback) => {\n      if (!callbacks.length) {\n        window.addEventListener('resize', resize);\n      }\n      addCallback(callback);\n    },\n  };\n}());\n\nexport default optimizedResize;\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/misc/resize.js\n **/","import '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport eventMatches from '../polyfills/event-matches';\nimport '../polyfills/object-assign';\nimport toggleClass from '../polyfills/toggle-class';\nimport on from '../misc/on';\n\nexport default class Table {\n  /**\n   * Data table.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (event) => this.handleClick(event));\n  }\n\n  /**\n   * Instantiates a data table of the given element.\n   * @param {HTMLElement} element The element working as a data table.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Sets up the given node to instantiate data tables in.\n   * If the given element indicates that it's an data table, instantiates it.\n   * Otherwise, lazily instantiates data table when it's clicked on.\n   * @param {Node} target The DOM node to instantiate data tables in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find data tables.\n   * @param {string} [options.selectorTitle] The CSS selector to find column titles.\n   * @param {string} [options.selectorRow] The CSS selector to find rows.\n   * @param {string} [options.selectorCheckbox] The CSS selector to find check boxes.\n   * @param {string} [options.classSortState] The CSS class for the sorting state.\n   * @param {string} [options.classCheckState] The CSS class for the checked state.\n   * @param {string} [options.eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @param {string} [options.eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @param {string} [options.eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @param {string} [options.eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   * @returns {Handle} The handle to remove the event listener to handle clicking.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      return on(target, 'click', (event) => {\n        const element = eventMatches(event, effectiveOptions.selectorInit);\n        if (element && !this.components.has(element)) {\n          this.create(element, effectiveOptions).handleClick(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles click on data table.\n   * * If the click is on a column title, toggles its sorting state.\n   * * If the click is on a check box, toggles the check box.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    const title = eventMatches(event, this.options.selectorTitle);\n    const row = eventMatches(event, this.options.selectorRow);\n    const checkbox = eventMatches(event, this.options.selectorCheckbox);\n    if (title) {\n      this.toggleState('Sort', title);\n    }\n    if (row && checkbox) {\n      this.toggleState('Check', row);\n    }\n  }\n\n  /**\n   * The callback called once toggling is finished or is canceled.\n   * @callback Table~toggleStateCallback\n   * @param {Error} error\n   *   An error object with `true` in its `canceled` property if the toggling is canceled.\n   *   Cancellation happens if the handler of a custom event, that is fired before toggling happens,\n   *   calls `.preventDefault()` against the event.\n   * @param {HTMLElement} element The toggled element.\n   * @param {boolean} newState The new toggle state.\n   */\n\n  /**\n   * Toggles a sorting state or a check box's state.\n   * @param {string} type\n   *   Specifies what state to toggle:\n   *   * `\"Sort\"` for toggling a sorting state.\n   *   * `\"Check\"` for toggling a check box's state.\n   * @param {HTMLElement} element The DOM element to toggle its state.\n   * @param {Table~toggleStateCallback} callback The callback called once toggling is finished or is canceled.\n   */\n  toggleState(type, element, callback) {\n    const newState = !element.classList.contains(this.options[`class${type}State`]);\n    const eventStart = new CustomEvent(this.options[`eventBefore${type}Toggled`], {\n      bubbles: true,\n      cancelable: true,\n      detail: { newState },\n    });\n\n    // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called\n    if (element.dispatchEvent(eventStart)) {\n      toggleClass(element, this.options[`class${type}State`], newState);\n      // this._changeActive(item);\n      element.dispatchEvent(new CustomEvent(this.options[`eventAfter${type}Toggled`], {\n        bubbles: true,\n        cancelable: true,\n        detail: { newState },\n      }));\n      if (callback) {\n        callback(null, element, newState);\n      }\n    } else {\n      const error = new Error('Toggling on table has been canceled.');\n      error.canceled = true;\n      error.element = element;\n      error.newState = newState;\n      if (callback) {\n        callback(error);\n      }\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and data table instance.\n   * @member Table.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode Table.create .create()}, or {@linkcode Table.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode Table.init .init()} works.\n   * @member Table.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find data tables.\n   * @property {string} [selectorTitle] The CSS selector to find column titles.\n   * @property {string} [selectorRow] The CSS selector to find rows.\n   * @property {string} [selectorCheckbox] The CSS selector to find check boxes.\n   * @property {string} [classSortState] The CSS class for the sorting state.\n   * @property {string} [classCheckState] The CSS class for the checked state.\n   * @property {string} [eventBeforeSortToggled] The name of the custom event fired before a column's sorting is toggled.\n   * @property {string} [eventAfterSortToggled] The name of the custom event fired after a column's sorting is toggled.\n   * @property {string} [eventBeforeCheckToggled] The name of the custom event fired before a check box is toggled.\n   * @property {string} [eventAfterCheckToggled] The name of the custom event fired after a check box is toggled.\n   */\n  static options = {\n    selectorInit: '[data-table]',\n    selectorTitle: '.bx--table__column-title',\n    selectorRow: '.bx--table__row',\n    selectorCheckbox: '.bx--checkbox',\n    classSortState: 'bx--table__column-title--rotated',\n    classCheckState: 'bx--table__row--checked',\n    eventBeforeSortToggled: 'table-sort-beingtoggled',\n    eventAfterSortToggled: 'table-sort-toggled',\n    eventBeforeCheckToggled: 'table-check-beingtoggled',\n    eventAfterCheckToggled: 'table-check-toggled',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/table.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport debounce from 'lodash.debounce';\n\nexport default class DetailPageHeader {\n\n  /**\n   * The Detail Page Header.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a page header.\n   * @param {Object} [options] The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    // Debounce scroll event calls to handleScroll\n    const debouncedScroll = debounce(this.handleScroll.bind(this), 50);\n\n    this.element.ownerDocument.defaultView.addEventListener('scroll', debouncedScroll);\n  }\n\n  /**\n   * Instantiates detail page header of the given element.\n   * @param {HTMLElement} element The element.\n   * @param {Object} [options] The component options.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates the detail page header in the given element.\n   * If the given element indicates that it's a detail page header (animated) (having `data-detail-page-header` attribute), instantiates it.\n   * Otherwise, instantiates detail page header by searching for detail page header in the given node.\n   * @param {Node} target The DOM node to instantiate detail page header in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find detail page headers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Adds class to header based on users position on the page\n   */\n  handleScroll() {\n    if (this.element.ownerDocument.defaultView.scrollY > 101) {\n      this.element.classList.add(this.options.slideUp);\n    } else {\n      this.element.classList.remove(this.options.slideUp);\n    }\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and detail page header instance.\n   * @member DetailPageHeader.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode DetailPageHeader.create .create()}, or {@linkcode DetailPageHeader.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode DetailPageHeader.init .init()} works.\n   * @member DetailPageHeader.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find detail page headers.\n   */\n  static options = {\n    slideUp: 'bx--detail-page-header--with-tabs--animated-slide-up',\n    selectorInit: '[data-detail-page-header]',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/detail-page-header.js\n **/","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.debounce/index.js\n ** module id = 26\n ** module chunks = 0\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\nimport on from '../misc/on';\n\nexport default class LeftNav {\n  /**\n   * Left Navigation.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.leftNavSectionActive = false;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hookOpenActions();\n    this.hookListSectionEvents();\n    this.hookListItemsEvents();\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n  }\n\n  /**\n   * Instantiates a left navigation of the given element.\n   * @param {HTMLElement} element The element working as the left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a left navigation in the given node.\n   * If the given element indicates that it's a left navigation (having `data-left-nav-container` attribute), instantiates it.\n   * Otherwise, instantiates left navigation by searching for left navigation in the given node.\n   * @param {Node} target The DOM node to instantiate left navigation in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find left nav containers.\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [...target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Closes the menu.\n   */\n  closeMenu() {\n    this.element.classList.remove(this.options.classActiveLeftNav);\n    this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.remove(this.options.classActiveTrigger);\n    this.element.querySelector(this.options.selectorLeftNav).parentNode.setAttribute('aria-expanded', 'false');\n  }\n\n  /**\n   * Toggles the menu to open and close.\n   */\n  toggleMenu() {\n    const leftNavContainer = this.element.querySelector(this.options.selectorLeftNav).parentNode;\n    this.element.classList.toggle(this.options.classActiveLeftNav);\n    this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).classList.toggle(this.options.classActiveTrigger);\n    if (leftNavContainer.getAttribute('aria-expanded') === 'false') leftNavContainer.setAttribute('aria-expanded', 'true');\n    else leftNavContainer.setAttribute('aria-expanded', 'false');\n  }\n\n  /**\n   * Adds a transitional animation to the navSection\n   */\n  animateNavSection(selectedNav) {\n    const selectedNavValue = selectedNav.dataset.leftNavSection;\n    const selectedNavLink = selectedNav.querySelector(this.options.selectorLeftNavSectionLink);\n    const leftNav = this.element.querySelector(this.options.selectorLeftNav);\n    const leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n\n    selectedNav.classList.remove(this.options.classNavSection);\n    selectedNav.classList.remove(`${this.options.classNavSection}--${selectedNavValue}`);\n    selectedNav.classList.add(this.options.classNavSectionTransition);\n    if (leftNavSections.children[0] === selectedNav) selectedNav.classList.add(`${this.options.classNavSectionTransition}--50`); // First child only move 50px\n    else selectedNav.classList.add(`${this.options.classNavSectionTransition}--100`); // Second move 100px\n    selectedNav.setAttribute('data-left-nav-section', selectedNavValue);\n    /* Not sure what trick more performant*/\n    setTimeout(() => {\n      selectedNav.classList.add(`${this.options.classNavSectionTransition}--0`);\n    }, 100); // Could probably use a promise here\n\n    selectedNavLink.classList.remove(this.options.classNavSectionLink);\n    selectedNavLink.classList.add(this.options.classNavHeaderTitle);\n    selectedNavLink.setAttribute('data-left-nav-current-section-title', '');\n    selectedNavLink.removeAttribute('data-left-nav-section-link');\n\n    this.element.insertBefore(selectedNav, leftNav);\n  }\n\n  /**\n   * Adds a transitional animation to the navigation items on nav section click\n   */\n  animateNavList(selectedNavTitle) {\n    const currentLeftNavList = this.element.querySelector(`${this.options.selectorLeftNavList}:not(.bx--left-nav__main-nav--hidden)`);\n    const newLeftNavList = this.element.querySelector(`[data-left-nav-list=${selectedNavTitle}]`);\n    const currentLeftNavItems = [...currentLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)].reverse();\n    const newLeftNavItems = [...newLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)];\n\n    const fadeOutTime = 300;\n    let counter = 0;\n    const counterIteration = fadeOutTime / currentLeftNavItems.length; // Length of animation divided by number of items\n    currentLeftNavItems.forEach(item => {\n      item.setAttribute('tabIndex', '-1');\n      setTimeout(() => {\n        item.classList.add(this.options.classItemFade);\n      }, counter);\n      counter += counterIteration;\n    });\n\n    newLeftNavItems.forEach(item => {\n      item.setAttribute('tabIndex', '0');\n      item.classList.remove(this.options.classItemFade);\n    });\n\n    setTimeout(() => {\n      currentLeftNavList.classList.add(this.options.classListHidden);\n      currentLeftNavList.classList.add(this.options.classListTop);\n      currentLeftNavList.setAttribute('aria-hidden', 'true');\n      newLeftNavList.classList.remove(this.options.classListHidden);\n      setTimeout(() => { newLeftNavList.classList.remove(this.options.classListTop); }, 100);\n      newLeftNavList.setAttribute('aria-hidden', 'false');\n    }, fadeOutTime + 100); // Wait for items to fade out.\n  }\n\n  hookOpenActions() {\n    const openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n    const closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n\n    openBtn.addEventListener('click', () => {\n      this.element.tabIndex = '0';\n      this.toggleMenu();\n    });\n\n    openBtn.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.element.tabIndex = '0';\n        this.toggleMenu();\n      }\n    });\n\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        this.element.tabIndex = '-1';\n        this.closeMenu();\n      });\n\n      closeBtn.addEventListener('keydown', (evt) => {\n        if (evt.which === 13) {\n          this.element.tabIndex = '-1';\n          this.closeMenu();\n        }\n      });\n    }\n\n    this.element.ownerDocument.addEventListener('keydown', (evt) => {\n      if ((evt.which === 27) && this.element.classList.contains(this.options.classActiveLeftNav)) {\n        this.closeMenu();\n      }\n    });\n  }\n\n  /**\n   * Addes Event listeners to list sections\n   */\n  hookListSectionEvents() {\n    const leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n    leftNavSections.addEventListener('click', (evt) => {\n      this.handleSectionItemClick(evt, leftNavSections);\n    });\n\n    leftNavSections.addEventListener('keydown', (evt) => {\n      if (evt.which === 13) {\n        this.handleSectionItemClick(evt, leftNavSections);\n        this.element.querySelector(this.options.selectorLeftNavCurrentSectionTitle).focus();\n      }\n    });\n  }\n\n  /**\n   * Adds event listeners to list items\n   */\n  hookListItemsEvents() {\n    const leftNavList = [...this.element.querySelectorAll(this.options.selectorLeftNavList)];\n    leftNavList.forEach(list => {\n      list.addEventListener('click', (evt) => {\n        const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n        if (leftNavItem) {\n          const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n          const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n          const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n          if (flyoutItem) {\n            this.addActiveListItem(flyoutItem);\n          } else if (childItem) {\n            if (childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n              const flyoutMenu = childItem.querySelector(this.options.selectorLeftNavFlyoutMenu);\n              flyoutMenu.classList.toggle(this.options.classFlyoutDisplayed);\n            } else {\n              this.addActiveListItem(childItem);\n            }\n          } else if (hasChildren) {\n            this.handleNestedListClick(leftNavItem);\n          } else {\n            this.addActiveListItem(leftNavItem);\n          }\n        }\n      });\n      list.addEventListener('keydown', (evt) => {\n        if (evt.which === 13) {\n          const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n          if (leftNavItem) {\n            const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n            const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n            const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n            if (flyoutItem) {\n              this.addActiveListItem(flyoutItem);\n            } else if (childItem) {\n              if (!childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n                this.addActiveListItem(childItem);\n              } else {\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${childItem.offsetTop - this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n                childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${childItem.offsetLeft + Math.round(childItem.offsetWidth)}px`;\n              }\n            } else if (hasChildren) {\n              this.handleNestedListClick(leftNavItem);\n            } else {\n              this.addActiveListItem(leftNavItem);\n            }\n          }\n        }\n      });\n    });\n    const flyouts = [...this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout)];\n    flyouts.forEach(flyout => {\n      flyout.addEventListener('mouseenter', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${flyout.offsetTop - this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${flyout.offsetLeft + Math.round(flyout.offsetWidth)}px`;\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.toggle(this.options.classFlyoutDisplayed);\n      });\n      flyout.addEventListener('mouseleave', () => {\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'true');\n        flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      });\n    });\n  }\n\n  /**\n   * Hides all flyout menus.\n   */\n  hideAllFlyoutMenus() {\n    const flyoutMenus = [...this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu)];\n    flyoutMenus.forEach(menu => {\n      menu.setAttribute('aria-hidden', 'true');\n      menu.classList.remove(this.options.classFlyoutDisplayed);\n    });\n  }\n\n  /**\n   * Sets a list item as active.\n   * @param {Object} item The active list item.\n   */\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavAllListItems)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        if (!currentItem.contains(item)) {\n          currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n        } else {\n          currentItem.classList.add(this.options.classActiveLeftNavListItem);\n        }\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n    this.closeMenu();\n    this.hideAllFlyoutMenus();\n    this.closeMenu();\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the left navigation when document is clicked outside the left navigation.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n    const isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n    const shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n    let flyoutOpen;\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      flyoutOpen = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.contains(this.options.classFlyoutDisplayed);\n    }\n    if (isOfSelf && this.element.tagName === 'A') {\n      evt.preventDefault();\n    }\n    if (shouldClose) {\n      this.closeMenu();\n    }\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      if (flyoutOpen && !isOfSelf && isOpen) {\n        this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      }\n    }\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n  handleNestedListClick(listItem) {\n    const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n    this.hideAllFlyoutMenus();\n    toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n    const listItems = [...listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n    listItems.forEach(item => {\n      if (isOpen) {\n        listItem.querySelector(this.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'true');\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n      } else {\n        listItem.querySelector(this.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'false');\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n      }\n    });\n  }\n\n  handleSectionItemClick(evt, leftNavSections) { // Sorry\n    const leftNavSectionItem = eventMatches(evt, this.options.selectorLeftNavSection);\n    if (leftNavSectionItem) {\n      // currently selected\n      const selectedLeftNavSectionItem = this.element.querySelector(this.options.selectorLeftNavCurrentSection);\n      const selectedLeftNavSectionItemTitle = selectedLeftNavSectionItem.querySelector(this.options.selectorLeftNavCurrentSectionTitle);\n      const selectedLeftNavSectionItemIcon = this.element.querySelector(this.options.selectorLeftNavCurrentSectionIcon);\n      const selectedLeftNavSectionItemUse = selectedLeftNavSectionItemIcon.querySelector('use');\n      const selectedLeftNavSectionValue = selectedLeftNavSectionItem.dataset.leftNavCurrentSection;\n\n      // clicked on item\n      const leftNavSectionItemLink = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionLink);\n      const leftNavSectionItemIcon = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionIcon);\n      const leftNavSectionItemIconUse = leftNavSectionItemIcon.querySelector('use');\n      const leftNavSectionValue = leftNavSectionItem.dataset.leftNavSection;\n\n\n      if (this.leftNavSectionActive) {\n        return;\n      }\n      this.leftNavSectionActive = true;\n\n      const newLeftNavSectionItem = document.createElement('li');\n      newLeftNavSectionItem.setAttribute('data-left-nav-section', selectedLeftNavSectionValue);\n      newLeftNavSectionItem.classList.add(this.options.classNavSection);\n      newLeftNavSectionItem.classList.add(`${this.options.classNavSection}--${selectedLeftNavSectionValue}`);\n\n      const newLeftNavSectionItemAnchor = document.createElement('a');\n      newLeftNavSectionItemAnchor.setAttribute('href', 'javascript:void(0)'); // eslint-disable-line no-script-url\n      newLeftNavSectionItemAnchor.setAttribute('tabindex', 0);\n      newLeftNavSectionItemAnchor.classList.add(this.options.classNavSectionAnchor);\n\n      const newLeftNavSectionItemIcon = selectedLeftNavSectionItemIcon.cloneNode(true);\n      // IE11 doesn't support classList on SVG, must revert to className\n      newLeftNavSectionItemIcon.setAttribute('class', 'bx--left-nav__section--taxonomy-icon');\n      newLeftNavSectionItemIcon.removeAttribute('data-left-nav-current-section-icon');\n      newLeftNavSectionItemIcon.setAttribute('data-left-nav-section-icon', selectedLeftNavSectionValue);\n\n      const newLeftNavSectionItemLink = document.createElement('span');\n      newLeftNavSectionItemLink.setAttribute('data-left-nav-section-link', '');\n      newLeftNavSectionItemLink.classList.add(this.options.classNavSectionLink);\n      newLeftNavSectionItemLink.textContent = selectedLeftNavSectionItemTitle.textContent;\n\n      this.animateNavSection(leftNavSectionItem);\n      this.animateNavList(leftNavSectionValue);\n\n      newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemIcon);\n      newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemLink);\n      newLeftNavSectionItem.appendChild(newLeftNavSectionItemAnchor);\n      leftNavSections.insertBefore(newLeftNavSectionItem, leftNavSections.firstChild);\n\n      setTimeout(() => {\n        selectedLeftNavSectionItemTitle.textContent = leftNavSectionItemLink.textContent;\n        selectedLeftNavSectionItem.setAttribute('data-left-nav-current-section', leftNavSectionValue);\n        selectedLeftNavSectionItemIcon.setAttribute('data-left-nav-current-section-icon', leftNavSectionValue);\n        selectedLeftNavSectionItemUse.setAttribute('xlink:href', leftNavSectionItemIconUse.getAttribute('xlink:href'));\n\n        leftNavSectionItem.parentNode.removeChild(leftNavSectionItem); // Cant use .remove() because of IE11\n        this.leftNavSectionActive = false;\n      }, 450); // Wait for nav items to animate\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode LeftNav.create .create()}, or {@linkcode LeftNav.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode LeftNav.init .init()} works.\n   * @member LeftNav.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find left nav containers.\n   * @property {string} [selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @property {string} [selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @property {string} [selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @property {string} [selectorLeftNavToggle] The data attribute selector for the button that will show and hide the left navigation.\n   * @property {string} [selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @property {string} [selectorLeftNavNestedListItem] The data attribute selector for all nested list items in the left navigation.\n   * @property {string} [selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @property {string} [selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @property {string} [selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @property {string} [selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @property {string} [selectorLeftNavCurrentPage] The data attribute selector for the current section title in the left nav header.\n   * @property {string} [classActiveLeftNav] The class name for when a left nav is active.\n   * @property {string} [classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @property {string} [classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @property {string} [classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @property {string} [classActiveSection] The class name for an active section item in the left nav header.\n   * @property {string} [classItemHasChildren] The class name for when a list item has children.\n   */\n  static options = {\n    selectorInit: '[data-left-nav-container]',\n    // Data Attribute selectors\n    selectorLeftNav: '[data-left-nav]',\n    selectorLeftNavList: '[data-left-nav-list]',\n    selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n    selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n    selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n    selectorLeftNavListItem: '[data-left-nav-item]',\n    selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n    selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n    selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n    selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n    selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n    selectorLeftNavSections: '[data-left-nav-sections]',\n    selectorLeftNavSection: '[data-left-nav-section]',\n    selectorLeftNavSectionLink: '[data-left-nav-section-link]',\n    selectorLeftNavSectionIcon: '[data-left-nav-section-icon]',\n    selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n    selectorLeftNavCurrentSectionTitle: '[data-left-nav-current-section-title]',\n    selectorLeftNavCurrentSectionIcon: '[data-left-nav-current-section-icon]',\n    selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n    selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n    selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n    // CSS Class Selectors\n    classActiveTrigger: 'bx--left-nav__trigger--active',\n    classActiveLeftNav: 'bx--left-nav--active',\n    classActiveLeftNavListItem: 'bx--active-list-item',\n    classExpandedLeftNavListItem: 'bx--main-nav__parent-item--expanded',\n    classFlyoutDisplayed: 'bx--nested-list__flyout-menu--displayed',\n    classItemHasChildren: 'bx--main-nav__parent-item--has-children',\n    classNavSection: 'bx--left-nav__section',\n    classNavSectionTransition: 'bx--left-nav__section--transition',\n    classNavSectionAnchor: 'bx--left-nav__section--anchor',\n    classNavSectionLink: 'bx--left-nav__section--link',\n    classNavHeaderTitle: 'bx--left-nav__header--title',\n    classItemFade: 'bx--main-nav__parent-item--fade',\n    classItemHidden: 'bx--main-nav__parent-item--hidden',\n    classListHidden: 'bx--left-nav__main-nav--hidden',\n    classListTop: 'bx--left-nav__main-nav--top',\n  };\n\n  /**\n   * The map associating DOM element and left navigation instance.\n   * @member LeftNav.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\n\nexport default class UnifiedHeader {\n\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n    this.constructor.components.set(this.element, this);\n  }\n\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  release() {\n    if (this.handleDocumentClick) {\n      this.element.ownerDocument.removeEventListener('click', (evt) => this.handleDocumentClick(evt));\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and left navigation instance.\n   * @member UnifiedHeader.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode UnifiedHeader.create .create()}, or {@linkcode UnifiedHeader.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode UnifiedHeader.init .init()} works.\n   * @member UnifiedHeader.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find unified headers.\n   */\n  static options = {\n    selectorInit: '[data-unified-header]',\n    // Data Attribute selectors\n    // CSS Class Selectors\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/unified-header.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\nimport eventMatches from '../polyfills/event-matches';\n\nexport default class InlineLeftNav {\n  /**\n   * Spinner indicating loading state.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a spinner.\n   * @param {Object} options The component options.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.element = element;\n\n    this.constructor.components.set(this.element, this);\n    this.hookListItemsEvents();\n  }\n\n  /**\n   * Instantiates spinner of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates spinner in the given node.\n   * If the given element indicates that it's an spinner (having `data-loading` attribute), instantiates it.\n   * Otherwise, instantiates spinners by searching for spinners in the given node.\n   * @param {Node} target The DOM node to instantiate spinners in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorInit] The CSS selector to find inline left navs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  hookListItemsEvents() {\n    const leftNavList = this.element.querySelector(this.options.selectorLeftNavList);\n    leftNavList.addEventListener('click', (evt) => {\n      const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n      if (leftNavItem) {\n        const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n        const hasChildren = leftNavItem.classList.contains('left-nav-list__item--has-children');\n        if (childItem) {\n          this.addActiveListItem(childItem);\n        } else if (hasChildren) {\n          this.handleNestedListClick(leftNavItem, evt);\n        } else {\n          this.addActiveListItem(leftNavItem);\n        }\n      }\n    });\n    [... this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(item => {\n      item.addEventListener('keydown', (evt) => {\n        const leftNavItemWithChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n        if (leftNavItemWithChildren && evt.which === 13) {\n          this.handleNestedListClick(leftNavItemWithChildren, evt);\n        }\n      });\n    });\n  }\n\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * The nested list is expanded and the icon is rotated.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   * @param {Event} event The event triggering this method.\n   */\n   handleNestedListClick(listItem, evt) {\n     const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n     if (!('leftNavItemLink' in evt.target.dataset)) {\n       toggleClass(listItem, this.options.classExpandedLeftNavListItem, !isOpen);\n     }\n     const list = listItem.querySelector(this.options.selectorLeftNavNestedList);\n     const listItems = [... list.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n     listItems.forEach(item => {\n       if (isOpen) {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n       } else {\n         item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n       }\n     });\n   }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and spinner instance.\n   * @member InlineLeftNav.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode InlineLeftNav.create .create()}, or {@linkcode InlineLeftNav.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode InlineLeftNav.init .init()} works.\n   * @member InlineLeftNav.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find inline left navs.\n   */\n  static options = {\n    selectorInit: '[data-inline-left-nav]',\n    // Data Attribute selectors\n    selectorLeftNavList: '[data-inline-left-nav-list]',\n    selectorLeftNavNestedList: '[data-inline-left-nav-nested-list]',\n    selectorLeftNavListItem: '[data-inline-left-nav-item]',\n    selectorLeftNavListItemLink: '[data-inline-left-nav-item-link]',\n    selectorLeftNavNestedListItem: '[data-inline-left-nav-nested-item]',\n    selectorLeftNavListItemHasChildren: '[data-inline-left-nav-with-children]',\n    // CSS Class Selectors\n    classActiveLeftNavListItem: 'left-nav-list__item--active',\n    classExpandedLeftNavListItem: 'left-nav-list__item--expanded',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/inline-left-nav.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport on from '../misc/on';\n\nexport default class ProfileSwitcher {\n  /**\n   * Profile Switcher.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a profile switcher.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorProfileSwitcher] The data attribute selector for the profile switcher.\n   * @param {string} [options.selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n   * @param {string} [options.selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n   * @param {string} [options.selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n   * @param {string} [options.selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n   * @param {string} [options.selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n   * @param {string} [options.selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.hDocumentClick = on(this.element.ownerDocument, 'click', (evt) => this.handleDocumentClick(evt));\n\n    this.element.addEventListener('dropdown-beingselected', (event) => {\n      if (event.target.querySelector(this.options.selectorAccountDropdown) !== null) {\n        if (event.detail.item.querySelector(this.options.classLinkedIcon) !== null) {\n          this.element.linkedAccount = event.detail.item.querySelector(this.options.selectorAccountSlLinked).cloneNode(true);\n          this.element.isLinked = true;\n          this.element.linkedIcon = event.detail.item.querySelector(this.options.classLinkedIcon).cloneNode(true);\n        } else {\n          this.element.linkedAccount = '';\n          this.element.isLinked = false;\n          this.element.linkedIcon = '';\n        }\n      }\n    });\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('keydown', (event) => this.toggle(event));\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseenter', (event) => {\n      this.getLinkedData(event);\n      this.determineSwitcherValues(true);\n    });\n\n    this.element.querySelector(this.options.selectorToggle).addEventListener('mouseleave', (event) => {\n      this.getLinkedData(event);\n      this.determineSwitcherValues(false);\n    });\n\n    this.element.ownerDocument.addEventListener('keyup', () => this.handleBlur());\n  }\n\n  /**\n   * Instantiates a profile switcher of the given element.\n   * @param {HTMLElement} element The element working as the profile switcher.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a profile switcher in the given node.\n   * If the given element indicates that it's a profile switcher (having `data-profile-switcher` attribute), instantiates it.\n   * Otherwise, instantiates profile switcher by searching for profile switcher in the given node.\n   * @param {Node} target The DOM node to instantiate profile switcher in. Should be a document or an element.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find profile switchers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Opens and closes the menu.\n   * @param {Event} event The event triggering this method.\n   */\n  toggle(event) {\n    const isOfSelf = this.element.contains(event.target);\n    if (event.which === 13 || event.which === 32) {\n      if (isOfSelf) {\n        this.element.classList.toggle(this.options.classSwitcherOpen);\n      } else if (!isOfSelf && this.element.classList.contains(this.options.classSwitcherOpen)) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      }\n    }\n  }\n\n  getLinkedData(event) {\n    if (event.target.querySelector(this.options.selectorLinkedAccount) !== null) {\n      if (event.target.querySelector(this.options.selectorLinkedAccount).textContent.length > 1) {\n        this.element.isLinked = true;\n      } else {\n        this.element.isLinked = false;\n      }\n    }\n  }\n\n  handleBlur() {\n    if (!(this.element.contains(document.activeElement))) {\n      this.element.classList.remove(this.options.classSwitcherOpen);\n    }\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the profile switcherwhen document is clicked outside the left navigation or\n   * the user clicks the profile switcher while it is open.\n   * @param {Event} event The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggle = this.element.ownerDocument.querySelector(this.options.selectorToggle).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    if (isOfSelf) {\n      if (isToggle && isOpen) {\n        this.element.classList.remove(this.options.classSwitcherOpen);\n      } else if (isOpen) {\n        this.determineSwitcherValues();\n      } else {\n        this.element.classList.add(this.options.classSwitcherOpen);\n      }\n    } else {\n      this.element.classList.remove(this.options.classSwitcherOpen);\n    }\n  }\n\n  /**\n   * Handles logic to determine what text to display in profile switcher.\n   * If the text is over 25 characters long, truncate and add ellipses.\n   * Also adds logic to change the switcher width based on the width of the hovered\n   * profile switcher\n   * @param {boolean} isHovered boolean value passed by the event listener on bx--toggle.\n   */\n  determineSwitcherValues(isHovered) {\n    const linkedElement = this.element.querySelector(this.options.selectorLinkedAccount);\n    const nameElement = this.element.querySelector(this.options.selectorAccount);\n    const regionElement = this.element.querySelector(this.options.selectorRegion);\n    const orgElement = this.element.querySelector(this.options.selectorOrg);\n    const spaceElement = this.element.querySelector(this.options.selectorSpace);\n    const menuElement = this.element.querySelector(this.options.selectorMenu);\n    const isOpen = this.element.classList.contains(this.options.classSwitcherOpen);\n\n    if (linkedElement) {\n      if (this.element.isLinked) {\n        if (this.element.linkedAccount) {\n          linkedElement.appendChild(this.element.linkedAccount);\n        }\n        if (this.element.linkedIcon) {\n          linkedElement.appendChild(this.element.linkedIcon);\n        }\n      } else {\n        linkedElement.textContent = '';\n      }\n    }\n\n\n    let nameDropdownValue = '';\n    if (this.element.querySelector(this.options.selectorAccountDropdown)) {\n      if (this.element.isLinked) {\n        nameDropdownValue = this.element.querySelector(this.options.selectorAccountLinked).textContent;\n      } else {\n        nameDropdownValue = this.element.querySelector(this.options.selectorAccountDropdown).textContent;\n      }\n    }\n\n    let regionDropdownValue = '';\n    if (this.element.querySelector(this.options.selectorRegionDropdown)) {\n      regionDropdownValue = this.element.querySelector(this.options.selectorRegionDropdown).textContent;\n    }\n\n    let orgDropdownValue = '';\n    if (this.element.querySelector(this.options.selectorOrgDropdown)) {\n      orgDropdownValue = this.element.querySelector(this.options.selectorOrgDropdown).textContent;\n    }\n\n    let spaceDropdownValue = '';\n    if (this.element.querySelector(this.options.selectorSpaceDropdown)) {\n      spaceDropdownValue = this.element.querySelector(this.options.selectorSpaceDropdown).textContent;\n    }\n\n    let nameShort;\n    let orgShort;\n    let spaceShort;\n\n    if (isHovered && !isOpen) {\n      nameElement.textContent = nameDropdownValue;\n      orgElement.textContent = orgDropdownValue;\n      spaceElement.textContent = spaceDropdownValue;\n      regionElement.textContent = regionDropdownValue;\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    } else {\n      if (nameDropdownValue.length > 25) {\n        nameShort = nameDropdownValue.substr(0, 25) + '...';\n        nameElement.textContent = nameShort;\n      } else {\n        nameElement.textContent = nameDropdownValue;\n      }\n\n      if (orgDropdownValue.length > 25) {\n        orgShort = orgDropdownValue.slice(0, 12) + '...' + orgDropdownValue.slice(-13);\n        orgElement.textContent = orgShort;\n      } else {\n        orgElement.textContent = orgDropdownValue;\n      }\n\n      if (spaceDropdownValue.length > 25) {\n        spaceShort = spaceDropdownValue.substr(0, 25) + '...';\n        spaceElement.textContent = spaceShort;\n      } else {\n        spaceElement.textContent = spaceDropdownValue;\n      }\n\n      regionElement.textContent = regionDropdownValue;\n      menuElement.style.width = this.element.getBoundingClientRect().width + 'px';\n    }\n  }\n\n  release() {\n    if (this.hDocumentClick) {\n      this.hDocumentClick = this.hDocumentClick.release();\n    }\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The component options.\n   * @member ProfileSwitcher.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find profile switchers.\n   * @property {string} [selectorProfileSwitcher] The data attribute selector for the profile switcher.\n   * @property {string} [selectorAccount] The data attribute selector for the element containing the account name in the profile switcher.\n   * @property {string} [selectorOrg] The data attribute selector for the element containing the organization name in the profile switcher.\n   * @property {string} [selectorSpace] The data attribute selector for the element containing the space name in the profile switcher.\n   * @property {string} [selectorAccountDropdown] The data attribute selector for the dropdown item containing the current account name.\n   * @property {string} [selectorOrgDropdown] The data attribute selector for the dropdown item containing the current organization name.\n   * @property {string} [selectorSpaceDropdown] The data attribute selector for the dropdown item containing the current space name.\n   */\n  static options = {\n    selectorInit: '[data-profile-switcher]',\n    // Data Attribute selectors\n    selectorProfileSwitcher: '[data-profile-switcher]',\n    selectorToggle: '[data-profile-switcher-toggle]',\n    selectorMenu: '[data-switcher-menu]',\n    selectorLinkedAccount: '[data-switcher-account-sl]',\n    selectorAccount: '[data-switcher-account]',\n    selectorRegion: '[data-switcher-region]',\n    selectorOrg: '[data-switcher-org]',\n    selectorSpace: '[data-switcher-space]',\n    selectorDropdown: '[data-dropdown]',\n    selectorAccountDropdown: '[data-dropdown-account]',\n    selectorAccountSlDropdown: '[data-dropdown-account-sl]',\n    selectorAccountLinked: '[data-dropdown-account-linked]',\n    selectorAccountSlLinked: '[data-dropdown-account-sl-linked]',\n    selectorRegionDropdown: '[data-dropdown-region]',\n    selectorOrgDropdown: '[data-dropdown-org]',\n    selectorSpaceDropdown: '[data-dropdown-space]',\n    classSwitcherOpen: 'bx--account-switcher--open',\n    classLinkedIcon: '.bx--account-switcher__linked-icon',\n  };\n\n  /**\n   * The map associating DOM element and profile switcher instance.\n   * @member ProfileSwitcher.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/profile-switcher.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\n\nexport default class Pagination {\n  /**\n  * Pagination component.\n  * @implements Component\n  * @param {HTMLElement} element The element working as a pagination component.\n  * @param {Object} [options] The component options.\n  * @property {string} [selectorInit] The CSS selector to find pagination components.\n  * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n  * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n  * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n  * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n  * @property {string} [eventItemsPerPage]\n  *   The name of the custom event fired when a user changes the number of items per page.\n  *   event.detail.value contains the number of items a user wishes to see.\n  * @property {string} [eventPageNumber]\n  *   The name of the custom event fired when a user inputs a specific page number.\n  *   event.detail.value contains the value that the user input.\n  * @property {string} [eventPageChange]\n  *   The name of the custom event fired when a user goes forward or backward a page.\n  *   event.detail.direction contains the direction a user wishes to go.\n  */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.addEventListener('click', (evt) => {\n      if (evt.target.matches(this.options.selectorPageBackward)) {\n        const detail = {\n          initialEvt: evt,\n          element: evt.target,\n          direction: 'backward',\n        };\n        this.emitEvent(this.options.eventPageChange, detail);\n      } else if (evt.target.matches(this.options.selectorPageForward)) {\n        const detail = {\n          initialEvt: evt,\n          element: evt.target,\n          direction: 'forward',\n        };\n        this.emitEvent(this.options.eventPageChange, detail);\n      }\n    });\n\n    this.element.addEventListener('input', (evt) => {\n      if (evt.target.matches(this.options.selectorItemsPerPageInput)) {\n        const detail = {\n          initialEvt: evt,\n          element: evt.target,\n          value: evt.target.value,\n        };\n        this.emitEvent(this.options.eventItemsPerPage, detail);\n      } else if (evt.target.matches(this.options.selectorPageNumberInput)) {\n        const detail = {\n          initialEvt: evt,\n          element: evt.target,\n          value: evt.target.value,\n        };\n        this.emitEvent(this.options.eventPageNumber, detail);\n      }\n    });\n  }\n\n  /**\n   * Dispatches a custom event\n   * @param {String} evtName name of the event to be dispatched.\n   * @param {Object} detail contains the original event and any other necessary details.\n   */\n  emitEvent = (evtName, detail) => {\n    const event = new CustomEvent(`${evtName}`, {\n      bubbles: true,\n      cancelable: true,\n      detail,\n    });\n\n    this.element.dispatchEvent(event);\n  }\n\n  /**\n   * Instantiates a pagination component of the given element.\n   * @param {HTMLElement} element The element working as a pagination component.\n   * @param {Object} [options] The component options.\n  * @property {string} [selectorInit] The CSS selector to find pagination components.\n  * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n  * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n  * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n  * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n  * @property {string} [eventItemsPerPage]\n  *   The name of the custom event fired when a user changes the number of items per page.\n  *   event.detail.value contains the number of items a user wishes to see.\n  * @property {string} [eventPageNumber]\n  *   The name of the custom event fired when a user inputs a specific page number.\n  *   event.detail.value contains the value that the user input.\n  * @property {string} [eventPageChange]\n  *   The name of the custom event fired when a user goes forward or backward a page.\n  *   event.detail.direction contains the direction a user wishes to go.\n  */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n  * Sets up the given node to instantiate a pagination component in.\n  * If the given element indicates that it's an pagination component, instantiates it.\n  * Otherwise, lazily instantiates pagination component when it's clicked on.\n  * @param {Node} target The DOM node to instantiate pagination component in. Should be a document or an element.\n  * @param {Object} [options] The component options.\n  * @property {string} [selectorInit] The CSS selector to find pagination components.\n  * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n  * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n  * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n  * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n  * @property {string} [eventItemsPerPage]\n  *   The name of the custom event fired when a user changes the number of items per page.\n  *   event.detail.value contains the number of items a user wishes to see.\n  * @property {string} [eventPageNumber]\n  *   The name of the custom event fired when a user inputs a specific page number.\n  *   event.detail.value contains the value that the user input.\n  * @property {string} [eventPageChange]\n  *   The name of the custom event fired when a user goes forward or backward a page.\n  *   event.detail.direction contains the direction a user wishes to go.\n  */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n}\n\n/**\n * The map associating DOM element and pagination instance.\n * @type {WeakMap}\n */\nPagination.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode Pagination.create .create()}, or {@linkcode Pagination.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode Pagination.init .init()} works.\n * @property {string} [selectorInit] The CSS selector to find pagination components.\n * @property {string} [selectorItemsPerPageInput] The CSS selector to find the input that determines the number of items per page.\n * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.\n * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.\n * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.\n * @property {string} [eventItemsPerPage]\n *   The name of the custom event fired when a user changes the number of items per page.\n *   event.detail.value contains the number of items a user wishes to see.\n * @property {string} [eventPageNumber]\n *   The name of the custom event fired when a user inputs a specific page number.\n *   event.detail.value contains the value that the user input.\n * @property {string} [eventPageChange]\n *   The name of the custom event fired when a user goes forward or backward a page.\n *   event.detail.direction contains the direction a user wishes to go.\n */\nPagination.options = {\n  selectorInit: '[data-pagination]',\n  selectorItemsPerPageInput: '[data-items-per-page]',\n  selectorPageNumberInput: '[data-page-number-input]',\n  selectorPageBackward: '[data-page-backward]',\n  selectorPageForward: '[data-page-forward]',\n  eventItemsPerPage: 'itemsPerPage',\n  eventPageNumber: 'pageNumber',\n  eventPageChange: 'pageChange',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/pagination.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\nimport toggleClass from '../polyfills/toggle-class';\n\nexport default class SearchWithOptions {\n  /**\n   * Search with Options.\n   * @implements Component\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorToggleLayoutBtn] The data attribute selector for the button that toggles between the layouts.\n   * @param {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.\n   * @param {string} [options.classHiddenContainer] The class selector for a hidden container.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n\n    this.options = Object.assign(this.constructor.options, options);\n\n    this.constructor.components.set(this.element, this);\n\n    this.element.querySelector(this.options.selectorToggleLayoutBtn).addEventListener('click', (evt) => this.toggleLayout(evt));\n  }\n\n  /**\n   * Instantiates a search component of the given element.\n   * @param {HTMLElement} element The element working as the search component.\n   * @param {Object} [options] The component options\n   */\n  static create(element, options) {\n    return this.components.get(element) || new this(element, options);\n  }\n\n  /**\n   * Instantiates a search component in the given node.\n   * If the given element indicates that it's a search component (having `data-search-with-options` attribute), instantiates it.\n   * Otherwise, instantiates the search component by searching for the search component in the given node.\n   * @param {Node} target The DOM node to instantiate the search component in. Should be a document or an element..\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorInit] The CSS selector to find unified headers.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target, effectiveOptions);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element, effectiveOptions));\n    }\n  }\n\n  /**\n   * Toggles between the grid and list layout.\n   * @param {Event} event The event triggering this method.\n   */\n  toggleLayout(evt) {\n    const btn = evt.currentTarget;\n    const iconContainers = [... btn.querySelectorAll(this.options.selectorIconContainer)];\n    iconContainers.forEach(container => {\n      const isHidden = container.classList.contains(this.options.classHiddenContainer);\n      toggleClass(container, this.options.classHiddenContainer, !isHidden);\n    });\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and content switcher set instance.\n   * @member SearchWithOptions.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode SearchWithOptions.create .create()}, or {@linkcode SearchWithOptions.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode SearchWithOptions.init .init()} works.\n   * @member SearchWithOptions.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find search UIs with options.\n   */\n  static options = {\n    selectorInit: '[data-search-with-options]',\n    selectorToggleLayoutBtn: '[data-search-toggle-btn]',\n    selectorIconContainer: '[data-search-toggle-layout]',\n    classHiddenContainer: 'bx--search__toggle-layout__container--hidden',\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/search-with-options.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\nimport '../polyfills/custom-event';\n\nexport default class Accordion {\n  /**\n   * Accordion.\n   * @implements Component\n   * @param {HTMLElement} element The element working as an accordion.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.constructor.components.set(this.element, this);\n\n    [... this.element.querySelectorAll(this.options.accordionItem)].forEach(item => {\n      item.addEventListener('click', (event) => this.handleClick(event));\n    });\n  }\n\n  /**\n   * Instantiates accordion of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates accordion UI in the given node.\n   * If the given element indicates that it's an accordion UI, instantiates it.\n   * Otherwise, instantiates accordion UIs by searching for accordion UIs in the given node.\n   * @param {Node} target The DOM node to instantiate accordion UIs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find accordion UIs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n  handleClick(event) {\n    event.currentTarget.classList.toggle('bx--accordion__item--active');\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n}\n\n/**\n * The map associating DOM element and accordion UI instance.\n * @type {WeakMap}\n */\nAccordion.components = new WeakMap();\n\n/**\n * The component options.\n * If `options` is specified in the constructor, {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n * @property {string} selectorInit The CSS selector to find accordion UIs.\n */\nAccordion.options = {\n  selectorInit: '[data-accordion]',\n  accordionItem: '[data-accordion-item]',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/accordion.js\n **/","import '../polyfills/array-from';\nimport '../polyfills/custom-event';\nimport '../polyfills/element-matches';\nimport '../polyfills/object-assign';\n\nexport default class CopyBtn {\n  /**\n   * CopyBtn UI.\n   * @implements Component\n   * @param {HTMLElement} element The element working as a copy button UI.\n   */\n  constructor(element, options = {}) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n\n    this.element = element;\n    this.constructor.components.set(this.element, this);\n\n    this.options = Object.assign(Object.create(this.constructor.options), options);\n    this.element.addEventListener('click', () => this.handleClick());\n  }\n\n  /**\n   * Instantiates copy button UI of the given element.\n   * @param {HTMLElement} element The element.\n   */\n  static create(element) {\n    return this.components.get(element) || new this(element);\n  }\n\n  /**\n   * Instantiates copy button UI in the given node.\n   * If the given element indicates that it's an copy button UI, instantiates it.\n   * Otherwise, instantiates copy button UIs by searching for copy button UIs in the given node.\n   * @param {Node} target The DOM node to instantiate copy button UIs in. Should be a document or an element.\n   * @param {Object} [options] The component options.\n   * @param {boolean} [options.selectorInit] The CSS selector to find copy button UIs.\n   */\n  static init(target = document, options = {}) {\n    const effectiveOptions = Object.assign(Object.create(this.options), options);\n    if (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n      throw new Error('DOM document or DOM element should be given to search for and initialize this widget.');\n    }\n    if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n      this.create(target);\n    } else {\n      [... target.querySelectorAll(effectiveOptions.selectorInit)].forEach(element => this.create(element));\n    }\n  }\n\n  /**\n   * Show the feedback tooltip on click. Hide the feedback tooltip after specified timeout value.\n   */\n  handleClick() {\n    const feedback = this.element.querySelector(this.options.feedbackTooltip);\n    feedback.classList.add(this.options.classShowFeedback);\n    setTimeout(() => {\n      feedback.classList.remove(this.options.classShowFeedback);\n    }, this.options.timeoutValue);\n  }\n\n  release() {\n    this.constructor.components.delete(this.element);\n  }\n\n  /**\n   * The map associating DOM element and copy button UI instance.\n   * @member CopyBtn.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode CopyBtn.create .create()}, or {@linkcode CopyBtn.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode CopyBtn.init .init()} works.\n   * @member CopyBtn.options\n   * @type {Object}\n   * @property {string} selectorInit The data attribute to find copy button UIs.\n   * @property {string} feedbackTooltip The data attribute to find feedback tooltip.\n   * @property {string} classShowFeedback The CSS selector for showing the feedback tooltip.\n   * @property {number} timeoutValue The specified timeout value before the feedback tooltip is hidden.\n   */\n  static options = {\n    selectorInit: '[data-copy-btn]',\n    feedbackTooltip: '[data-feedback]',\n    classShowFeedback: 'bx--btn--copy__feedback--displayed',\n    timeoutValue: 2000,\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./consumables/js/es2015/copy-btn.js\n **/"],"sourceRoot":""}