//-----------------------------
// Overflow Menu
//-----------------------------

@import '../../globals/scss/colors';
@import '../../globals/scss/vars';
@import '../../globals/scss/mixins';
@import '../../globals/scss/layer';
@import '../../globals/scss/layout';
@import '../../globals/scss/typography';
@import '../../globals/scss/import-once';

@include exports('overflow-menu') {

.bx--overflow-menu {
  @include reset;
  display: flex;
  width: 2rem;
  margin: 0 1rem 0 1rem;
  cursor: pointer;
  position: relative;

  // horizontal rule styling
  hr {
    margin: .25rem 0 0;
    border: none;
    border-bottom: 1px solid $ui-04;
  }

  // Initial styling for the options pane
  &__options {
    @include reset;
    @include layer('overlay');
    list-style: none;
    left: auto;
    right: rem(-20px);
    position: absolute;
    display: none;
    padding: .5rem 0 .5rem;
    margin: 2.2rem 0 0 -10rem;
    z-index: z('overflowOptions');
    background: $ui-01;
    border: 1px solid $ui-04;

    // rectangle to make little arrow
    &:before {
      position: absolute;
      top: -.45rem;
      right: rem(30px);
      z-index: z('overflowHidden');
      display: block;
      width: .75rem;
      height: .75rem;
      background-color: $ui-01;
      border-top: 1px solid $ui-04;
      border-left: 1px solid $ui-04;
      content: '';
      transform: rotate(45deg);
    }
  }

  &__btn,
  &__btn--delete {
    @include reset;
    @include helvetica;
    @include font-size('14');
    width: 100%;
    padding: .5rem 1rem;
    font-weight: 400;
    color: $text-01;
    text-align: left;
    cursor: pointer;
    background: none;
    border: none;

    &:hover {
      background: $brand-01;
      color: $inverse-01;
    }

    &--delete:hover {
      background-color: $support-01;
    }
  }

  &__icon {
    height: 20px;
    fill: $ui-05;
  }

  &:active,
  &.bx--overflow-menu--open {
    .bx--overflow-menu__options {
      display: block;
    }
  }

  &.bx--overflow-menu--open {
    display: flex;
  }

  &--open {
    display: block;
  }
}

}
